schema {
  query: Query
  subscription: Subscription
}

"Marks the GraphQL type as indexable entity.  Each type that should be an entity is required to be annotated with this directive."
directive @entity on OBJECT

"Defined a Subgraph ID for an object type"
directive @subgraphId(id: String!) on OBJECT

"creates a virtual field on the entity that may be queried but cannot be set manually through the mappings API."
directive @derivedFrom(field: String!) on FIELD_DEFINITION

"""
A state channel Allocation representing a single Indexer-SubgraphDeployment stake

"""
type ANALYTICS__Allocation {
  """Channel Address"""
  id: ID!
  """Indexer of this allocation"""
  indexer: ANALYTICS__Indexer!
  """Creator of the allocation - can be the operator or the indexer"""
  creator: ANALYTICS__Bytes!
  """
  If the Allocation is active it shows the indexer. If closed, it is null
  """
  activeForIndexer: ANALYTICS__Indexer
  """Subgraph deployment that is being allocated to"""
  subgraphDeployment: ANALYTICS__SubgraphDeployment!
  """Tokens allocation in this allocation"""
  allocatedTokens: BigInt!
  """Effective allocation that is realized upon closing"""
  effectiveAllocation: BigInt!
  """Epoch this allocation was created"""
  createdAtEpoch: Int!
  """Block at which this allocation was created"""
  createdAtBlockHash: ANALYTICS__Bytes!
  """Epoch this allocation was closed in"""
  closedAtEpoch: Int!
  """Block hash at which this allocation was closed"""
  closedAtBlockHash: ANALYTICS__Bytes
  """Block number at which this allocation was closed"""
  closedAtBlockNumber: Int
  """
  Fees this allocation collected from query fees upon closing. Excludes curator reward and protocol tax
  """
  queryFeesCollected: BigInt!
  """
  Query fee rebate amount claimed from the protocol through cobbs douglas. Does not include portion given to delegators
  """
  queryFeeRebates: BigInt!
  """Curator rewards deposited to the curating bonding curve"""
  curatorRewards: BigInt!
  """
  Indexing rewards earned by this allocation. Includes delegator and indexer rewards
  """
  indexingRewards: BigInt!
  """Indexing rewards earned by this allocation by indexers"""
  indexingIndexerRewards: BigInt!
  """Indexing rewards earned by this allocation by delegators"""
  indexingDelegatorRewards: BigInt!
  """Pool in which this allocation was closed"""
  poolClosedIn: ANALYTICS__Pool
  """Fees paid out to delegators"""
  delegationFees: BigInt!
  """Status of the allocation"""
  status: ANALYTICS__AllocationStatus!
  """Timestamp this allocation was created at"""
  createdAt: Int!
  """POI submitted with a closed allocation"""
  poi: ANALYTICS__Bytes
  """NOT IMPLEMENTED - Return for this allocation"""
  totalReturn: ANALYTICS__BigDecimal!
  """NOT IMPLEMENTED - Yearly annualzied return"""
  annualizedReturn: ANALYTICS__BigDecimal!
}

enum ANALYTICS__AllocationStatus {
  Null
  Active
  Closed
  Finalized
  Claimed
}

input ANALYTICS__Allocation_filter {
  id: ID
  id_not: ID
  id_gt: ID
  id_lt: ID
  id_gte: ID
  id_lte: ID
  id_in: [ID!]
  id_not_in: [ID!]
  indexer: String
  indexer_not: String
  indexer_gt: String
  indexer_lt: String
  indexer_gte: String
  indexer_lte: String
  indexer_in: [String!]
  indexer_not_in: [String!]
  indexer_contains: String
  indexer_contains_nocase: String
  indexer_not_contains: String
  indexer_not_contains_nocase: String
  indexer_starts_with: String
  indexer_starts_with_nocase: String
  indexer_not_starts_with: String
  indexer_not_starts_with_nocase: String
  indexer_ends_with: String
  indexer_ends_with_nocase: String
  indexer_not_ends_with: String
  indexer_not_ends_with_nocase: String
  indexer_: ANALYTICS__Indexer_filter
  creator: ANALYTICS__Bytes
  creator_not: ANALYTICS__Bytes
  creator_gt: ANALYTICS__Bytes
  creator_lt: ANALYTICS__Bytes
  creator_gte: ANALYTICS__Bytes
  creator_lte: ANALYTICS__Bytes
  creator_in: [ANALYTICS__Bytes!]
  creator_not_in: [ANALYTICS__Bytes!]
  creator_contains: ANALYTICS__Bytes
  creator_not_contains: ANALYTICS__Bytes
  activeForIndexer: String
  activeForIndexer_not: String
  activeForIndexer_gt: String
  activeForIndexer_lt: String
  activeForIndexer_gte: String
  activeForIndexer_lte: String
  activeForIndexer_in: [String!]
  activeForIndexer_not_in: [String!]
  activeForIndexer_contains: String
  activeForIndexer_contains_nocase: String
  activeForIndexer_not_contains: String
  activeForIndexer_not_contains_nocase: String
  activeForIndexer_starts_with: String
  activeForIndexer_starts_with_nocase: String
  activeForIndexer_not_starts_with: String
  activeForIndexer_not_starts_with_nocase: String
  activeForIndexer_ends_with: String
  activeForIndexer_ends_with_nocase: String
  activeForIndexer_not_ends_with: String
  activeForIndexer_not_ends_with_nocase: String
  activeForIndexer_: ANALYTICS__Indexer_filter
  subgraphDeployment: String
  subgraphDeployment_not: String
  subgraphDeployment_gt: String
  subgraphDeployment_lt: String
  subgraphDeployment_gte: String
  subgraphDeployment_lte: String
  subgraphDeployment_in: [String!]
  subgraphDeployment_not_in: [String!]
  subgraphDeployment_contains: String
  subgraphDeployment_contains_nocase: String
  subgraphDeployment_not_contains: String
  subgraphDeployment_not_contains_nocase: String
  subgraphDeployment_starts_with: String
  subgraphDeployment_starts_with_nocase: String
  subgraphDeployment_not_starts_with: String
  subgraphDeployment_not_starts_with_nocase: String
  subgraphDeployment_ends_with: String
  subgraphDeployment_ends_with_nocase: String
  subgraphDeployment_not_ends_with: String
  subgraphDeployment_not_ends_with_nocase: String
  subgraphDeployment_: ANALYTICS__SubgraphDeployment_filter
  allocatedTokens: BigInt
  allocatedTokens_not: BigInt
  allocatedTokens_gt: BigInt
  allocatedTokens_lt: BigInt
  allocatedTokens_gte: BigInt
  allocatedTokens_lte: BigInt
  allocatedTokens_in: [BigInt!]
  allocatedTokens_not_in: [BigInt!]
  effectiveAllocation: BigInt
  effectiveAllocation_not: BigInt
  effectiveAllocation_gt: BigInt
  effectiveAllocation_lt: BigInt
  effectiveAllocation_gte: BigInt
  effectiveAllocation_lte: BigInt
  effectiveAllocation_in: [BigInt!]
  effectiveAllocation_not_in: [BigInt!]
  createdAtEpoch: Int
  createdAtEpoch_not: Int
  createdAtEpoch_gt: Int
  createdAtEpoch_lt: Int
  createdAtEpoch_gte: Int
  createdAtEpoch_lte: Int
  createdAtEpoch_in: [Int!]
  createdAtEpoch_not_in: [Int!]
  createdAtBlockHash: ANALYTICS__Bytes
  createdAtBlockHash_not: ANALYTICS__Bytes
  createdAtBlockHash_gt: ANALYTICS__Bytes
  createdAtBlockHash_lt: ANALYTICS__Bytes
  createdAtBlockHash_gte: ANALYTICS__Bytes
  createdAtBlockHash_lte: ANALYTICS__Bytes
  createdAtBlockHash_in: [ANALYTICS__Bytes!]
  createdAtBlockHash_not_in: [ANALYTICS__Bytes!]
  createdAtBlockHash_contains: ANALYTICS__Bytes
  createdAtBlockHash_not_contains: ANALYTICS__Bytes
  closedAtEpoch: Int
  closedAtEpoch_not: Int
  closedAtEpoch_gt: Int
  closedAtEpoch_lt: Int
  closedAtEpoch_gte: Int
  closedAtEpoch_lte: Int
  closedAtEpoch_in: [Int!]
  closedAtEpoch_not_in: [Int!]
  closedAtBlockHash: ANALYTICS__Bytes
  closedAtBlockHash_not: ANALYTICS__Bytes
  closedAtBlockHash_gt: ANALYTICS__Bytes
  closedAtBlockHash_lt: ANALYTICS__Bytes
  closedAtBlockHash_gte: ANALYTICS__Bytes
  closedAtBlockHash_lte: ANALYTICS__Bytes
  closedAtBlockHash_in: [ANALYTICS__Bytes!]
  closedAtBlockHash_not_in: [ANALYTICS__Bytes!]
  closedAtBlockHash_contains: ANALYTICS__Bytes
  closedAtBlockHash_not_contains: ANALYTICS__Bytes
  closedAtBlockNumber: Int
  closedAtBlockNumber_not: Int
  closedAtBlockNumber_gt: Int
  closedAtBlockNumber_lt: Int
  closedAtBlockNumber_gte: Int
  closedAtBlockNumber_lte: Int
  closedAtBlockNumber_in: [Int!]
  closedAtBlockNumber_not_in: [Int!]
  queryFeesCollected: BigInt
  queryFeesCollected_not: BigInt
  queryFeesCollected_gt: BigInt
  queryFeesCollected_lt: BigInt
  queryFeesCollected_gte: BigInt
  queryFeesCollected_lte: BigInt
  queryFeesCollected_in: [BigInt!]
  queryFeesCollected_not_in: [BigInt!]
  queryFeeRebates: BigInt
  queryFeeRebates_not: BigInt
  queryFeeRebates_gt: BigInt
  queryFeeRebates_lt: BigInt
  queryFeeRebates_gte: BigInt
  queryFeeRebates_lte: BigInt
  queryFeeRebates_in: [BigInt!]
  queryFeeRebates_not_in: [BigInt!]
  curatorRewards: BigInt
  curatorRewards_not: BigInt
  curatorRewards_gt: BigInt
  curatorRewards_lt: BigInt
  curatorRewards_gte: BigInt
  curatorRewards_lte: BigInt
  curatorRewards_in: [BigInt!]
  curatorRewards_not_in: [BigInt!]
  indexingRewards: BigInt
  indexingRewards_not: BigInt
  indexingRewards_gt: BigInt
  indexingRewards_lt: BigInt
  indexingRewards_gte: BigInt
  indexingRewards_lte: BigInt
  indexingRewards_in: [BigInt!]
  indexingRewards_not_in: [BigInt!]
  indexingIndexerRewards: BigInt
  indexingIndexerRewards_not: BigInt
  indexingIndexerRewards_gt: BigInt
  indexingIndexerRewards_lt: BigInt
  indexingIndexerRewards_gte: BigInt
  indexingIndexerRewards_lte: BigInt
  indexingIndexerRewards_in: [BigInt!]
  indexingIndexerRewards_not_in: [BigInt!]
  indexingDelegatorRewards: BigInt
  indexingDelegatorRewards_not: BigInt
  indexingDelegatorRewards_gt: BigInt
  indexingDelegatorRewards_lt: BigInt
  indexingDelegatorRewards_gte: BigInt
  indexingDelegatorRewards_lte: BigInt
  indexingDelegatorRewards_in: [BigInt!]
  indexingDelegatorRewards_not_in: [BigInt!]
  poolClosedIn: String
  poolClosedIn_not: String
  poolClosedIn_gt: String
  poolClosedIn_lt: String
  poolClosedIn_gte: String
  poolClosedIn_lte: String
  poolClosedIn_in: [String!]
  poolClosedIn_not_in: [String!]
  poolClosedIn_contains: String
  poolClosedIn_contains_nocase: String
  poolClosedIn_not_contains: String
  poolClosedIn_not_contains_nocase: String
  poolClosedIn_starts_with: String
  poolClosedIn_starts_with_nocase: String
  poolClosedIn_not_starts_with: String
  poolClosedIn_not_starts_with_nocase: String
  poolClosedIn_ends_with: String
  poolClosedIn_ends_with_nocase: String
  poolClosedIn_not_ends_with: String
  poolClosedIn_not_ends_with_nocase: String
  poolClosedIn_: ANALYTICS__Pool_filter
  delegationFees: BigInt
  delegationFees_not: BigInt
  delegationFees_gt: BigInt
  delegationFees_lt: BigInt
  delegationFees_gte: BigInt
  delegationFees_lte: BigInt
  delegationFees_in: [BigInt!]
  delegationFees_not_in: [BigInt!]
  status: ANALYTICS__AllocationStatus
  status_not: ANALYTICS__AllocationStatus
  status_in: [ANALYTICS__AllocationStatus!]
  status_not_in: [ANALYTICS__AllocationStatus!]
  createdAt: Int
  createdAt_not: Int
  createdAt_gt: Int
  createdAt_lt: Int
  createdAt_gte: Int
  createdAt_lte: Int
  createdAt_in: [Int!]
  createdAt_not_in: [Int!]
  poi: ANALYTICS__Bytes
  poi_not: ANALYTICS__Bytes
  poi_gt: ANALYTICS__Bytes
  poi_lt: ANALYTICS__Bytes
  poi_gte: ANALYTICS__Bytes
  poi_lte: ANALYTICS__Bytes
  poi_in: [ANALYTICS__Bytes!]
  poi_not_in: [ANALYTICS__Bytes!]
  poi_contains: ANALYTICS__Bytes
  poi_not_contains: ANALYTICS__Bytes
  totalReturn: ANALYTICS__BigDecimal
  totalReturn_not: ANALYTICS__BigDecimal
  totalReturn_gt: ANALYTICS__BigDecimal
  totalReturn_lt: ANALYTICS__BigDecimal
  totalReturn_gte: ANALYTICS__BigDecimal
  totalReturn_lte: ANALYTICS__BigDecimal
  totalReturn_in: [ANALYTICS__BigDecimal!]
  totalReturn_not_in: [ANALYTICS__BigDecimal!]
  annualizedReturn: ANALYTICS__BigDecimal
  annualizedReturn_not: ANALYTICS__BigDecimal
  annualizedReturn_gt: ANALYTICS__BigDecimal
  annualizedReturn_lt: ANALYTICS__BigDecimal
  annualizedReturn_gte: ANALYTICS__BigDecimal
  annualizedReturn_lte: ANALYTICS__BigDecimal
  annualizedReturn_in: [ANALYTICS__BigDecimal!]
  annualizedReturn_not_in: [ANALYTICS__BigDecimal!]
  """Filter for the block changed event."""
  _change_block: ANALYTICS__BlockChangedFilter
}

enum ANALYTICS__Allocation_orderBy {
  id
  indexer
  creator
  activeForIndexer
  subgraphDeployment
  allocatedTokens
  effectiveAllocation
  createdAtEpoch
  createdAtBlockHash
  closedAtEpoch
  closedAtBlockHash
  closedAtBlockNumber
  queryFeesCollected
  queryFeeRebates
  curatorRewards
  indexingRewards
  indexingIndexerRewards
  indexingDelegatorRewards
  poolClosedIn
  delegationFees
  status
  createdAt
  poi
  totalReturn
  annualizedReturn
}

scalar ANALYTICS__BigDecimal

scalar BigInt

input ANALYTICS__BlockChangedFilter {
  number_gte: Int!
}

input ANALYTICS__Block_height {
  hash: ANALYTICS__Bytes
  number: Int
  number_gte: Int
}

scalar ANALYTICS__Bytes

"""
Curator with all Signals and metrics

"""
type ANALYTICS__Curator {
  """Eth address of the Curator"""
  id: ID!
  """Time this curator was created"""
  createdAt: Int!
  """CUMULATIVE tokens signalled on all the subgraphs"""
  totalSignalledTokens: BigInt!
  """CUMULATIVE tokens unsignalled on all the subgraphs"""
  totalUnsignalledTokens: BigInt!
  """Subgraphs the curator is curating"""
  signals(skip: Int = 0, first: Int = 100, orderBy: ANALYTICS__Signal_orderBy, orderDirection: ANALYTICS__OrderDirection, where: ANALYTICS__Signal_filter): [ANALYTICS__Signal!]!
  """CUMULATIVE tokens signalled on all names"""
  totalNameSignalledTokens: BigInt!
  """CUMULATIVE tokens unsignalled on all names"""
  totalNameUnsignalledTokens: BigInt!
  """CUMULATIVE withdrawn tokens from deprecated subgraphs"""
  totalWithdrawnTokens: BigInt!
  """Subgraphs the curator is curating"""
  nameSignals(skip: Int = 0, first: Int = 100, orderBy: ANALYTICS__NameSignal_orderBy, orderDirection: ANALYTICS__OrderDirection, where: ANALYTICS__NameSignal_filter): [ANALYTICS__NameSignal!]!
  """NOT IMPLEMENTED - Summation of realized rewards from all Signals"""
  realizedRewards: BigInt!
  """NOT IMPLEMENTED - Annualized rate of return on curator signal"""
  annualizedReturn: ANALYTICS__BigDecimal!
  """NOT IMPLEMENTED - Total return of the curator"""
  totalReturn: ANALYTICS__BigDecimal!
  """NOT IMPLEMENTED - Signaling efficiency of the curator"""
  signalingEfficiency: ANALYTICS__BigDecimal!
  """CURRENT summed name signal for all bonding curves"""
  totalNameSignal: ANALYTICS__BigDecimal!
  """Total curator cost basis of all shares purchased on all bonding curves"""
  totalNameSignalAverageCostBasis: ANALYTICS__BigDecimal!
  """totalNameSignalCostBasis / totalNameSignal"""
  totalAverageCostBasisPerNameSignal: ANALYTICS__BigDecimal!
}

input ANALYTICS__Curator_filter {
  id: ID
  id_not: ID
  id_gt: ID
  id_lt: ID
  id_gte: ID
  id_lte: ID
  id_in: [ID!]
  id_not_in: [ID!]
  createdAt: Int
  createdAt_not: Int
  createdAt_gt: Int
  createdAt_lt: Int
  createdAt_gte: Int
  createdAt_lte: Int
  createdAt_in: [Int!]
  createdAt_not_in: [Int!]
  totalSignalledTokens: BigInt
  totalSignalledTokens_not: BigInt
  totalSignalledTokens_gt: BigInt
  totalSignalledTokens_lt: BigInt
  totalSignalledTokens_gte: BigInt
  totalSignalledTokens_lte: BigInt
  totalSignalledTokens_in: [BigInt!]
  totalSignalledTokens_not_in: [BigInt!]
  totalUnsignalledTokens: BigInt
  totalUnsignalledTokens_not: BigInt
  totalUnsignalledTokens_gt: BigInt
  totalUnsignalledTokens_lt: BigInt
  totalUnsignalledTokens_gte: BigInt
  totalUnsignalledTokens_lte: BigInt
  totalUnsignalledTokens_in: [BigInt!]
  totalUnsignalledTokens_not_in: [BigInt!]
  signals_: ANALYTICS__Signal_filter
  totalNameSignalledTokens: BigInt
  totalNameSignalledTokens_not: BigInt
  totalNameSignalledTokens_gt: BigInt
  totalNameSignalledTokens_lt: BigInt
  totalNameSignalledTokens_gte: BigInt
  totalNameSignalledTokens_lte: BigInt
  totalNameSignalledTokens_in: [BigInt!]
  totalNameSignalledTokens_not_in: [BigInt!]
  totalNameUnsignalledTokens: BigInt
  totalNameUnsignalledTokens_not: BigInt
  totalNameUnsignalledTokens_gt: BigInt
  totalNameUnsignalledTokens_lt: BigInt
  totalNameUnsignalledTokens_gte: BigInt
  totalNameUnsignalledTokens_lte: BigInt
  totalNameUnsignalledTokens_in: [BigInt!]
  totalNameUnsignalledTokens_not_in: [BigInt!]
  totalWithdrawnTokens: BigInt
  totalWithdrawnTokens_not: BigInt
  totalWithdrawnTokens_gt: BigInt
  totalWithdrawnTokens_lt: BigInt
  totalWithdrawnTokens_gte: BigInt
  totalWithdrawnTokens_lte: BigInt
  totalWithdrawnTokens_in: [BigInt!]
  totalWithdrawnTokens_not_in: [BigInt!]
  nameSignals_: ANALYTICS__NameSignal_filter
  realizedRewards: BigInt
  realizedRewards_not: BigInt
  realizedRewards_gt: BigInt
  realizedRewards_lt: BigInt
  realizedRewards_gte: BigInt
  realizedRewards_lte: BigInt
  realizedRewards_in: [BigInt!]
  realizedRewards_not_in: [BigInt!]
  annualizedReturn: ANALYTICS__BigDecimal
  annualizedReturn_not: ANALYTICS__BigDecimal
  annualizedReturn_gt: ANALYTICS__BigDecimal
  annualizedReturn_lt: ANALYTICS__BigDecimal
  annualizedReturn_gte: ANALYTICS__BigDecimal
  annualizedReturn_lte: ANALYTICS__BigDecimal
  annualizedReturn_in: [ANALYTICS__BigDecimal!]
  annualizedReturn_not_in: [ANALYTICS__BigDecimal!]
  totalReturn: ANALYTICS__BigDecimal
  totalReturn_not: ANALYTICS__BigDecimal
  totalReturn_gt: ANALYTICS__BigDecimal
  totalReturn_lt: ANALYTICS__BigDecimal
  totalReturn_gte: ANALYTICS__BigDecimal
  totalReturn_lte: ANALYTICS__BigDecimal
  totalReturn_in: [ANALYTICS__BigDecimal!]
  totalReturn_not_in: [ANALYTICS__BigDecimal!]
  signalingEfficiency: ANALYTICS__BigDecimal
  signalingEfficiency_not: ANALYTICS__BigDecimal
  signalingEfficiency_gt: ANALYTICS__BigDecimal
  signalingEfficiency_lt: ANALYTICS__BigDecimal
  signalingEfficiency_gte: ANALYTICS__BigDecimal
  signalingEfficiency_lte: ANALYTICS__BigDecimal
  signalingEfficiency_in: [ANALYTICS__BigDecimal!]
  signalingEfficiency_not_in: [ANALYTICS__BigDecimal!]
  totalNameSignal: ANALYTICS__BigDecimal
  totalNameSignal_not: ANALYTICS__BigDecimal
  totalNameSignal_gt: ANALYTICS__BigDecimal
  totalNameSignal_lt: ANALYTICS__BigDecimal
  totalNameSignal_gte: ANALYTICS__BigDecimal
  totalNameSignal_lte: ANALYTICS__BigDecimal
  totalNameSignal_in: [ANALYTICS__BigDecimal!]
  totalNameSignal_not_in: [ANALYTICS__BigDecimal!]
  totalNameSignalAverageCostBasis: ANALYTICS__BigDecimal
  totalNameSignalAverageCostBasis_not: ANALYTICS__BigDecimal
  totalNameSignalAverageCostBasis_gt: ANALYTICS__BigDecimal
  totalNameSignalAverageCostBasis_lt: ANALYTICS__BigDecimal
  totalNameSignalAverageCostBasis_gte: ANALYTICS__BigDecimal
  totalNameSignalAverageCostBasis_lte: ANALYTICS__BigDecimal
  totalNameSignalAverageCostBasis_in: [ANALYTICS__BigDecimal!]
  totalNameSignalAverageCostBasis_not_in: [ANALYTICS__BigDecimal!]
  totalAverageCostBasisPerNameSignal: ANALYTICS__BigDecimal
  totalAverageCostBasisPerNameSignal_not: ANALYTICS__BigDecimal
  totalAverageCostBasisPerNameSignal_gt: ANALYTICS__BigDecimal
  totalAverageCostBasisPerNameSignal_lt: ANALYTICS__BigDecimal
  totalAverageCostBasisPerNameSignal_gte: ANALYTICS__BigDecimal
  totalAverageCostBasisPerNameSignal_lte: ANALYTICS__BigDecimal
  totalAverageCostBasisPerNameSignal_in: [ANALYTICS__BigDecimal!]
  totalAverageCostBasisPerNameSignal_not_in: [ANALYTICS__BigDecimal!]
  """Filter for the block changed event."""
  _change_block: ANALYTICS__BlockChangedFilter
}

enum ANALYTICS__Curator_orderBy {
  id
  createdAt
  totalSignalledTokens
  totalUnsignalledTokens
  signals
  totalNameSignalledTokens
  totalNameUnsignalledTokens
  totalWithdrawnTokens
  nameSignals
  realizedRewards
  annualizedReturn
  totalReturn
  signalingEfficiency
  totalNameSignal
  totalNameSignalAverageCostBasis
  totalAverageCostBasisPerNameSignal
}

"""
Delegator stake for a single Indexer

"""
type ANALYTICS__DelegatedStake {
  """Concatenation of Delegator address and Indexer address"""
  id: ID!
  """Index the stake is delegated to"""
  indexer: ANALYTICS__Indexer!
  """Delegator"""
  delegator: ANALYTICS__Delegator!
  """
  [POSSIBLE DEPRECATION] CURRENT tokens staked. Old stakedTokens implementation renamed to totalStakedTokens (19/03/21)
  """
  stakedTokens: BigInt!
  """CURRENT tokens locked"""
  lockedTokens: BigInt!
  """Epoch the locked tokens get unlocked"""
  lockedUntil: Int!
  """
  Shares owned in the delegator pool. Used to calculate total amount delegated
  """
  shareAmount: BigInt!
  """
  The rate this delegator paid for their shares (calculated using average cost basis). Used for rewards calculations
  """
  personalExchangeRate: ANALYTICS__BigDecimal!
  """Realized rewards from undelegating and realizing a reward"""
  realizedRewards: ANALYTICS__BigDecimal!
  """
  [CURRENT] Latest known value for share exchange rate. Should reflect the same value as 'delegationExchangeRate' on the related Indexer
  """
  latestIndexerExchangeRate: ANALYTICS__BigDecimal!
  """[CURRENT] Rewards not yet withdrawn, but already distributed."""
  unrealizedRewards: ANALYTICS__BigDecimal!
  """
  [CURRENT] Original value of the delegation shares. Should be sharesAmount * personalExchangeRate
  """
  originalDelegation: ANALYTICS__BigDecimal!
  """
  [CURRENT] Current value of the delegation shares. Should be sharesAmount * latestIndexerExchangeRate
  """
  currentDelegation: ANALYTICS__BigDecimal!
  """CUMULATIVE tokens delegated"""
  totalStakedTokens: BigInt!
  """CUMULATIVE tokens undelegated"""
  totalUnstakedTokens: BigInt!
  """Time this delegator first delegated to an indexer"""
  createdAt: Int!
  """Last time this delegator delegated towards this indexer"""
  lastDelegatedAt: Int
  """Last time this delegator undelegated from this indexer"""
  lastUndelegatedAt: Int
  """Auxiliary entity used for batch updates"""
  relation: ANALYTICS__IndexerDelegatedStakeRelation!
}

type ANALYTICS__DelegatedStakeDailyData {
  """<DELEGATOR ADDRESS>-<INDEXER ADDRESS>-<DAY NUMBER>"""
  id: ID!
  """Timestamp for the start of the day that this entity represents. UTC+0"""
  dayStart: BigInt!
  """Timestamp for the end of the day that this entity represents. UTC+0"""
  dayEnd: BigInt!
  """
  Number of the day this entity represents. Day 0 is the network launch day.
  """
  dayNumber: Int!
  """Original entity that this daily data tracks"""
  stake: ANALYTICS__DelegatedStake!
  """Delegator entity that owns the original entity"""
  delegator: ANALYTICS__Delegator!
  """Indexer entity where the delegation resides"""
  indexer: ANALYTICS__Indexer!
  """[CURRENT] Amount of staked tokens for this day and this indexer"""
  stakedTokens: BigInt!
  """
  [CURRENT] Amount of locked tokens (undelegating) for this day and this indexer
  """
  lockedTokens: BigInt!
  """[CURRENT] Amount of shares for this day and this indexer"""
  shareAmount: BigInt!
  """
  [CURRENT] Initial exchange rate for this delegator in this indexer at this day. It will increase as an average cost basis if the delegator adds more delegation.
  """
  personalExchangeRate: ANALYTICS__BigDecimal!
  """[CURRENT] Latest delegationExchangeRate value for the indexer"""
  latestIndexerExchangeRate: ANALYTICS__BigDecimal!
  """
  [CURRENT] Unrealized rewards for the delegator on this particular stake
  """
  unrealizedRewards: ANALYTICS__BigDecimal!
  """[CURRENT] Realized rewards for the delegator on this particular stake"""
  realizedRewards: ANALYTICS__BigDecimal!
  """
  [CURRENT] Original delegation for the delegator on this particular stake
  """
  originalDelegation: ANALYTICS__BigDecimal!
  """
  [CURRENT] Current delegation for the delegator on this particular stake
  """
  currentDelegation: ANALYTICS__BigDecimal!
}

input ANALYTICS__DelegatedStakeDailyData_filter {
  id: ID
  id_not: ID
  id_gt: ID
  id_lt: ID
  id_gte: ID
  id_lte: ID
  id_in: [ID!]
  id_not_in: [ID!]
  dayStart: BigInt
  dayStart_not: BigInt
  dayStart_gt: BigInt
  dayStart_lt: BigInt
  dayStart_gte: BigInt
  dayStart_lte: BigInt
  dayStart_in: [BigInt!]
  dayStart_not_in: [BigInt!]
  dayEnd: BigInt
  dayEnd_not: BigInt
  dayEnd_gt: BigInt
  dayEnd_lt: BigInt
  dayEnd_gte: BigInt
  dayEnd_lte: BigInt
  dayEnd_in: [BigInt!]
  dayEnd_not_in: [BigInt!]
  dayNumber: Int
  dayNumber_not: Int
  dayNumber_gt: Int
  dayNumber_lt: Int
  dayNumber_gte: Int
  dayNumber_lte: Int
  dayNumber_in: [Int!]
  dayNumber_not_in: [Int!]
  stake: String
  stake_not: String
  stake_gt: String
  stake_lt: String
  stake_gte: String
  stake_lte: String
  stake_in: [String!]
  stake_not_in: [String!]
  stake_contains: String
  stake_contains_nocase: String
  stake_not_contains: String
  stake_not_contains_nocase: String
  stake_starts_with: String
  stake_starts_with_nocase: String
  stake_not_starts_with: String
  stake_not_starts_with_nocase: String
  stake_ends_with: String
  stake_ends_with_nocase: String
  stake_not_ends_with: String
  stake_not_ends_with_nocase: String
  stake_: ANALYTICS__DelegatedStake_filter
  delegator: String
  delegator_not: String
  delegator_gt: String
  delegator_lt: String
  delegator_gte: String
  delegator_lte: String
  delegator_in: [String!]
  delegator_not_in: [String!]
  delegator_contains: String
  delegator_contains_nocase: String
  delegator_not_contains: String
  delegator_not_contains_nocase: String
  delegator_starts_with: String
  delegator_starts_with_nocase: String
  delegator_not_starts_with: String
  delegator_not_starts_with_nocase: String
  delegator_ends_with: String
  delegator_ends_with_nocase: String
  delegator_not_ends_with: String
  delegator_not_ends_with_nocase: String
  delegator_: ANALYTICS__Delegator_filter
  indexer: String
  indexer_not: String
  indexer_gt: String
  indexer_lt: String
  indexer_gte: String
  indexer_lte: String
  indexer_in: [String!]
  indexer_not_in: [String!]
  indexer_contains: String
  indexer_contains_nocase: String
  indexer_not_contains: String
  indexer_not_contains_nocase: String
  indexer_starts_with: String
  indexer_starts_with_nocase: String
  indexer_not_starts_with: String
  indexer_not_starts_with_nocase: String
  indexer_ends_with: String
  indexer_ends_with_nocase: String
  indexer_not_ends_with: String
  indexer_not_ends_with_nocase: String
  indexer_: ANALYTICS__Indexer_filter
  stakedTokens: BigInt
  stakedTokens_not: BigInt
  stakedTokens_gt: BigInt
  stakedTokens_lt: BigInt
  stakedTokens_gte: BigInt
  stakedTokens_lte: BigInt
  stakedTokens_in: [BigInt!]
  stakedTokens_not_in: [BigInt!]
  lockedTokens: BigInt
  lockedTokens_not: BigInt
  lockedTokens_gt: BigInt
  lockedTokens_lt: BigInt
  lockedTokens_gte: BigInt
  lockedTokens_lte: BigInt
  lockedTokens_in: [BigInt!]
  lockedTokens_not_in: [BigInt!]
  shareAmount: BigInt
  shareAmount_not: BigInt
  shareAmount_gt: BigInt
  shareAmount_lt: BigInt
  shareAmount_gte: BigInt
  shareAmount_lte: BigInt
  shareAmount_in: [BigInt!]
  shareAmount_not_in: [BigInt!]
  personalExchangeRate: ANALYTICS__BigDecimal
  personalExchangeRate_not: ANALYTICS__BigDecimal
  personalExchangeRate_gt: ANALYTICS__BigDecimal
  personalExchangeRate_lt: ANALYTICS__BigDecimal
  personalExchangeRate_gte: ANALYTICS__BigDecimal
  personalExchangeRate_lte: ANALYTICS__BigDecimal
  personalExchangeRate_in: [ANALYTICS__BigDecimal!]
  personalExchangeRate_not_in: [ANALYTICS__BigDecimal!]
  latestIndexerExchangeRate: ANALYTICS__BigDecimal
  latestIndexerExchangeRate_not: ANALYTICS__BigDecimal
  latestIndexerExchangeRate_gt: ANALYTICS__BigDecimal
  latestIndexerExchangeRate_lt: ANALYTICS__BigDecimal
  latestIndexerExchangeRate_gte: ANALYTICS__BigDecimal
  latestIndexerExchangeRate_lte: ANALYTICS__BigDecimal
  latestIndexerExchangeRate_in: [ANALYTICS__BigDecimal!]
  latestIndexerExchangeRate_not_in: [ANALYTICS__BigDecimal!]
  unrealizedRewards: ANALYTICS__BigDecimal
  unrealizedRewards_not: ANALYTICS__BigDecimal
  unrealizedRewards_gt: ANALYTICS__BigDecimal
  unrealizedRewards_lt: ANALYTICS__BigDecimal
  unrealizedRewards_gte: ANALYTICS__BigDecimal
  unrealizedRewards_lte: ANALYTICS__BigDecimal
  unrealizedRewards_in: [ANALYTICS__BigDecimal!]
  unrealizedRewards_not_in: [ANALYTICS__BigDecimal!]
  realizedRewards: ANALYTICS__BigDecimal
  realizedRewards_not: ANALYTICS__BigDecimal
  realizedRewards_gt: ANALYTICS__BigDecimal
  realizedRewards_lt: ANALYTICS__BigDecimal
  realizedRewards_gte: ANALYTICS__BigDecimal
  realizedRewards_lte: ANALYTICS__BigDecimal
  realizedRewards_in: [ANALYTICS__BigDecimal!]
  realizedRewards_not_in: [ANALYTICS__BigDecimal!]
  originalDelegation: ANALYTICS__BigDecimal
  originalDelegation_not: ANALYTICS__BigDecimal
  originalDelegation_gt: ANALYTICS__BigDecimal
  originalDelegation_lt: ANALYTICS__BigDecimal
  originalDelegation_gte: ANALYTICS__BigDecimal
  originalDelegation_lte: ANALYTICS__BigDecimal
  originalDelegation_in: [ANALYTICS__BigDecimal!]
  originalDelegation_not_in: [ANALYTICS__BigDecimal!]
  currentDelegation: ANALYTICS__BigDecimal
  currentDelegation_not: ANALYTICS__BigDecimal
  currentDelegation_gt: ANALYTICS__BigDecimal
  currentDelegation_lt: ANALYTICS__BigDecimal
  currentDelegation_gte: ANALYTICS__BigDecimal
  currentDelegation_lte: ANALYTICS__BigDecimal
  currentDelegation_in: [ANALYTICS__BigDecimal!]
  currentDelegation_not_in: [ANALYTICS__BigDecimal!]
  """Filter for the block changed event."""
  _change_block: ANALYTICS__BlockChangedFilter
}

enum ANALYTICS__DelegatedStakeDailyData_orderBy {
  id
  dayStart
  dayEnd
  dayNumber
  stake
  delegator
  indexer
  stakedTokens
  lockedTokens
  shareAmount
  personalExchangeRate
  latestIndexerExchangeRate
  unrealizedRewards
  realizedRewards
  originalDelegation
  currentDelegation
}

input ANALYTICS__DelegatedStake_filter {
  id: ID
  id_not: ID
  id_gt: ID
  id_lt: ID
  id_gte: ID
  id_lte: ID
  id_in: [ID!]
  id_not_in: [ID!]
  indexer: String
  indexer_not: String
  indexer_gt: String
  indexer_lt: String
  indexer_gte: String
  indexer_lte: String
  indexer_in: [String!]
  indexer_not_in: [String!]
  indexer_contains: String
  indexer_contains_nocase: String
  indexer_not_contains: String
  indexer_not_contains_nocase: String
  indexer_starts_with: String
  indexer_starts_with_nocase: String
  indexer_not_starts_with: String
  indexer_not_starts_with_nocase: String
  indexer_ends_with: String
  indexer_ends_with_nocase: String
  indexer_not_ends_with: String
  indexer_not_ends_with_nocase: String
  indexer_: ANALYTICS__Indexer_filter
  delegator: String
  delegator_not: String
  delegator_gt: String
  delegator_lt: String
  delegator_gte: String
  delegator_lte: String
  delegator_in: [String!]
  delegator_not_in: [String!]
  delegator_contains: String
  delegator_contains_nocase: String
  delegator_not_contains: String
  delegator_not_contains_nocase: String
  delegator_starts_with: String
  delegator_starts_with_nocase: String
  delegator_not_starts_with: String
  delegator_not_starts_with_nocase: String
  delegator_ends_with: String
  delegator_ends_with_nocase: String
  delegator_not_ends_with: String
  delegator_not_ends_with_nocase: String
  delegator_: ANALYTICS__Delegator_filter
  stakedTokens: BigInt
  stakedTokens_not: BigInt
  stakedTokens_gt: BigInt
  stakedTokens_lt: BigInt
  stakedTokens_gte: BigInt
  stakedTokens_lte: BigInt
  stakedTokens_in: [BigInt!]
  stakedTokens_not_in: [BigInt!]
  lockedTokens: BigInt
  lockedTokens_not: BigInt
  lockedTokens_gt: BigInt
  lockedTokens_lt: BigInt
  lockedTokens_gte: BigInt
  lockedTokens_lte: BigInt
  lockedTokens_in: [BigInt!]
  lockedTokens_not_in: [BigInt!]
  lockedUntil: Int
  lockedUntil_not: Int
  lockedUntil_gt: Int
  lockedUntil_lt: Int
  lockedUntil_gte: Int
  lockedUntil_lte: Int
  lockedUntil_in: [Int!]
  lockedUntil_not_in: [Int!]
  shareAmount: BigInt
  shareAmount_not: BigInt
  shareAmount_gt: BigInt
  shareAmount_lt: BigInt
  shareAmount_gte: BigInt
  shareAmount_lte: BigInt
  shareAmount_in: [BigInt!]
  shareAmount_not_in: [BigInt!]
  personalExchangeRate: ANALYTICS__BigDecimal
  personalExchangeRate_not: ANALYTICS__BigDecimal
  personalExchangeRate_gt: ANALYTICS__BigDecimal
  personalExchangeRate_lt: ANALYTICS__BigDecimal
  personalExchangeRate_gte: ANALYTICS__BigDecimal
  personalExchangeRate_lte: ANALYTICS__BigDecimal
  personalExchangeRate_in: [ANALYTICS__BigDecimal!]
  personalExchangeRate_not_in: [ANALYTICS__BigDecimal!]
  realizedRewards: ANALYTICS__BigDecimal
  realizedRewards_not: ANALYTICS__BigDecimal
  realizedRewards_gt: ANALYTICS__BigDecimal
  realizedRewards_lt: ANALYTICS__BigDecimal
  realizedRewards_gte: ANALYTICS__BigDecimal
  realizedRewards_lte: ANALYTICS__BigDecimal
  realizedRewards_in: [ANALYTICS__BigDecimal!]
  realizedRewards_not_in: [ANALYTICS__BigDecimal!]
  latestIndexerExchangeRate: ANALYTICS__BigDecimal
  latestIndexerExchangeRate_not: ANALYTICS__BigDecimal
  latestIndexerExchangeRate_gt: ANALYTICS__BigDecimal
  latestIndexerExchangeRate_lt: ANALYTICS__BigDecimal
  latestIndexerExchangeRate_gte: ANALYTICS__BigDecimal
  latestIndexerExchangeRate_lte: ANALYTICS__BigDecimal
  latestIndexerExchangeRate_in: [ANALYTICS__BigDecimal!]
  latestIndexerExchangeRate_not_in: [ANALYTICS__BigDecimal!]
  unrealizedRewards: ANALYTICS__BigDecimal
  unrealizedRewards_not: ANALYTICS__BigDecimal
  unrealizedRewards_gt: ANALYTICS__BigDecimal
  unrealizedRewards_lt: ANALYTICS__BigDecimal
  unrealizedRewards_gte: ANALYTICS__BigDecimal
  unrealizedRewards_lte: ANALYTICS__BigDecimal
  unrealizedRewards_in: [ANALYTICS__BigDecimal!]
  unrealizedRewards_not_in: [ANALYTICS__BigDecimal!]
  originalDelegation: ANALYTICS__BigDecimal
  originalDelegation_not: ANALYTICS__BigDecimal
  originalDelegation_gt: ANALYTICS__BigDecimal
  originalDelegation_lt: ANALYTICS__BigDecimal
  originalDelegation_gte: ANALYTICS__BigDecimal
  originalDelegation_lte: ANALYTICS__BigDecimal
  originalDelegation_in: [ANALYTICS__BigDecimal!]
  originalDelegation_not_in: [ANALYTICS__BigDecimal!]
  currentDelegation: ANALYTICS__BigDecimal
  currentDelegation_not: ANALYTICS__BigDecimal
  currentDelegation_gt: ANALYTICS__BigDecimal
  currentDelegation_lt: ANALYTICS__BigDecimal
  currentDelegation_gte: ANALYTICS__BigDecimal
  currentDelegation_lte: ANALYTICS__BigDecimal
  currentDelegation_in: [ANALYTICS__BigDecimal!]
  currentDelegation_not_in: [ANALYTICS__BigDecimal!]
  totalStakedTokens: BigInt
  totalStakedTokens_not: BigInt
  totalStakedTokens_gt: BigInt
  totalStakedTokens_lt: BigInt
  totalStakedTokens_gte: BigInt
  totalStakedTokens_lte: BigInt
  totalStakedTokens_in: [BigInt!]
  totalStakedTokens_not_in: [BigInt!]
  totalUnstakedTokens: BigInt
  totalUnstakedTokens_not: BigInt
  totalUnstakedTokens_gt: BigInt
  totalUnstakedTokens_lt: BigInt
  totalUnstakedTokens_gte: BigInt
  totalUnstakedTokens_lte: BigInt
  totalUnstakedTokens_in: [BigInt!]
  totalUnstakedTokens_not_in: [BigInt!]
  createdAt: Int
  createdAt_not: Int
  createdAt_gt: Int
  createdAt_lt: Int
  createdAt_gte: Int
  createdAt_lte: Int
  createdAt_in: [Int!]
  createdAt_not_in: [Int!]
  lastDelegatedAt: Int
  lastDelegatedAt_not: Int
  lastDelegatedAt_gt: Int
  lastDelegatedAt_lt: Int
  lastDelegatedAt_gte: Int
  lastDelegatedAt_lte: Int
  lastDelegatedAt_in: [Int!]
  lastDelegatedAt_not_in: [Int!]
  lastUndelegatedAt: Int
  lastUndelegatedAt_not: Int
  lastUndelegatedAt_gt: Int
  lastUndelegatedAt_lt: Int
  lastUndelegatedAt_gte: Int
  lastUndelegatedAt_lte: Int
  lastUndelegatedAt_in: [Int!]
  lastUndelegatedAt_not_in: [Int!]
  relation: String
  relation_not: String
  relation_gt: String
  relation_lt: String
  relation_gte: String
  relation_lte: String
  relation_in: [String!]
  relation_not_in: [String!]
  relation_contains: String
  relation_contains_nocase: String
  relation_not_contains: String
  relation_not_contains_nocase: String
  relation_starts_with: String
  relation_starts_with_nocase: String
  relation_not_starts_with: String
  relation_not_starts_with_nocase: String
  relation_ends_with: String
  relation_ends_with_nocase: String
  relation_not_ends_with: String
  relation_not_ends_with_nocase: String
  relation_: ANALYTICS__IndexerDelegatedStakeRelation_filter
  """Filter for the block changed event."""
  _change_block: ANALYTICS__BlockChangedFilter
}

enum ANALYTICS__DelegatedStake_orderBy {
  id
  indexer
  delegator
  stakedTokens
  lockedTokens
  lockedUntil
  shareAmount
  personalExchangeRate
  realizedRewards
  latestIndexerExchangeRate
  unrealizedRewards
  originalDelegation
  currentDelegation
  totalStakedTokens
  totalUnstakedTokens
  createdAt
  lastDelegatedAt
  lastUndelegatedAt
  relation
}

"""
Delegator with all their delegated stakes towards Indexers

"""
type ANALYTICS__Delegator {
  """Delegator address"""
  id: ID!
  account: ANALYTICS__GraphAccount!
  defaultDisplayName: String
  """Stakes of this delegator"""
  stakes(skip: Int = 0, first: Int = 100, orderBy: ANALYTICS__DelegatedStake_orderBy, orderDirection: ANALYTICS__OrderDirection, where: ANALYTICS__DelegatedStake_filter): [ANALYTICS__DelegatedStake!]!
  """Time created at"""
  createdAt: Int!
  """
  [POSSIBLE DEPRECATION] Current amount of staked tokens across all DelegatedStakes
  """
  stakedTokens: BigInt!
  """
  Current amount of locked tokens (undelegating) across all DelegatedStakes
  """
  lockedTokens: BigInt!
  """
  [CURRENT] Total realized rewards across all delegated stakes. Realized rewards are added when undelegating and realizing a profit
  """
  totalRealizedRewards: ANALYTICS__BigDecimal!
  """[CURRENT] Total unrealized rewards across all delegated stakes."""
  totalUnrealizedRewards: ANALYTICS__BigDecimal!
  """[CURRENT] Original amount delegated across all delegated stakes."""
  originalDelegation: ANALYTICS__BigDecimal!
  """
  [CURRENT] Current delegation amount across all delegated stakes. This is updated based on the continuous restake from delegation
  """
  currentDelegation: ANALYTICS__BigDecimal!
  """List of all the daily data entities that exists for this delegator"""
  dailyData(skip: Int = 0, first: Int = 100, orderBy: ANALYTICS__DelegatorDailyData_orderBy, orderDirection: ANALYTICS__OrderDirection, where: ANALYTICS__DelegatorDailyData_filter): [ANALYTICS__DelegatorDailyData!]!
  """CUMULATIVE staked tokens in DelegatorStakes of this Delegator"""
  totalStakedTokens: BigInt!
  """CUMULATIVE unstaked tokens in DelegatorStakes of this Delegator"""
  totalUnstakedTokens: BigInt!
  """Total DelegatedStake entity count (Active and inactive)"""
  stakesCount: Int!
  """
  Active DelegatedStake entity count. Active means it still has GRT delegated
  """
  activeStakesCount: Int!
  """Last time this delegator delegated towards any indexer"""
  lastDelegatedAt: Int
  """Last time this delegator undelegated from any indexer"""
  lastUndelegatedAt: Int
  """DelegatedStake entity related to the lastDelegatedAt field"""
  lastDelegation: ANALYTICS__DelegatedStake
  """DelegatedStake entity related to the lastUndelegatedAt field"""
  lastUndelegation: ANALYTICS__DelegatedStake
}

type ANALYTICS__DelegatorDailyData {
  """<DELEGATOR ADDRESS>-<DAY NUMBER>"""
  id: ID!
  """Timestamp for the start of the day that this entity represents. UTC+0"""
  dayStart: BigInt!
  """Timestamp for the end of the day that this entity represents. UTC+0"""
  dayEnd: BigInt!
  """
  Number of the day this entity represents. Day 0 is the network launch day.
  """
  dayNumber: Int!
  """Original entity that this daily data tracks"""
  delegator: ANALYTICS__Delegator!
  """[CURRENT] Amount of staked tokens for this day across all stakes"""
  stakedTokens: BigInt!
  """
  [CURRENT] Amount of locked (undelegating) tokens for this day across all stakes
  """
  lockedTokens: BigInt!
  """[CURRENT] Aggregation of unrealized rewards across all stakes"""
  totalUnrealizedRewards: ANALYTICS__BigDecimal!
  """[CURRENT] Aggregation of realized rewards across all stakes"""
  totalRealizedRewards: ANALYTICS__BigDecimal!
  """[CURRENT] Current delegation for the delegator across all stakes"""
  currentDelegation: ANALYTICS__BigDecimal!
  """
  [CURRENT] Total amount of DelegatedStake entities this Delegator historically had at this point in time
  """
  stakesCount: Int!
  """
  [CURRENT] Amount of active DelegatedStake entities this Delegator had at this point in time
  """
  activeStakesCount: Int!
}

input ANALYTICS__DelegatorDailyData_filter {
  id: ID
  id_not: ID
  id_gt: ID
  id_lt: ID
  id_gte: ID
  id_lte: ID
  id_in: [ID!]
  id_not_in: [ID!]
  dayStart: BigInt
  dayStart_not: BigInt
  dayStart_gt: BigInt
  dayStart_lt: BigInt
  dayStart_gte: BigInt
  dayStart_lte: BigInt
  dayStart_in: [BigInt!]
  dayStart_not_in: [BigInt!]
  dayEnd: BigInt
  dayEnd_not: BigInt
  dayEnd_gt: BigInt
  dayEnd_lt: BigInt
  dayEnd_gte: BigInt
  dayEnd_lte: BigInt
  dayEnd_in: [BigInt!]
  dayEnd_not_in: [BigInt!]
  dayNumber: Int
  dayNumber_not: Int
  dayNumber_gt: Int
  dayNumber_lt: Int
  dayNumber_gte: Int
  dayNumber_lte: Int
  dayNumber_in: [Int!]
  dayNumber_not_in: [Int!]
  delegator: String
  delegator_not: String
  delegator_gt: String
  delegator_lt: String
  delegator_gte: String
  delegator_lte: String
  delegator_in: [String!]
  delegator_not_in: [String!]
  delegator_contains: String
  delegator_contains_nocase: String
  delegator_not_contains: String
  delegator_not_contains_nocase: String
  delegator_starts_with: String
  delegator_starts_with_nocase: String
  delegator_not_starts_with: String
  delegator_not_starts_with_nocase: String
  delegator_ends_with: String
  delegator_ends_with_nocase: String
  delegator_not_ends_with: String
  delegator_not_ends_with_nocase: String
  delegator_: ANALYTICS__Delegator_filter
  stakedTokens: BigInt
  stakedTokens_not: BigInt
  stakedTokens_gt: BigInt
  stakedTokens_lt: BigInt
  stakedTokens_gte: BigInt
  stakedTokens_lte: BigInt
  stakedTokens_in: [BigInt!]
  stakedTokens_not_in: [BigInt!]
  lockedTokens: BigInt
  lockedTokens_not: BigInt
  lockedTokens_gt: BigInt
  lockedTokens_lt: BigInt
  lockedTokens_gte: BigInt
  lockedTokens_lte: BigInt
  lockedTokens_in: [BigInt!]
  lockedTokens_not_in: [BigInt!]
  totalUnrealizedRewards: ANALYTICS__BigDecimal
  totalUnrealizedRewards_not: ANALYTICS__BigDecimal
  totalUnrealizedRewards_gt: ANALYTICS__BigDecimal
  totalUnrealizedRewards_lt: ANALYTICS__BigDecimal
  totalUnrealizedRewards_gte: ANALYTICS__BigDecimal
  totalUnrealizedRewards_lte: ANALYTICS__BigDecimal
  totalUnrealizedRewards_in: [ANALYTICS__BigDecimal!]
  totalUnrealizedRewards_not_in: [ANALYTICS__BigDecimal!]
  totalRealizedRewards: ANALYTICS__BigDecimal
  totalRealizedRewards_not: ANALYTICS__BigDecimal
  totalRealizedRewards_gt: ANALYTICS__BigDecimal
  totalRealizedRewards_lt: ANALYTICS__BigDecimal
  totalRealizedRewards_gte: ANALYTICS__BigDecimal
  totalRealizedRewards_lte: ANALYTICS__BigDecimal
  totalRealizedRewards_in: [ANALYTICS__BigDecimal!]
  totalRealizedRewards_not_in: [ANALYTICS__BigDecimal!]
  currentDelegation: ANALYTICS__BigDecimal
  currentDelegation_not: ANALYTICS__BigDecimal
  currentDelegation_gt: ANALYTICS__BigDecimal
  currentDelegation_lt: ANALYTICS__BigDecimal
  currentDelegation_gte: ANALYTICS__BigDecimal
  currentDelegation_lte: ANALYTICS__BigDecimal
  currentDelegation_in: [ANALYTICS__BigDecimal!]
  currentDelegation_not_in: [ANALYTICS__BigDecimal!]
  stakesCount: Int
  stakesCount_not: Int
  stakesCount_gt: Int
  stakesCount_lt: Int
  stakesCount_gte: Int
  stakesCount_lte: Int
  stakesCount_in: [Int!]
  stakesCount_not_in: [Int!]
  activeStakesCount: Int
  activeStakesCount_not: Int
  activeStakesCount_gt: Int
  activeStakesCount_lt: Int
  activeStakesCount_gte: Int
  activeStakesCount_lte: Int
  activeStakesCount_in: [Int!]
  activeStakesCount_not_in: [Int!]
  """Filter for the block changed event."""
  _change_block: ANALYTICS__BlockChangedFilter
}

enum ANALYTICS__DelegatorDailyData_orderBy {
  id
  dayStart
  dayEnd
  dayNumber
  delegator
  stakedTokens
  lockedTokens
  totalUnrealizedRewards
  totalRealizedRewards
  currentDelegation
  stakesCount
  activeStakesCount
}

type ANALYTICS__DelegatorDelegatedStakeDailyRelation {
  """
  Auxiliary entity to avoid using arrays for many-to-many relation tracking. Compounds the delegator id with an autoincremental number.
  """
  id: ID!
  """Timestamp for the start of the day that this entity represents. UTC+0"""
  dayStart: BigInt!
  """Timestamp for the end of the day that this entity represents. UTC+0"""
  dayEnd: BigInt!
  """
  Number of the day this entity represents. Day 0 is the network launch day.
  """
  dayNumber: Int!
  """Delegator entity that forms the relation."""
  delegator: ANALYTICS__Delegator!
  """DelegatedStake entity that forms the relation"""
  stake: ANALYTICS__DelegatedStake!
  """DailyData entity that tracks the Delegator for this specific day"""
  delegatorDailyData: ANALYTICS__DelegatorDailyData!
  """DailyData entity that tracks the DelegatedStake for this specific day"""
  delegatedStakeDailyData: ANALYTICS__DelegatedStakeDailyData!
}

input ANALYTICS__DelegatorDelegatedStakeDailyRelation_filter {
  id: ID
  id_not: ID
  id_gt: ID
  id_lt: ID
  id_gte: ID
  id_lte: ID
  id_in: [ID!]
  id_not_in: [ID!]
  dayStart: BigInt
  dayStart_not: BigInt
  dayStart_gt: BigInt
  dayStart_lt: BigInt
  dayStart_gte: BigInt
  dayStart_lte: BigInt
  dayStart_in: [BigInt!]
  dayStart_not_in: [BigInt!]
  dayEnd: BigInt
  dayEnd_not: BigInt
  dayEnd_gt: BigInt
  dayEnd_lt: BigInt
  dayEnd_gte: BigInt
  dayEnd_lte: BigInt
  dayEnd_in: [BigInt!]
  dayEnd_not_in: [BigInt!]
  dayNumber: Int
  dayNumber_not: Int
  dayNumber_gt: Int
  dayNumber_lt: Int
  dayNumber_gte: Int
  dayNumber_lte: Int
  dayNumber_in: [Int!]
  dayNumber_not_in: [Int!]
  delegator: String
  delegator_not: String
  delegator_gt: String
  delegator_lt: String
  delegator_gte: String
  delegator_lte: String
  delegator_in: [String!]
  delegator_not_in: [String!]
  delegator_contains: String
  delegator_contains_nocase: String
  delegator_not_contains: String
  delegator_not_contains_nocase: String
  delegator_starts_with: String
  delegator_starts_with_nocase: String
  delegator_not_starts_with: String
  delegator_not_starts_with_nocase: String
  delegator_ends_with: String
  delegator_ends_with_nocase: String
  delegator_not_ends_with: String
  delegator_not_ends_with_nocase: String
  delegator_: ANALYTICS__Delegator_filter
  stake: String
  stake_not: String
  stake_gt: String
  stake_lt: String
  stake_gte: String
  stake_lte: String
  stake_in: [String!]
  stake_not_in: [String!]
  stake_contains: String
  stake_contains_nocase: String
  stake_not_contains: String
  stake_not_contains_nocase: String
  stake_starts_with: String
  stake_starts_with_nocase: String
  stake_not_starts_with: String
  stake_not_starts_with_nocase: String
  stake_ends_with: String
  stake_ends_with_nocase: String
  stake_not_ends_with: String
  stake_not_ends_with_nocase: String
  stake_: ANALYTICS__DelegatedStake_filter
  delegatorDailyData: String
  delegatorDailyData_not: String
  delegatorDailyData_gt: String
  delegatorDailyData_lt: String
  delegatorDailyData_gte: String
  delegatorDailyData_lte: String
  delegatorDailyData_in: [String!]
  delegatorDailyData_not_in: [String!]
  delegatorDailyData_contains: String
  delegatorDailyData_contains_nocase: String
  delegatorDailyData_not_contains: String
  delegatorDailyData_not_contains_nocase: String
  delegatorDailyData_starts_with: String
  delegatorDailyData_starts_with_nocase: String
  delegatorDailyData_not_starts_with: String
  delegatorDailyData_not_starts_with_nocase: String
  delegatorDailyData_ends_with: String
  delegatorDailyData_ends_with_nocase: String
  delegatorDailyData_not_ends_with: String
  delegatorDailyData_not_ends_with_nocase: String
  delegatorDailyData_: ANALYTICS__DelegatorDailyData_filter
  delegatedStakeDailyData: String
  delegatedStakeDailyData_not: String
  delegatedStakeDailyData_gt: String
  delegatedStakeDailyData_lt: String
  delegatedStakeDailyData_gte: String
  delegatedStakeDailyData_lte: String
  delegatedStakeDailyData_in: [String!]
  delegatedStakeDailyData_not_in: [String!]
  delegatedStakeDailyData_contains: String
  delegatedStakeDailyData_contains_nocase: String
  delegatedStakeDailyData_not_contains: String
  delegatedStakeDailyData_not_contains_nocase: String
  delegatedStakeDailyData_starts_with: String
  delegatedStakeDailyData_starts_with_nocase: String
  delegatedStakeDailyData_not_starts_with: String
  delegatedStakeDailyData_not_starts_with_nocase: String
  delegatedStakeDailyData_ends_with: String
  delegatedStakeDailyData_ends_with_nocase: String
  delegatedStakeDailyData_not_ends_with: String
  delegatedStakeDailyData_not_ends_with_nocase: String
  delegatedStakeDailyData_: ANALYTICS__DelegatedStakeDailyData_filter
  """Filter for the block changed event."""
  _change_block: ANALYTICS__BlockChangedFilter
}

enum ANALYTICS__DelegatorDelegatedStakeDailyRelation_orderBy {
  id
  dayStart
  dayEnd
  dayNumber
  delegator
  stake
  delegatorDailyData
  delegatedStakeDailyData
}

input ANALYTICS__Delegator_filter {
  id: ID
  id_not: ID
  id_gt: ID
  id_lt: ID
  id_gte: ID
  id_lte: ID
  id_in: [ID!]
  id_not_in: [ID!]
  account: String
  account_not: String
  account_gt: String
  account_lt: String
  account_gte: String
  account_lte: String
  account_in: [String!]
  account_not_in: [String!]
  account_contains: String
  account_contains_nocase: String
  account_not_contains: String
  account_not_contains_nocase: String
  account_starts_with: String
  account_starts_with_nocase: String
  account_not_starts_with: String
  account_not_starts_with_nocase: String
  account_ends_with: String
  account_ends_with_nocase: String
  account_not_ends_with: String
  account_not_ends_with_nocase: String
  account_: ANALYTICS__GraphAccount_filter
  defaultDisplayName: String
  defaultDisplayName_not: String
  defaultDisplayName_gt: String
  defaultDisplayName_lt: String
  defaultDisplayName_gte: String
  defaultDisplayName_lte: String
  defaultDisplayName_in: [String!]
  defaultDisplayName_not_in: [String!]
  defaultDisplayName_contains: String
  defaultDisplayName_contains_nocase: String
  defaultDisplayName_not_contains: String
  defaultDisplayName_not_contains_nocase: String
  defaultDisplayName_starts_with: String
  defaultDisplayName_starts_with_nocase: String
  defaultDisplayName_not_starts_with: String
  defaultDisplayName_not_starts_with_nocase: String
  defaultDisplayName_ends_with: String
  defaultDisplayName_ends_with_nocase: String
  defaultDisplayName_not_ends_with: String
  defaultDisplayName_not_ends_with_nocase: String
  stakes_: ANALYTICS__DelegatedStake_filter
  createdAt: Int
  createdAt_not: Int
  createdAt_gt: Int
  createdAt_lt: Int
  createdAt_gte: Int
  createdAt_lte: Int
  createdAt_in: [Int!]
  createdAt_not_in: [Int!]
  stakedTokens: BigInt
  stakedTokens_not: BigInt
  stakedTokens_gt: BigInt
  stakedTokens_lt: BigInt
  stakedTokens_gte: BigInt
  stakedTokens_lte: BigInt
  stakedTokens_in: [BigInt!]
  stakedTokens_not_in: [BigInt!]
  lockedTokens: BigInt
  lockedTokens_not: BigInt
  lockedTokens_gt: BigInt
  lockedTokens_lt: BigInt
  lockedTokens_gte: BigInt
  lockedTokens_lte: BigInt
  lockedTokens_in: [BigInt!]
  lockedTokens_not_in: [BigInt!]
  totalRealizedRewards: ANALYTICS__BigDecimal
  totalRealizedRewards_not: ANALYTICS__BigDecimal
  totalRealizedRewards_gt: ANALYTICS__BigDecimal
  totalRealizedRewards_lt: ANALYTICS__BigDecimal
  totalRealizedRewards_gte: ANALYTICS__BigDecimal
  totalRealizedRewards_lte: ANALYTICS__BigDecimal
  totalRealizedRewards_in: [ANALYTICS__BigDecimal!]
  totalRealizedRewards_not_in: [ANALYTICS__BigDecimal!]
  totalUnrealizedRewards: ANALYTICS__BigDecimal
  totalUnrealizedRewards_not: ANALYTICS__BigDecimal
  totalUnrealizedRewards_gt: ANALYTICS__BigDecimal
  totalUnrealizedRewards_lt: ANALYTICS__BigDecimal
  totalUnrealizedRewards_gte: ANALYTICS__BigDecimal
  totalUnrealizedRewards_lte: ANALYTICS__BigDecimal
  totalUnrealizedRewards_in: [ANALYTICS__BigDecimal!]
  totalUnrealizedRewards_not_in: [ANALYTICS__BigDecimal!]
  originalDelegation: ANALYTICS__BigDecimal
  originalDelegation_not: ANALYTICS__BigDecimal
  originalDelegation_gt: ANALYTICS__BigDecimal
  originalDelegation_lt: ANALYTICS__BigDecimal
  originalDelegation_gte: ANALYTICS__BigDecimal
  originalDelegation_lte: ANALYTICS__BigDecimal
  originalDelegation_in: [ANALYTICS__BigDecimal!]
  originalDelegation_not_in: [ANALYTICS__BigDecimal!]
  currentDelegation: ANALYTICS__BigDecimal
  currentDelegation_not: ANALYTICS__BigDecimal
  currentDelegation_gt: ANALYTICS__BigDecimal
  currentDelegation_lt: ANALYTICS__BigDecimal
  currentDelegation_gte: ANALYTICS__BigDecimal
  currentDelegation_lte: ANALYTICS__BigDecimal
  currentDelegation_in: [ANALYTICS__BigDecimal!]
  currentDelegation_not_in: [ANALYTICS__BigDecimal!]
  dailyData_: ANALYTICS__DelegatorDailyData_filter
  totalStakedTokens: BigInt
  totalStakedTokens_not: BigInt
  totalStakedTokens_gt: BigInt
  totalStakedTokens_lt: BigInt
  totalStakedTokens_gte: BigInt
  totalStakedTokens_lte: BigInt
  totalStakedTokens_in: [BigInt!]
  totalStakedTokens_not_in: [BigInt!]
  totalUnstakedTokens: BigInt
  totalUnstakedTokens_not: BigInt
  totalUnstakedTokens_gt: BigInt
  totalUnstakedTokens_lt: BigInt
  totalUnstakedTokens_gte: BigInt
  totalUnstakedTokens_lte: BigInt
  totalUnstakedTokens_in: [BigInt!]
  totalUnstakedTokens_not_in: [BigInt!]
  stakesCount: Int
  stakesCount_not: Int
  stakesCount_gt: Int
  stakesCount_lt: Int
  stakesCount_gte: Int
  stakesCount_lte: Int
  stakesCount_in: [Int!]
  stakesCount_not_in: [Int!]
  activeStakesCount: Int
  activeStakesCount_not: Int
  activeStakesCount_gt: Int
  activeStakesCount_lt: Int
  activeStakesCount_gte: Int
  activeStakesCount_lte: Int
  activeStakesCount_in: [Int!]
  activeStakesCount_not_in: [Int!]
  lastDelegatedAt: Int
  lastDelegatedAt_not: Int
  lastDelegatedAt_gt: Int
  lastDelegatedAt_lt: Int
  lastDelegatedAt_gte: Int
  lastDelegatedAt_lte: Int
  lastDelegatedAt_in: [Int!]
  lastDelegatedAt_not_in: [Int!]
  lastUndelegatedAt: Int
  lastUndelegatedAt_not: Int
  lastUndelegatedAt_gt: Int
  lastUndelegatedAt_lt: Int
  lastUndelegatedAt_gte: Int
  lastUndelegatedAt_lte: Int
  lastUndelegatedAt_in: [Int!]
  lastUndelegatedAt_not_in: [Int!]
  lastDelegation: String
  lastDelegation_not: String
  lastDelegation_gt: String
  lastDelegation_lt: String
  lastDelegation_gte: String
  lastDelegation_lte: String
  lastDelegation_in: [String!]
  lastDelegation_not_in: [String!]
  lastDelegation_contains: String
  lastDelegation_contains_nocase: String
  lastDelegation_not_contains: String
  lastDelegation_not_contains_nocase: String
  lastDelegation_starts_with: String
  lastDelegation_starts_with_nocase: String
  lastDelegation_not_starts_with: String
  lastDelegation_not_starts_with_nocase: String
  lastDelegation_ends_with: String
  lastDelegation_ends_with_nocase: String
  lastDelegation_not_ends_with: String
  lastDelegation_not_ends_with_nocase: String
  lastDelegation_: ANALYTICS__DelegatedStake_filter
  lastUndelegation: String
  lastUndelegation_not: String
  lastUndelegation_gt: String
  lastUndelegation_lt: String
  lastUndelegation_gte: String
  lastUndelegation_lte: String
  lastUndelegation_in: [String!]
  lastUndelegation_not_in: [String!]
  lastUndelegation_contains: String
  lastUndelegation_contains_nocase: String
  lastUndelegation_not_contains: String
  lastUndelegation_not_contains_nocase: String
  lastUndelegation_starts_with: String
  lastUndelegation_starts_with_nocase: String
  lastUndelegation_not_starts_with: String
  lastUndelegation_not_starts_with_nocase: String
  lastUndelegation_ends_with: String
  lastUndelegation_ends_with_nocase: String
  lastUndelegation_not_ends_with: String
  lastUndelegation_not_ends_with_nocase: String
  lastUndelegation_: ANALYTICS__DelegatedStake_filter
  """Filter for the block changed event."""
  _change_block: ANALYTICS__BlockChangedFilter
}

enum ANALYTICS__Delegator_orderBy {
  id
  account
  defaultDisplayName
  stakes
  createdAt
  stakedTokens
  lockedTokens
  totalRealizedRewards
  totalUnrealizedRewards
  originalDelegation
  currentDelegation
  dailyData
  totalStakedTokens
  totalUnstakedTokens
  stakesCount
  activeStakesCount
  lastDelegatedAt
  lastUndelegatedAt
  lastDelegation
  lastUndelegation
}

"""
An account within the graph network. Contains metadata and all relevant data for this accounts
delegating, curating, and indexing.

"""
type ANALYTICS__GraphAccount {
  """Graph account ID"""
  id: ID!
  """All names this graph account has claimed from all name systems"""
  names(skip: Int = 0, first: Int = 100, orderBy: ANALYTICS__GraphAccountName_orderBy, orderDirection: ANALYTICS__OrderDirection, where: ANALYTICS__GraphAccountName_filter): [ANALYTICS__GraphAccountName!]!
  """Default name the graph account has chosen"""
  defaultName: ANALYTICS__GraphAccountName
  """Time the account was created"""
  createdAt: Int!
  """
  Default display name is the current default name. Used for filtered queries in the explorer
  """
  defaultDisplayName: String
  """True if it is an organization. False if it is an individual"""
  isOrganization: Boolean
  """IPFS hash with account metadata details"""
  metadataHash: ANALYTICS__Bytes
  """Main repository of code for the graph account"""
  codeRepository: String
  """Description of the graph account"""
  description: String
  """Image URL"""
  image: String
  """Website URL"""
  website: String
  """Display name. Not unique"""
  displayName: String
  """Operator of other Graph Accounts"""
  operatorOf(skip: Int = 0, first: Int = 100, orderBy: ANALYTICS__GraphAccount_orderBy, orderDirection: ANALYTICS__OrderDirection, where: ANALYTICS__GraphAccount_filter): [ANALYTICS__GraphAccount!]!
  """Operators of this Graph Accounts"""
  operators(skip: Int = 0, first: Int = 100, orderBy: ANALYTICS__GraphAccount_orderBy, orderDirection: ANALYTICS__OrderDirection, where: ANALYTICS__GraphAccount_filter): [ANALYTICS__GraphAccount!]!
  """Graph token balance"""
  balance: BigInt!
  """Amount this account has approved staking to transfer their GRT"""
  curationApproval: BigInt!
  """Amount this account has approved curation to transfer their GRT"""
  stakingApproval: BigInt!
  """Amount this account has approved the GNS to transfer their GRT"""
  gnsApproval: BigInt!
  """Subgraphs the graph account owns"""
  subgraphs(skip: Int = 0, first: Int = 100, orderBy: ANALYTICS__Subgraph_orderBy, orderDirection: ANALYTICS__OrderDirection, where: ANALYTICS__Subgraph_filter): [ANALYTICS__Subgraph!]!
  """Time that this graph account became a developer"""
  developerCreatedAt: Int
  """Curator fields for this GraphAccount. Null if never curated"""
  curator: ANALYTICS__Curator
  """Indexer fields for this GraphAccount. Null if never indexed"""
  indexer: ANALYTICS__Indexer
  """Delegator fields for this GraphAccount. Null if never delegated"""
  delegator: ANALYTICS__Delegator
  """Name signal transactions created by this GraphAccount"""
  nameSignalTransactions(skip: Int = 0, first: Int = 100, orderBy: ANALYTICS__NameSignalTransaction_orderBy, orderDirection: ANALYTICS__OrderDirection, where: ANALYTICS__NameSignalTransaction_filter): [ANALYTICS__NameSignalTransaction!]!
}

"""
A name chosen by a Graph Account from a Name System such as ENS. This allows Graph Accounts to be
recognized by name, rather than just an Ethereum address

"""
type ANALYTICS__GraphAccountName {
  """Name system concatenated with the unique ID of the name system"""
  id: ID!
  """Name system for this name"""
  nameSystem: ANALYTICS__NameSystem!
  """Name from the system"""
  name: String!
  """
  The graph account that owned the name when it was linked in the graph network
  """
  graphAccount: ANALYTICS__GraphAccount
}

input ANALYTICS__GraphAccountName_filter {
  id: ID
  id_not: ID
  id_gt: ID
  id_lt: ID
  id_gte: ID
  id_lte: ID
  id_in: [ID!]
  id_not_in: [ID!]
  nameSystem: ANALYTICS__NameSystem
  nameSystem_not: ANALYTICS__NameSystem
  nameSystem_in: [ANALYTICS__NameSystem!]
  nameSystem_not_in: [ANALYTICS__NameSystem!]
  name: String
  name_not: String
  name_gt: String
  name_lt: String
  name_gte: String
  name_lte: String
  name_in: [String!]
  name_not_in: [String!]
  name_contains: String
  name_contains_nocase: String
  name_not_contains: String
  name_not_contains_nocase: String
  name_starts_with: String
  name_starts_with_nocase: String
  name_not_starts_with: String
  name_not_starts_with_nocase: String
  name_ends_with: String
  name_ends_with_nocase: String
  name_not_ends_with: String
  name_not_ends_with_nocase: String
  graphAccount: String
  graphAccount_not: String
  graphAccount_gt: String
  graphAccount_lt: String
  graphAccount_gte: String
  graphAccount_lte: String
  graphAccount_in: [String!]
  graphAccount_not_in: [String!]
  graphAccount_contains: String
  graphAccount_contains_nocase: String
  graphAccount_not_contains: String
  graphAccount_not_contains_nocase: String
  graphAccount_starts_with: String
  graphAccount_starts_with_nocase: String
  graphAccount_not_starts_with: String
  graphAccount_not_starts_with_nocase: String
  graphAccount_ends_with: String
  graphAccount_ends_with_nocase: String
  graphAccount_not_ends_with: String
  graphAccount_not_ends_with_nocase: String
  graphAccount_: ANALYTICS__GraphAccount_filter
  """Filter for the block changed event."""
  _change_block: ANALYTICS__BlockChangedFilter
}

enum ANALYTICS__GraphAccountName_orderBy {
  id
  nameSystem
  name
  graphAccount
}

input ANALYTICS__GraphAccount_filter {
  id: ID
  id_not: ID
  id_gt: ID
  id_lt: ID
  id_gte: ID
  id_lte: ID
  id_in: [ID!]
  id_not_in: [ID!]
  names_: ANALYTICS__GraphAccountName_filter
  defaultName: String
  defaultName_not: String
  defaultName_gt: String
  defaultName_lt: String
  defaultName_gte: String
  defaultName_lte: String
  defaultName_in: [String!]
  defaultName_not_in: [String!]
  defaultName_contains: String
  defaultName_contains_nocase: String
  defaultName_not_contains: String
  defaultName_not_contains_nocase: String
  defaultName_starts_with: String
  defaultName_starts_with_nocase: String
  defaultName_not_starts_with: String
  defaultName_not_starts_with_nocase: String
  defaultName_ends_with: String
  defaultName_ends_with_nocase: String
  defaultName_not_ends_with: String
  defaultName_not_ends_with_nocase: String
  defaultName_: ANALYTICS__GraphAccountName_filter
  createdAt: Int
  createdAt_not: Int
  createdAt_gt: Int
  createdAt_lt: Int
  createdAt_gte: Int
  createdAt_lte: Int
  createdAt_in: [Int!]
  createdAt_not_in: [Int!]
  defaultDisplayName: String
  defaultDisplayName_not: String
  defaultDisplayName_gt: String
  defaultDisplayName_lt: String
  defaultDisplayName_gte: String
  defaultDisplayName_lte: String
  defaultDisplayName_in: [String!]
  defaultDisplayName_not_in: [String!]
  defaultDisplayName_contains: String
  defaultDisplayName_contains_nocase: String
  defaultDisplayName_not_contains: String
  defaultDisplayName_not_contains_nocase: String
  defaultDisplayName_starts_with: String
  defaultDisplayName_starts_with_nocase: String
  defaultDisplayName_not_starts_with: String
  defaultDisplayName_not_starts_with_nocase: String
  defaultDisplayName_ends_with: String
  defaultDisplayName_ends_with_nocase: String
  defaultDisplayName_not_ends_with: String
  defaultDisplayName_not_ends_with_nocase: String
  isOrganization: Boolean
  isOrganization_not: Boolean
  isOrganization_in: [Boolean!]
  isOrganization_not_in: [Boolean!]
  metadataHash: ANALYTICS__Bytes
  metadataHash_not: ANALYTICS__Bytes
  metadataHash_gt: ANALYTICS__Bytes
  metadataHash_lt: ANALYTICS__Bytes
  metadataHash_gte: ANALYTICS__Bytes
  metadataHash_lte: ANALYTICS__Bytes
  metadataHash_in: [ANALYTICS__Bytes!]
  metadataHash_not_in: [ANALYTICS__Bytes!]
  metadataHash_contains: ANALYTICS__Bytes
  metadataHash_not_contains: ANALYTICS__Bytes
  codeRepository: String
  codeRepository_not: String
  codeRepository_gt: String
  codeRepository_lt: String
  codeRepository_gte: String
  codeRepository_lte: String
  codeRepository_in: [String!]
  codeRepository_not_in: [String!]
  codeRepository_contains: String
  codeRepository_contains_nocase: String
  codeRepository_not_contains: String
  codeRepository_not_contains_nocase: String
  codeRepository_starts_with: String
  codeRepository_starts_with_nocase: String
  codeRepository_not_starts_with: String
  codeRepository_not_starts_with_nocase: String
  codeRepository_ends_with: String
  codeRepository_ends_with_nocase: String
  codeRepository_not_ends_with: String
  codeRepository_not_ends_with_nocase: String
  description: String
  description_not: String
  description_gt: String
  description_lt: String
  description_gte: String
  description_lte: String
  description_in: [String!]
  description_not_in: [String!]
  description_contains: String
  description_contains_nocase: String
  description_not_contains: String
  description_not_contains_nocase: String
  description_starts_with: String
  description_starts_with_nocase: String
  description_not_starts_with: String
  description_not_starts_with_nocase: String
  description_ends_with: String
  description_ends_with_nocase: String
  description_not_ends_with: String
  description_not_ends_with_nocase: String
  image: String
  image_not: String
  image_gt: String
  image_lt: String
  image_gte: String
  image_lte: String
  image_in: [String!]
  image_not_in: [String!]
  image_contains: String
  image_contains_nocase: String
  image_not_contains: String
  image_not_contains_nocase: String
  image_starts_with: String
  image_starts_with_nocase: String
  image_not_starts_with: String
  image_not_starts_with_nocase: String
  image_ends_with: String
  image_ends_with_nocase: String
  image_not_ends_with: String
  image_not_ends_with_nocase: String
  website: String
  website_not: String
  website_gt: String
  website_lt: String
  website_gte: String
  website_lte: String
  website_in: [String!]
  website_not_in: [String!]
  website_contains: String
  website_contains_nocase: String
  website_not_contains: String
  website_not_contains_nocase: String
  website_starts_with: String
  website_starts_with_nocase: String
  website_not_starts_with: String
  website_not_starts_with_nocase: String
  website_ends_with: String
  website_ends_with_nocase: String
  website_not_ends_with: String
  website_not_ends_with_nocase: String
  displayName: String
  displayName_not: String
  displayName_gt: String
  displayName_lt: String
  displayName_gte: String
  displayName_lte: String
  displayName_in: [String!]
  displayName_not_in: [String!]
  displayName_contains: String
  displayName_contains_nocase: String
  displayName_not_contains: String
  displayName_not_contains_nocase: String
  displayName_starts_with: String
  displayName_starts_with_nocase: String
  displayName_not_starts_with: String
  displayName_not_starts_with_nocase: String
  displayName_ends_with: String
  displayName_ends_with_nocase: String
  displayName_not_ends_with: String
  displayName_not_ends_with_nocase: String
  operatorOf_: ANALYTICS__GraphAccount_filter
  operators: [String!]
  operators_not: [String!]
  operators_contains: [String!]
  operators_contains_nocase: [String!]
  operators_not_contains: [String!]
  operators_not_contains_nocase: [String!]
  operators_: ANALYTICS__GraphAccount_filter
  balance: BigInt
  balance_not: BigInt
  balance_gt: BigInt
  balance_lt: BigInt
  balance_gte: BigInt
  balance_lte: BigInt
  balance_in: [BigInt!]
  balance_not_in: [BigInt!]
  curationApproval: BigInt
  curationApproval_not: BigInt
  curationApproval_gt: BigInt
  curationApproval_lt: BigInt
  curationApproval_gte: BigInt
  curationApproval_lte: BigInt
  curationApproval_in: [BigInt!]
  curationApproval_not_in: [BigInt!]
  stakingApproval: BigInt
  stakingApproval_not: BigInt
  stakingApproval_gt: BigInt
  stakingApproval_lt: BigInt
  stakingApproval_gte: BigInt
  stakingApproval_lte: BigInt
  stakingApproval_in: [BigInt!]
  stakingApproval_not_in: [BigInt!]
  gnsApproval: BigInt
  gnsApproval_not: BigInt
  gnsApproval_gt: BigInt
  gnsApproval_lt: BigInt
  gnsApproval_gte: BigInt
  gnsApproval_lte: BigInt
  gnsApproval_in: [BigInt!]
  gnsApproval_not_in: [BigInt!]
  subgraphs_: ANALYTICS__Subgraph_filter
  developerCreatedAt: Int
  developerCreatedAt_not: Int
  developerCreatedAt_gt: Int
  developerCreatedAt_lt: Int
  developerCreatedAt_gte: Int
  developerCreatedAt_lte: Int
  developerCreatedAt_in: [Int!]
  developerCreatedAt_not_in: [Int!]
  curator: String
  curator_not: String
  curator_gt: String
  curator_lt: String
  curator_gte: String
  curator_lte: String
  curator_in: [String!]
  curator_not_in: [String!]
  curator_contains: String
  curator_contains_nocase: String
  curator_not_contains: String
  curator_not_contains_nocase: String
  curator_starts_with: String
  curator_starts_with_nocase: String
  curator_not_starts_with: String
  curator_not_starts_with_nocase: String
  curator_ends_with: String
  curator_ends_with_nocase: String
  curator_not_ends_with: String
  curator_not_ends_with_nocase: String
  curator_: ANALYTICS__Curator_filter
  indexer: String
  indexer_not: String
  indexer_gt: String
  indexer_lt: String
  indexer_gte: String
  indexer_lte: String
  indexer_in: [String!]
  indexer_not_in: [String!]
  indexer_contains: String
  indexer_contains_nocase: String
  indexer_not_contains: String
  indexer_not_contains_nocase: String
  indexer_starts_with: String
  indexer_starts_with_nocase: String
  indexer_not_starts_with: String
  indexer_not_starts_with_nocase: String
  indexer_ends_with: String
  indexer_ends_with_nocase: String
  indexer_not_ends_with: String
  indexer_not_ends_with_nocase: String
  indexer_: ANALYTICS__Indexer_filter
  delegator: String
  delegator_not: String
  delegator_gt: String
  delegator_lt: String
  delegator_gte: String
  delegator_lte: String
  delegator_in: [String!]
  delegator_not_in: [String!]
  delegator_contains: String
  delegator_contains_nocase: String
  delegator_not_contains: String
  delegator_not_contains_nocase: String
  delegator_starts_with: String
  delegator_starts_with_nocase: String
  delegator_not_starts_with: String
  delegator_not_starts_with_nocase: String
  delegator_ends_with: String
  delegator_ends_with_nocase: String
  delegator_not_ends_with: String
  delegator_not_ends_with_nocase: String
  delegator_: ANALYTICS__Delegator_filter
  nameSignalTransactions_: ANALYTICS__NameSignalTransaction_filter
  """Filter for the block changed event."""
  _change_block: ANALYTICS__BlockChangedFilter
}

enum ANALYTICS__GraphAccount_orderBy {
  id
  names
  defaultName
  createdAt
  defaultDisplayName
  isOrganization
  metadataHash
  codeRepository
  description
  image
  website
  displayName
  operatorOf
  operators
  balance
  curationApproval
  stakingApproval
  gnsApproval
  subgraphs
  developerCreatedAt
  curator
  indexer
  delegator
  nameSignalTransactions
}

"""
Graph Network global parameters and contract addresses

"""
type ANALYTICS__GraphNetwork {
  """ID is set to 1"""
  id: ID!
  """
  Ratio of max staked delegation tokens to indexers stake that earns rewards
  """
  delegationRatio: Int!
  """The total amount of GRT staked in the staking contract"""
  totalTokensStaked: BigInt!
  """
  NOT IMPLEMENTED - Total tokens that are settled and waiting to be claimed
  """
  totalTokensClaimable: BigInt!
  """
  Total tokens that are currently locked or withdrawable in the network from unstaking
  """
  totalUnstakedTokensLocked: BigInt!
  """Total GRT currently in allocation"""
  totalTokensAllocated: BigInt!
  """Total delegated tokens in the protocol"""
  totalDelegatedTokens: BigInt!
  """Total query fees generated in the network"""
  totalQueryFees: BigInt!
  """Total query fees collected by indexers"""
  totalIndexerQueryFeesCollected: BigInt!
  """Total query fees rebates claimed by indexers"""
  totalIndexerQueryFeeRebates: BigInt!
  """Total query fees rebates claimed by delegators"""
  totalDelegatorQueryFeeRebates: BigInt!
  """Total query fees payed to curators"""
  totalCuratorQueryFees: BigInt!
  """Total protocol taxes applied to the query fees"""
  totalTaxedQueryFees: BigInt!
  """
  Total unclaimed rebates. Includes unclaimed rebates and rebates lost in cobbs douglas 
  """
  totalUnclaimedQueryFeeRebates: BigInt!
  """Total indexing rewards minted"""
  totalIndexingRewards: BigInt!
  """Total indexing rewards minted to Delegators"""
  totalIndexingDelegatorRewards: BigInt!
  """Total indexing rewards minted to Indexers"""
  totalIndexingIndexerRewards: BigInt!
  """The total amount of GRT signalled in the Curation contract"""
  totalTokensSignalled: BigInt!
  """Default reserve ratio for all subgraphs. In parts per million"""
  defaultReserveRatio: Int!
  """Total indexers"""
  indexerCount: Int!
  """Number of indexers that currently have some stake in the protocol"""
  stakedIndexersCount: Int!
  """Total delegators"""
  delegatorCount: Int!
  """Total curators"""
  curatorCount: Int!
  """Total subgraphs"""
  subgraphCount: Int!
  """Total subgraphs"""
  subgraphDeploymentCount: Int!
}

type ANALYTICS__GraphNetworkDailyData {
  """<SUBGRAPH ID>-<DAY NUMBER>"""
  id: ID!
  """Timestamp for the start of the day that this entity represents. UTC+0"""
  dayStart: BigInt!
  """Timestamp for the end of the day that this entity represents. UTC+0"""
  dayEnd: BigInt!
  """
  Number of the day this entity represents. Day 0 is the network launch day.
  """
  dayNumber: Int!
  """Original entity that the daily data entity tracks"""
  network: ANALYTICS__GraphNetwork!
  """
  [CUMULATIVE] Ratio of max staked delegation tokens to indexers stake that earns rewards
  """
  delegationRatio: Int!
  """[CUMULATIVE] The total amount of GRT staked in the staking contract"""
  totalTokensStaked: BigInt!
  """
  [CUMULATIVE] Total tokens that are currently locked or withdrawable in the network from unstaking
  """
  totalUnstakedTokensLocked: BigInt!
  """[CUMULATIVE] Total GRT currently in allocation"""
  totalTokensAllocated: BigInt!
  """[CUMULATIVE] Total delegated tokens in the protocol"""
  totalDelegatedTokens: BigInt!
  """[CUMULATIVE] Total query fees generated in the network"""
  totalQueryFees: BigInt!
  """[CUMULATIVE] Total query fees collected by indexers"""
  totalIndexerQueryFeesCollected: BigInt!
  """[CUMULATIVE] Total query fees rebates claimed by indexers"""
  totalIndexerQueryFeeRebates: BigInt!
  """[CUMULATIVE] Total query fees rebates claimed by delegators"""
  totalDelegatorQueryFeeRebates: BigInt!
  """[CUMULATIVE] Total query fees payed to curators"""
  totalCuratorQueryFees: BigInt!
  """[CUMULATIVE] Total protocol taxes applied to the query fees"""
  totalTaxedQueryFees: BigInt!
  """
  [CUMULATIVE] Total unclaimed rebates. Includes unclaimed rebates and rebates lost in cobbs douglas 
  """
  totalUnclaimedQueryFeeRebates: BigInt!
  """[CUMULATIVE] Total indexing rewards minted"""
  totalIndexingRewards: BigInt!
  """[CUMULATIVE] Total indexing rewards minted to Delegators"""
  totalIndexingDelegatorRewards: BigInt!
  """[CUMULATIVE] Total indexing rewards minted to Indexers"""
  totalIndexingIndexerRewards: BigInt!
  """
  [CUMULATIVE] The total amount of GRT signalled in the Curation contract
  """
  totalTokensSignalled: BigInt!
  """
  [CUMULATIVE] Default reserve ratio for all subgraphs. In parts per million
  """
  defaultReserveRatio: Int!
  """[CUMULATIVE] Total indexers"""
  indexerCount: Int!
  """
  [CUMULATIVE] Number of indexers that currently have some stake in the protocol
  """
  stakedIndexersCount: Int!
  """[CUMULATIVE] Total delegators"""
  delegatorCount: Int!
  """[CUMULATIVE] Total curators"""
  curatorCount: Int!
  """[CUMULATIVE] Total subgraphs"""
  subgraphCount: Int!
  """[CUMULATIVE] Total subgraphs"""
  subgraphDeploymentCount: Int!
}

input ANALYTICS__GraphNetworkDailyData_filter {
  id: ID
  id_not: ID
  id_gt: ID
  id_lt: ID
  id_gte: ID
  id_lte: ID
  id_in: [ID!]
  id_not_in: [ID!]
  dayStart: BigInt
  dayStart_not: BigInt
  dayStart_gt: BigInt
  dayStart_lt: BigInt
  dayStart_gte: BigInt
  dayStart_lte: BigInt
  dayStart_in: [BigInt!]
  dayStart_not_in: [BigInt!]
  dayEnd: BigInt
  dayEnd_not: BigInt
  dayEnd_gt: BigInt
  dayEnd_lt: BigInt
  dayEnd_gte: BigInt
  dayEnd_lte: BigInt
  dayEnd_in: [BigInt!]
  dayEnd_not_in: [BigInt!]
  dayNumber: Int
  dayNumber_not: Int
  dayNumber_gt: Int
  dayNumber_lt: Int
  dayNumber_gte: Int
  dayNumber_lte: Int
  dayNumber_in: [Int!]
  dayNumber_not_in: [Int!]
  network: String
  network_not: String
  network_gt: String
  network_lt: String
  network_gte: String
  network_lte: String
  network_in: [String!]
  network_not_in: [String!]
  network_contains: String
  network_contains_nocase: String
  network_not_contains: String
  network_not_contains_nocase: String
  network_starts_with: String
  network_starts_with_nocase: String
  network_not_starts_with: String
  network_not_starts_with_nocase: String
  network_ends_with: String
  network_ends_with_nocase: String
  network_not_ends_with: String
  network_not_ends_with_nocase: String
  network_: ANALYTICS__GraphNetwork_filter
  delegationRatio: Int
  delegationRatio_not: Int
  delegationRatio_gt: Int
  delegationRatio_lt: Int
  delegationRatio_gte: Int
  delegationRatio_lte: Int
  delegationRatio_in: [Int!]
  delegationRatio_not_in: [Int!]
  totalTokensStaked: BigInt
  totalTokensStaked_not: BigInt
  totalTokensStaked_gt: BigInt
  totalTokensStaked_lt: BigInt
  totalTokensStaked_gte: BigInt
  totalTokensStaked_lte: BigInt
  totalTokensStaked_in: [BigInt!]
  totalTokensStaked_not_in: [BigInt!]
  totalUnstakedTokensLocked: BigInt
  totalUnstakedTokensLocked_not: BigInt
  totalUnstakedTokensLocked_gt: BigInt
  totalUnstakedTokensLocked_lt: BigInt
  totalUnstakedTokensLocked_gte: BigInt
  totalUnstakedTokensLocked_lte: BigInt
  totalUnstakedTokensLocked_in: [BigInt!]
  totalUnstakedTokensLocked_not_in: [BigInt!]
  totalTokensAllocated: BigInt
  totalTokensAllocated_not: BigInt
  totalTokensAllocated_gt: BigInt
  totalTokensAllocated_lt: BigInt
  totalTokensAllocated_gte: BigInt
  totalTokensAllocated_lte: BigInt
  totalTokensAllocated_in: [BigInt!]
  totalTokensAllocated_not_in: [BigInt!]
  totalDelegatedTokens: BigInt
  totalDelegatedTokens_not: BigInt
  totalDelegatedTokens_gt: BigInt
  totalDelegatedTokens_lt: BigInt
  totalDelegatedTokens_gte: BigInt
  totalDelegatedTokens_lte: BigInt
  totalDelegatedTokens_in: [BigInt!]
  totalDelegatedTokens_not_in: [BigInt!]
  totalQueryFees: BigInt
  totalQueryFees_not: BigInt
  totalQueryFees_gt: BigInt
  totalQueryFees_lt: BigInt
  totalQueryFees_gte: BigInt
  totalQueryFees_lte: BigInt
  totalQueryFees_in: [BigInt!]
  totalQueryFees_not_in: [BigInt!]
  totalIndexerQueryFeesCollected: BigInt
  totalIndexerQueryFeesCollected_not: BigInt
  totalIndexerQueryFeesCollected_gt: BigInt
  totalIndexerQueryFeesCollected_lt: BigInt
  totalIndexerQueryFeesCollected_gte: BigInt
  totalIndexerQueryFeesCollected_lte: BigInt
  totalIndexerQueryFeesCollected_in: [BigInt!]
  totalIndexerQueryFeesCollected_not_in: [BigInt!]
  totalIndexerQueryFeeRebates: BigInt
  totalIndexerQueryFeeRebates_not: BigInt
  totalIndexerQueryFeeRebates_gt: BigInt
  totalIndexerQueryFeeRebates_lt: BigInt
  totalIndexerQueryFeeRebates_gte: BigInt
  totalIndexerQueryFeeRebates_lte: BigInt
  totalIndexerQueryFeeRebates_in: [BigInt!]
  totalIndexerQueryFeeRebates_not_in: [BigInt!]
  totalDelegatorQueryFeeRebates: BigInt
  totalDelegatorQueryFeeRebates_not: BigInt
  totalDelegatorQueryFeeRebates_gt: BigInt
  totalDelegatorQueryFeeRebates_lt: BigInt
  totalDelegatorQueryFeeRebates_gte: BigInt
  totalDelegatorQueryFeeRebates_lte: BigInt
  totalDelegatorQueryFeeRebates_in: [BigInt!]
  totalDelegatorQueryFeeRebates_not_in: [BigInt!]
  totalCuratorQueryFees: BigInt
  totalCuratorQueryFees_not: BigInt
  totalCuratorQueryFees_gt: BigInt
  totalCuratorQueryFees_lt: BigInt
  totalCuratorQueryFees_gte: BigInt
  totalCuratorQueryFees_lte: BigInt
  totalCuratorQueryFees_in: [BigInt!]
  totalCuratorQueryFees_not_in: [BigInt!]
  totalTaxedQueryFees: BigInt
  totalTaxedQueryFees_not: BigInt
  totalTaxedQueryFees_gt: BigInt
  totalTaxedQueryFees_lt: BigInt
  totalTaxedQueryFees_gte: BigInt
  totalTaxedQueryFees_lte: BigInt
  totalTaxedQueryFees_in: [BigInt!]
  totalTaxedQueryFees_not_in: [BigInt!]
  totalUnclaimedQueryFeeRebates: BigInt
  totalUnclaimedQueryFeeRebates_not: BigInt
  totalUnclaimedQueryFeeRebates_gt: BigInt
  totalUnclaimedQueryFeeRebates_lt: BigInt
  totalUnclaimedQueryFeeRebates_gte: BigInt
  totalUnclaimedQueryFeeRebates_lte: BigInt
  totalUnclaimedQueryFeeRebates_in: [BigInt!]
  totalUnclaimedQueryFeeRebates_not_in: [BigInt!]
  totalIndexingRewards: BigInt
  totalIndexingRewards_not: BigInt
  totalIndexingRewards_gt: BigInt
  totalIndexingRewards_lt: BigInt
  totalIndexingRewards_gte: BigInt
  totalIndexingRewards_lte: BigInt
  totalIndexingRewards_in: [BigInt!]
  totalIndexingRewards_not_in: [BigInt!]
  totalIndexingDelegatorRewards: BigInt
  totalIndexingDelegatorRewards_not: BigInt
  totalIndexingDelegatorRewards_gt: BigInt
  totalIndexingDelegatorRewards_lt: BigInt
  totalIndexingDelegatorRewards_gte: BigInt
  totalIndexingDelegatorRewards_lte: BigInt
  totalIndexingDelegatorRewards_in: [BigInt!]
  totalIndexingDelegatorRewards_not_in: [BigInt!]
  totalIndexingIndexerRewards: BigInt
  totalIndexingIndexerRewards_not: BigInt
  totalIndexingIndexerRewards_gt: BigInt
  totalIndexingIndexerRewards_lt: BigInt
  totalIndexingIndexerRewards_gte: BigInt
  totalIndexingIndexerRewards_lte: BigInt
  totalIndexingIndexerRewards_in: [BigInt!]
  totalIndexingIndexerRewards_not_in: [BigInt!]
  totalTokensSignalled: BigInt
  totalTokensSignalled_not: BigInt
  totalTokensSignalled_gt: BigInt
  totalTokensSignalled_lt: BigInt
  totalTokensSignalled_gte: BigInt
  totalTokensSignalled_lte: BigInt
  totalTokensSignalled_in: [BigInt!]
  totalTokensSignalled_not_in: [BigInt!]
  defaultReserveRatio: Int
  defaultReserveRatio_not: Int
  defaultReserveRatio_gt: Int
  defaultReserveRatio_lt: Int
  defaultReserveRatio_gte: Int
  defaultReserveRatio_lte: Int
  defaultReserveRatio_in: [Int!]
  defaultReserveRatio_not_in: [Int!]
  indexerCount: Int
  indexerCount_not: Int
  indexerCount_gt: Int
  indexerCount_lt: Int
  indexerCount_gte: Int
  indexerCount_lte: Int
  indexerCount_in: [Int!]
  indexerCount_not_in: [Int!]
  stakedIndexersCount: Int
  stakedIndexersCount_not: Int
  stakedIndexersCount_gt: Int
  stakedIndexersCount_lt: Int
  stakedIndexersCount_gte: Int
  stakedIndexersCount_lte: Int
  stakedIndexersCount_in: [Int!]
  stakedIndexersCount_not_in: [Int!]
  delegatorCount: Int
  delegatorCount_not: Int
  delegatorCount_gt: Int
  delegatorCount_lt: Int
  delegatorCount_gte: Int
  delegatorCount_lte: Int
  delegatorCount_in: [Int!]
  delegatorCount_not_in: [Int!]
  curatorCount: Int
  curatorCount_not: Int
  curatorCount_gt: Int
  curatorCount_lt: Int
  curatorCount_gte: Int
  curatorCount_lte: Int
  curatorCount_in: [Int!]
  curatorCount_not_in: [Int!]
  subgraphCount: Int
  subgraphCount_not: Int
  subgraphCount_gt: Int
  subgraphCount_lt: Int
  subgraphCount_gte: Int
  subgraphCount_lte: Int
  subgraphCount_in: [Int!]
  subgraphCount_not_in: [Int!]
  subgraphDeploymentCount: Int
  subgraphDeploymentCount_not: Int
  subgraphDeploymentCount_gt: Int
  subgraphDeploymentCount_lt: Int
  subgraphDeploymentCount_gte: Int
  subgraphDeploymentCount_lte: Int
  subgraphDeploymentCount_in: [Int!]
  subgraphDeploymentCount_not_in: [Int!]
  """Filter for the block changed event."""
  _change_block: ANALYTICS__BlockChangedFilter
}

enum ANALYTICS__GraphNetworkDailyData_orderBy {
  id
  dayStart
  dayEnd
  dayNumber
  network
  delegationRatio
  totalTokensStaked
  totalUnstakedTokensLocked
  totalTokensAllocated
  totalDelegatedTokens
  totalQueryFees
  totalIndexerQueryFeesCollected
  totalIndexerQueryFeeRebates
  totalDelegatorQueryFeeRebates
  totalCuratorQueryFees
  totalTaxedQueryFees
  totalUnclaimedQueryFeeRebates
  totalIndexingRewards
  totalIndexingDelegatorRewards
  totalIndexingIndexerRewards
  totalTokensSignalled
  defaultReserveRatio
  indexerCount
  stakedIndexersCount
  delegatorCount
  curatorCount
  subgraphCount
  subgraphDeploymentCount
}

input ANALYTICS__GraphNetwork_filter {
  id: ID
  id_not: ID
  id_gt: ID
  id_lt: ID
  id_gte: ID
  id_lte: ID
  id_in: [ID!]
  id_not_in: [ID!]
  delegationRatio: Int
  delegationRatio_not: Int
  delegationRatio_gt: Int
  delegationRatio_lt: Int
  delegationRatio_gte: Int
  delegationRatio_lte: Int
  delegationRatio_in: [Int!]
  delegationRatio_not_in: [Int!]
  totalTokensStaked: BigInt
  totalTokensStaked_not: BigInt
  totalTokensStaked_gt: BigInt
  totalTokensStaked_lt: BigInt
  totalTokensStaked_gte: BigInt
  totalTokensStaked_lte: BigInt
  totalTokensStaked_in: [BigInt!]
  totalTokensStaked_not_in: [BigInt!]
  totalTokensClaimable: BigInt
  totalTokensClaimable_not: BigInt
  totalTokensClaimable_gt: BigInt
  totalTokensClaimable_lt: BigInt
  totalTokensClaimable_gte: BigInt
  totalTokensClaimable_lte: BigInt
  totalTokensClaimable_in: [BigInt!]
  totalTokensClaimable_not_in: [BigInt!]
  totalUnstakedTokensLocked: BigInt
  totalUnstakedTokensLocked_not: BigInt
  totalUnstakedTokensLocked_gt: BigInt
  totalUnstakedTokensLocked_lt: BigInt
  totalUnstakedTokensLocked_gte: BigInt
  totalUnstakedTokensLocked_lte: BigInt
  totalUnstakedTokensLocked_in: [BigInt!]
  totalUnstakedTokensLocked_not_in: [BigInt!]
  totalTokensAllocated: BigInt
  totalTokensAllocated_not: BigInt
  totalTokensAllocated_gt: BigInt
  totalTokensAllocated_lt: BigInt
  totalTokensAllocated_gte: BigInt
  totalTokensAllocated_lte: BigInt
  totalTokensAllocated_in: [BigInt!]
  totalTokensAllocated_not_in: [BigInt!]
  totalDelegatedTokens: BigInt
  totalDelegatedTokens_not: BigInt
  totalDelegatedTokens_gt: BigInt
  totalDelegatedTokens_lt: BigInt
  totalDelegatedTokens_gte: BigInt
  totalDelegatedTokens_lte: BigInt
  totalDelegatedTokens_in: [BigInt!]
  totalDelegatedTokens_not_in: [BigInt!]
  totalQueryFees: BigInt
  totalQueryFees_not: BigInt
  totalQueryFees_gt: BigInt
  totalQueryFees_lt: BigInt
  totalQueryFees_gte: BigInt
  totalQueryFees_lte: BigInt
  totalQueryFees_in: [BigInt!]
  totalQueryFees_not_in: [BigInt!]
  totalIndexerQueryFeesCollected: BigInt
  totalIndexerQueryFeesCollected_not: BigInt
  totalIndexerQueryFeesCollected_gt: BigInt
  totalIndexerQueryFeesCollected_lt: BigInt
  totalIndexerQueryFeesCollected_gte: BigInt
  totalIndexerQueryFeesCollected_lte: BigInt
  totalIndexerQueryFeesCollected_in: [BigInt!]
  totalIndexerQueryFeesCollected_not_in: [BigInt!]
  totalIndexerQueryFeeRebates: BigInt
  totalIndexerQueryFeeRebates_not: BigInt
  totalIndexerQueryFeeRebates_gt: BigInt
  totalIndexerQueryFeeRebates_lt: BigInt
  totalIndexerQueryFeeRebates_gte: BigInt
  totalIndexerQueryFeeRebates_lte: BigInt
  totalIndexerQueryFeeRebates_in: [BigInt!]
  totalIndexerQueryFeeRebates_not_in: [BigInt!]
  totalDelegatorQueryFeeRebates: BigInt
  totalDelegatorQueryFeeRebates_not: BigInt
  totalDelegatorQueryFeeRebates_gt: BigInt
  totalDelegatorQueryFeeRebates_lt: BigInt
  totalDelegatorQueryFeeRebates_gte: BigInt
  totalDelegatorQueryFeeRebates_lte: BigInt
  totalDelegatorQueryFeeRebates_in: [BigInt!]
  totalDelegatorQueryFeeRebates_not_in: [BigInt!]
  totalCuratorQueryFees: BigInt
  totalCuratorQueryFees_not: BigInt
  totalCuratorQueryFees_gt: BigInt
  totalCuratorQueryFees_lt: BigInt
  totalCuratorQueryFees_gte: BigInt
  totalCuratorQueryFees_lte: BigInt
  totalCuratorQueryFees_in: [BigInt!]
  totalCuratorQueryFees_not_in: [BigInt!]
  totalTaxedQueryFees: BigInt
  totalTaxedQueryFees_not: BigInt
  totalTaxedQueryFees_gt: BigInt
  totalTaxedQueryFees_lt: BigInt
  totalTaxedQueryFees_gte: BigInt
  totalTaxedQueryFees_lte: BigInt
  totalTaxedQueryFees_in: [BigInt!]
  totalTaxedQueryFees_not_in: [BigInt!]
  totalUnclaimedQueryFeeRebates: BigInt
  totalUnclaimedQueryFeeRebates_not: BigInt
  totalUnclaimedQueryFeeRebates_gt: BigInt
  totalUnclaimedQueryFeeRebates_lt: BigInt
  totalUnclaimedQueryFeeRebates_gte: BigInt
  totalUnclaimedQueryFeeRebates_lte: BigInt
  totalUnclaimedQueryFeeRebates_in: [BigInt!]
  totalUnclaimedQueryFeeRebates_not_in: [BigInt!]
  totalIndexingRewards: BigInt
  totalIndexingRewards_not: BigInt
  totalIndexingRewards_gt: BigInt
  totalIndexingRewards_lt: BigInt
  totalIndexingRewards_gte: BigInt
  totalIndexingRewards_lte: BigInt
  totalIndexingRewards_in: [BigInt!]
  totalIndexingRewards_not_in: [BigInt!]
  totalIndexingDelegatorRewards: BigInt
  totalIndexingDelegatorRewards_not: BigInt
  totalIndexingDelegatorRewards_gt: BigInt
  totalIndexingDelegatorRewards_lt: BigInt
  totalIndexingDelegatorRewards_gte: BigInt
  totalIndexingDelegatorRewards_lte: BigInt
  totalIndexingDelegatorRewards_in: [BigInt!]
  totalIndexingDelegatorRewards_not_in: [BigInt!]
  totalIndexingIndexerRewards: BigInt
  totalIndexingIndexerRewards_not: BigInt
  totalIndexingIndexerRewards_gt: BigInt
  totalIndexingIndexerRewards_lt: BigInt
  totalIndexingIndexerRewards_gte: BigInt
  totalIndexingIndexerRewards_lte: BigInt
  totalIndexingIndexerRewards_in: [BigInt!]
  totalIndexingIndexerRewards_not_in: [BigInt!]
  totalTokensSignalled: BigInt
  totalTokensSignalled_not: BigInt
  totalTokensSignalled_gt: BigInt
  totalTokensSignalled_lt: BigInt
  totalTokensSignalled_gte: BigInt
  totalTokensSignalled_lte: BigInt
  totalTokensSignalled_in: [BigInt!]
  totalTokensSignalled_not_in: [BigInt!]
  defaultReserveRatio: Int
  defaultReserveRatio_not: Int
  defaultReserveRatio_gt: Int
  defaultReserveRatio_lt: Int
  defaultReserveRatio_gte: Int
  defaultReserveRatio_lte: Int
  defaultReserveRatio_in: [Int!]
  defaultReserveRatio_not_in: [Int!]
  indexerCount: Int
  indexerCount_not: Int
  indexerCount_gt: Int
  indexerCount_lt: Int
  indexerCount_gte: Int
  indexerCount_lte: Int
  indexerCount_in: [Int!]
  indexerCount_not_in: [Int!]
  stakedIndexersCount: Int
  stakedIndexersCount_not: Int
  stakedIndexersCount_gt: Int
  stakedIndexersCount_lt: Int
  stakedIndexersCount_gte: Int
  stakedIndexersCount_lte: Int
  stakedIndexersCount_in: [Int!]
  stakedIndexersCount_not_in: [Int!]
  delegatorCount: Int
  delegatorCount_not: Int
  delegatorCount_gt: Int
  delegatorCount_lt: Int
  delegatorCount_gte: Int
  delegatorCount_lte: Int
  delegatorCount_in: [Int!]
  delegatorCount_not_in: [Int!]
  curatorCount: Int
  curatorCount_not: Int
  curatorCount_gt: Int
  curatorCount_lt: Int
  curatorCount_gte: Int
  curatorCount_lte: Int
  curatorCount_in: [Int!]
  curatorCount_not_in: [Int!]
  subgraphCount: Int
  subgraphCount_not: Int
  subgraphCount_gt: Int
  subgraphCount_lt: Int
  subgraphCount_gte: Int
  subgraphCount_lte: Int
  subgraphCount_in: [Int!]
  subgraphCount_not_in: [Int!]
  subgraphDeploymentCount: Int
  subgraphDeploymentCount_not: Int
  subgraphDeploymentCount_gt: Int
  subgraphDeploymentCount_lt: Int
  subgraphDeploymentCount_gte: Int
  subgraphDeploymentCount_lte: Int
  subgraphDeploymentCount_in: [Int!]
  subgraphDeploymentCount_not_in: [Int!]
  """Filter for the block changed event."""
  _change_block: ANALYTICS__BlockChangedFilter
}

enum ANALYTICS__GraphNetwork_orderBy {
  id
  delegationRatio
  totalTokensStaked
  totalTokensClaimable
  totalUnstakedTokensLocked
  totalTokensAllocated
  totalDelegatedTokens
  totalQueryFees
  totalIndexerQueryFeesCollected
  totalIndexerQueryFeeRebates
  totalDelegatorQueryFeeRebates
  totalCuratorQueryFees
  totalTaxedQueryFees
  totalUnclaimedQueryFeeRebates
  totalIndexingRewards
  totalIndexingDelegatorRewards
  totalIndexingIndexerRewards
  totalTokensSignalled
  defaultReserveRatio
  indexerCount
  stakedIndexersCount
  delegatorCount
  curatorCount
  subgraphCount
  subgraphDeploymentCount
}

"""
Metadata for the Indexer along with parameters and staking data

"""
type ANALYTICS__Indexer {
  """Eth address of Indexer"""
  id: ID!
  """Time this indexer was created"""
  createdAt: Int!
  """Service registry URL for the indexer"""
  url: String
  """
  Geohash of the indexer. Shows where their indexer is located in the world
  """
  geoHash: String
  account: ANALYTICS__GraphAccount!
  defaultDisplayName: String
  """
  CURRENT tokens staked in the protocol. Decreases on withdraw, not on lock
  """
  stakedTokens: BigInt!
  """CURRENT  tokens allocated on all subgraphs"""
  allocatedTokens: BigInt!
  """NOT IMPLEMENTED - Tokens that have been unstaked and withdrawn"""
  unstakedTokens: BigInt!
  """CURRENT tokens locked"""
  lockedTokens: BigInt!
  """The block when the Indexers tokens unlock"""
  tokensLockedUntil: Int!
  """Active allocations of stake for this Indexer"""
  allocations(skip: Int = 0, first: Int = 100, orderBy: ANALYTICS__Allocation_orderBy, orderDirection: ANALYTICS__OrderDirection, where: ANALYTICS__Allocation_filter): [ANALYTICS__Allocation!]!
  """All allocations of stake for this Indexer (i.e. closed and active)"""
  totalAllocations(skip: Int = 0, first: Int = 100, orderBy: ANALYTICS__Allocation_orderBy, orderDirection: ANALYTICS__OrderDirection, where: ANALYTICS__Allocation_filter): [ANALYTICS__Allocation!]!
  """Number of active allocations of stake for this Indexer"""
  allocationCount: Int!
  """All allocations for this Indexer (i.e. closed and active)"""
  totalAllocationCount: BigInt!
  """Total query fees collected. Includes the portion given to delegators"""
  queryFeesCollected: BigInt!
  """
  Query fee rebate amount claimed from the protocol through cobbs douglas. Does not include portion given to delegators
  """
  queryFeeRebates: BigInt!
  """
  Total indexing rewards earned by this indexer from inflation. Including delegation rewards
  """
  rewardsEarned: BigInt!
  """The total amount of indexing rewards the indexer kept"""
  indexerIndexingRewards: BigInt!
  """The total amount of indexing rewards given to delegators"""
  delegatorIndexingRewards: BigInt!
  """
  Percentage of indexers' own rewards received in relation to its own stake. 1 (100%) means that the indexer is receiving the exact amount that is generated by his own stake
  """
  indexerRewardsOwnGenerationRatio: ANALYTICS__BigDecimal!
  """Amount of delegated tokens that can be eligible for rewards"""
  delegatedCapacity: BigInt!
  """Total token capacity = delegatedCapacity + stakedTokens"""
  tokenCapacity: BigInt!
  """
  Stake available to earn rewards. tokenCapacity - allocationTokens - lockedTokens
  """
  availableStake: BigInt!
  """Delegators to this Indexer"""
  delegators(skip: Int = 0, first: Int = 100, orderBy: ANALYTICS__DelegatedStake_orderBy, orderDirection: ANALYTICS__OrderDirection, where: ANALYTICS__DelegatedStake_filter): [ANALYTICS__DelegatedStake!]!
  """CURRENT tokens delegated to the indexer"""
  delegatedTokens: BigInt!
  """
  Ratio between the amount of the indexers own stake over the total usable stake.
  """
  ownStakeRatio: ANALYTICS__BigDecimal!
  """
  Ratio between the amount of delegated stake over the total usable stake.
  """
  delegatedStakeRatio: ANALYTICS__BigDecimal!
  """Total shares of the delegator pool"""
  delegatorShares: BigInt!
  """Exchange rate of of tokens received for each share"""
  delegationExchangeRate: ANALYTICS__BigDecimal!
  """
  The percent of indexing rewards generated by the total stake that the Indexer keeps for itself. In parts per million
  """
  indexingRewardCut: Int!
  """
  The percent of indexing rewards generated by the delegated stake that the Indexer keeps for itself
  """
  indexingRewardEffectiveCut: ANALYTICS__BigDecimal!
  """
  The percent of reward dilution delegators experience because of overdelegation. Overdelegated stake can't be used to generate rewards but still gets accounted while distributing the generated rewards. This causes dilution of the rewards for the rest of the pool.
  """
  overDelegationDilution: ANALYTICS__BigDecimal!
  """The total amount of query fees given to delegators"""
  delegatorQueryFees: BigInt!
  """
  The percent of query rebate rewards the Indexer keeps for itself. In parts per million
  """
  queryFeeCut: Int!
  """
  The percent of query rebate rewards generated by the delegated stake that the Indexer keeps for itself
  """
  queryFeeEffectiveCut: ANALYTICS__BigDecimal!
  """
  Amount of blocks a delegator chooses for the waiting period for changing their params
  """
  delegatorParameterCooldown: Int!
  """Block number for the last time the delegator updated their parameters"""
  lastDelegationParameterUpdate: Int!
  """
  Count of how many times this indexer has been forced to close an allocation
  """
  forcedClosures: Int!
  delegatorsCount: BigInt!
  dailyData(skip: Int = 0, first: Int = 100, orderBy: ANALYTICS__IndexerDailyData_orderBy, orderDirection: ANALYTICS__OrderDirection, where: ANALYTICS__IndexerDailyData_filter): [ANALYTICS__IndexerDailyData!]!
}

type ANALYTICS__IndexerDailyData {
  """<INDEXER ADDRESS>-<DAY NUMBER>"""
  id: ID!
  """Timestamp for the start of the day that this entity represents. UTC+0"""
  dayStart: BigInt!
  """Timestamp for the end of the day that this entity represents. UTC+0"""
  dayEnd: BigInt!
  """
  Number of the day this entity represents. Day 0 is the network launch day.
  """
  dayNumber: Int!
  """Original entity that this daily data tracks"""
  indexer: ANALYTICS__Indexer!
  """[CURRENT] Value of stakedTokens for that day"""
  stakedTokens: BigInt!
  """[CURRENT] Value of delegatedTokens for that day"""
  delegatedTokens: BigInt!
  """[CURRENT] Value of allocatedTokens for that day"""
  allocatedTokens: BigInt!
  """[CURRENT] Value of availableStake for that day"""
  availableStake: BigInt!
  """
  [CURRENT] Amount of delegated tokens moved that day. Negative means more tokens were undelegated than delegated
  """
  netDailyDelegatedTokens: BigInt!
  """
  [CUMULATIVE] Total amount of query fees collected by the indexer and sent to the rebate pool
  """
  queryFeesCollected: BigInt!
  """
  [CUMULATIVE]Total amount of query fees that the indexer got from rebates
  """
  queryFeeRebates: BigInt!
  """
  [CUMULATIVE] Total amount of query fees that the delegation pool received
  """
  delegatorQueryFees: BigInt!
  """
  [CUMULATIVE] Total amount of indexing rewards generated on this indexer
  """
  totalIndexingRewards: BigInt!
  """[CUMULATIVE] Total amount of indexing rewards that the indexer kept"""
  indexerIndexingRewards: BigInt!
  """
  [CUMULATIVE] Total amount of indexing rewards sent to the delegation pool
  """
  delegatorIndexingRewards: BigInt!
  """
  [CURRENT] Exchange rate for shares of the delegation pool for this specific day
  """
  delegationExchangeRate: ANALYTICS__BigDecimal!
  delegatorsCount: BigInt!
}

input ANALYTICS__IndexerDailyData_filter {
  id: ID
  id_not: ID
  id_gt: ID
  id_lt: ID
  id_gte: ID
  id_lte: ID
  id_in: [ID!]
  id_not_in: [ID!]
  dayStart: BigInt
  dayStart_not: BigInt
  dayStart_gt: BigInt
  dayStart_lt: BigInt
  dayStart_gte: BigInt
  dayStart_lte: BigInt
  dayStart_in: [BigInt!]
  dayStart_not_in: [BigInt!]
  dayEnd: BigInt
  dayEnd_not: BigInt
  dayEnd_gt: BigInt
  dayEnd_lt: BigInt
  dayEnd_gte: BigInt
  dayEnd_lte: BigInt
  dayEnd_in: [BigInt!]
  dayEnd_not_in: [BigInt!]
  dayNumber: Int
  dayNumber_not: Int
  dayNumber_gt: Int
  dayNumber_lt: Int
  dayNumber_gte: Int
  dayNumber_lte: Int
  dayNumber_in: [Int!]
  dayNumber_not_in: [Int!]
  indexer: String
  indexer_not: String
  indexer_gt: String
  indexer_lt: String
  indexer_gte: String
  indexer_lte: String
  indexer_in: [String!]
  indexer_not_in: [String!]
  indexer_contains: String
  indexer_contains_nocase: String
  indexer_not_contains: String
  indexer_not_contains_nocase: String
  indexer_starts_with: String
  indexer_starts_with_nocase: String
  indexer_not_starts_with: String
  indexer_not_starts_with_nocase: String
  indexer_ends_with: String
  indexer_ends_with_nocase: String
  indexer_not_ends_with: String
  indexer_not_ends_with_nocase: String
  indexer_: ANALYTICS__Indexer_filter
  stakedTokens: BigInt
  stakedTokens_not: BigInt
  stakedTokens_gt: BigInt
  stakedTokens_lt: BigInt
  stakedTokens_gte: BigInt
  stakedTokens_lte: BigInt
  stakedTokens_in: [BigInt!]
  stakedTokens_not_in: [BigInt!]
  delegatedTokens: BigInt
  delegatedTokens_not: BigInt
  delegatedTokens_gt: BigInt
  delegatedTokens_lt: BigInt
  delegatedTokens_gte: BigInt
  delegatedTokens_lte: BigInt
  delegatedTokens_in: [BigInt!]
  delegatedTokens_not_in: [BigInt!]
  allocatedTokens: BigInt
  allocatedTokens_not: BigInt
  allocatedTokens_gt: BigInt
  allocatedTokens_lt: BigInt
  allocatedTokens_gte: BigInt
  allocatedTokens_lte: BigInt
  allocatedTokens_in: [BigInt!]
  allocatedTokens_not_in: [BigInt!]
  availableStake: BigInt
  availableStake_not: BigInt
  availableStake_gt: BigInt
  availableStake_lt: BigInt
  availableStake_gte: BigInt
  availableStake_lte: BigInt
  availableStake_in: [BigInt!]
  availableStake_not_in: [BigInt!]
  netDailyDelegatedTokens: BigInt
  netDailyDelegatedTokens_not: BigInt
  netDailyDelegatedTokens_gt: BigInt
  netDailyDelegatedTokens_lt: BigInt
  netDailyDelegatedTokens_gte: BigInt
  netDailyDelegatedTokens_lte: BigInt
  netDailyDelegatedTokens_in: [BigInt!]
  netDailyDelegatedTokens_not_in: [BigInt!]
  queryFeesCollected: BigInt
  queryFeesCollected_not: BigInt
  queryFeesCollected_gt: BigInt
  queryFeesCollected_lt: BigInt
  queryFeesCollected_gte: BigInt
  queryFeesCollected_lte: BigInt
  queryFeesCollected_in: [BigInt!]
  queryFeesCollected_not_in: [BigInt!]
  queryFeeRebates: BigInt
  queryFeeRebates_not: BigInt
  queryFeeRebates_gt: BigInt
  queryFeeRebates_lt: BigInt
  queryFeeRebates_gte: BigInt
  queryFeeRebates_lte: BigInt
  queryFeeRebates_in: [BigInt!]
  queryFeeRebates_not_in: [BigInt!]
  delegatorQueryFees: BigInt
  delegatorQueryFees_not: BigInt
  delegatorQueryFees_gt: BigInt
  delegatorQueryFees_lt: BigInt
  delegatorQueryFees_gte: BigInt
  delegatorQueryFees_lte: BigInt
  delegatorQueryFees_in: [BigInt!]
  delegatorQueryFees_not_in: [BigInt!]
  totalIndexingRewards: BigInt
  totalIndexingRewards_not: BigInt
  totalIndexingRewards_gt: BigInt
  totalIndexingRewards_lt: BigInt
  totalIndexingRewards_gte: BigInt
  totalIndexingRewards_lte: BigInt
  totalIndexingRewards_in: [BigInt!]
  totalIndexingRewards_not_in: [BigInt!]
  indexerIndexingRewards: BigInt
  indexerIndexingRewards_not: BigInt
  indexerIndexingRewards_gt: BigInt
  indexerIndexingRewards_lt: BigInt
  indexerIndexingRewards_gte: BigInt
  indexerIndexingRewards_lte: BigInt
  indexerIndexingRewards_in: [BigInt!]
  indexerIndexingRewards_not_in: [BigInt!]
  delegatorIndexingRewards: BigInt
  delegatorIndexingRewards_not: BigInt
  delegatorIndexingRewards_gt: BigInt
  delegatorIndexingRewards_lt: BigInt
  delegatorIndexingRewards_gte: BigInt
  delegatorIndexingRewards_lte: BigInt
  delegatorIndexingRewards_in: [BigInt!]
  delegatorIndexingRewards_not_in: [BigInt!]
  delegationExchangeRate: ANALYTICS__BigDecimal
  delegationExchangeRate_not: ANALYTICS__BigDecimal
  delegationExchangeRate_gt: ANALYTICS__BigDecimal
  delegationExchangeRate_lt: ANALYTICS__BigDecimal
  delegationExchangeRate_gte: ANALYTICS__BigDecimal
  delegationExchangeRate_lte: ANALYTICS__BigDecimal
  delegationExchangeRate_in: [ANALYTICS__BigDecimal!]
  delegationExchangeRate_not_in: [ANALYTICS__BigDecimal!]
  delegatorsCount: BigInt
  delegatorsCount_not: BigInt
  delegatorsCount_gt: BigInt
  delegatorsCount_lt: BigInt
  delegatorsCount_gte: BigInt
  delegatorsCount_lte: BigInt
  delegatorsCount_in: [BigInt!]
  delegatorsCount_not_in: [BigInt!]
  """Filter for the block changed event."""
  _change_block: ANALYTICS__BlockChangedFilter
}

enum ANALYTICS__IndexerDailyData_orderBy {
  id
  dayStart
  dayEnd
  dayNumber
  indexer
  stakedTokens
  delegatedTokens
  allocatedTokens
  availableStake
  netDailyDelegatedTokens
  queryFeesCollected
  queryFeeRebates
  delegatorQueryFees
  totalIndexingRewards
  indexerIndexingRewards
  delegatorIndexingRewards
  delegationExchangeRate
  delegatorsCount
}

"""
Analytics

"""
type ANALYTICS__IndexerDelegatedStakeRelation {
  """
  Auxiliary entity to DelegatedStake to make it easier to batch update those delegations
  """
  id: ID!
  """Indexer entity where the delegation resides"""
  indexer: ANALYTICS__Indexer!
  """Delegator entity owner of said delegation stake"""
  delegator: ANALYTICS__Delegator!
  """DelegatedStake entity that represents the delegation"""
  stake: ANALYTICS__DelegatedStake!
  """
  Whether the delegation is active or not. Useful to avoid updating non-active delegations without deleting the entity.
  """
  active: Boolean!
}

input ANALYTICS__IndexerDelegatedStakeRelation_filter {
  id: ID
  id_not: ID
  id_gt: ID
  id_lt: ID
  id_gte: ID
  id_lte: ID
  id_in: [ID!]
  id_not_in: [ID!]
  indexer: String
  indexer_not: String
  indexer_gt: String
  indexer_lt: String
  indexer_gte: String
  indexer_lte: String
  indexer_in: [String!]
  indexer_not_in: [String!]
  indexer_contains: String
  indexer_contains_nocase: String
  indexer_not_contains: String
  indexer_not_contains_nocase: String
  indexer_starts_with: String
  indexer_starts_with_nocase: String
  indexer_not_starts_with: String
  indexer_not_starts_with_nocase: String
  indexer_ends_with: String
  indexer_ends_with_nocase: String
  indexer_not_ends_with: String
  indexer_not_ends_with_nocase: String
  indexer_: ANALYTICS__Indexer_filter
  delegator: String
  delegator_not: String
  delegator_gt: String
  delegator_lt: String
  delegator_gte: String
  delegator_lte: String
  delegator_in: [String!]
  delegator_not_in: [String!]
  delegator_contains: String
  delegator_contains_nocase: String
  delegator_not_contains: String
  delegator_not_contains_nocase: String
  delegator_starts_with: String
  delegator_starts_with_nocase: String
  delegator_not_starts_with: String
  delegator_not_starts_with_nocase: String
  delegator_ends_with: String
  delegator_ends_with_nocase: String
  delegator_not_ends_with: String
  delegator_not_ends_with_nocase: String
  delegator_: ANALYTICS__Delegator_filter
  stake: String
  stake_not: String
  stake_gt: String
  stake_lt: String
  stake_gte: String
  stake_lte: String
  stake_in: [String!]
  stake_not_in: [String!]
  stake_contains: String
  stake_contains_nocase: String
  stake_not_contains: String
  stake_not_contains_nocase: String
  stake_starts_with: String
  stake_starts_with_nocase: String
  stake_not_starts_with: String
  stake_not_starts_with_nocase: String
  stake_ends_with: String
  stake_ends_with_nocase: String
  stake_not_ends_with: String
  stake_not_ends_with_nocase: String
  stake_: ANALYTICS__DelegatedStake_filter
  active: Boolean
  active_not: Boolean
  active_in: [Boolean!]
  active_not_in: [Boolean!]
  """Filter for the block changed event."""
  _change_block: ANALYTICS__BlockChangedFilter
}

enum ANALYTICS__IndexerDelegatedStakeRelation_orderBy {
  id
  indexer
  delegator
  stake
  active
}

input ANALYTICS__Indexer_filter {
  id: ID
  id_not: ID
  id_gt: ID
  id_lt: ID
  id_gte: ID
  id_lte: ID
  id_in: [ID!]
  id_not_in: [ID!]
  createdAt: Int
  createdAt_not: Int
  createdAt_gt: Int
  createdAt_lt: Int
  createdAt_gte: Int
  createdAt_lte: Int
  createdAt_in: [Int!]
  createdAt_not_in: [Int!]
  url: String
  url_not: String
  url_gt: String
  url_lt: String
  url_gte: String
  url_lte: String
  url_in: [String!]
  url_not_in: [String!]
  url_contains: String
  url_contains_nocase: String
  url_not_contains: String
  url_not_contains_nocase: String
  url_starts_with: String
  url_starts_with_nocase: String
  url_not_starts_with: String
  url_not_starts_with_nocase: String
  url_ends_with: String
  url_ends_with_nocase: String
  url_not_ends_with: String
  url_not_ends_with_nocase: String
  geoHash: String
  geoHash_not: String
  geoHash_gt: String
  geoHash_lt: String
  geoHash_gte: String
  geoHash_lte: String
  geoHash_in: [String!]
  geoHash_not_in: [String!]
  geoHash_contains: String
  geoHash_contains_nocase: String
  geoHash_not_contains: String
  geoHash_not_contains_nocase: String
  geoHash_starts_with: String
  geoHash_starts_with_nocase: String
  geoHash_not_starts_with: String
  geoHash_not_starts_with_nocase: String
  geoHash_ends_with: String
  geoHash_ends_with_nocase: String
  geoHash_not_ends_with: String
  geoHash_not_ends_with_nocase: String
  account: String
  account_not: String
  account_gt: String
  account_lt: String
  account_gte: String
  account_lte: String
  account_in: [String!]
  account_not_in: [String!]
  account_contains: String
  account_contains_nocase: String
  account_not_contains: String
  account_not_contains_nocase: String
  account_starts_with: String
  account_starts_with_nocase: String
  account_not_starts_with: String
  account_not_starts_with_nocase: String
  account_ends_with: String
  account_ends_with_nocase: String
  account_not_ends_with: String
  account_not_ends_with_nocase: String
  account_: ANALYTICS__GraphAccount_filter
  defaultDisplayName: String
  defaultDisplayName_not: String
  defaultDisplayName_gt: String
  defaultDisplayName_lt: String
  defaultDisplayName_gte: String
  defaultDisplayName_lte: String
  defaultDisplayName_in: [String!]
  defaultDisplayName_not_in: [String!]
  defaultDisplayName_contains: String
  defaultDisplayName_contains_nocase: String
  defaultDisplayName_not_contains: String
  defaultDisplayName_not_contains_nocase: String
  defaultDisplayName_starts_with: String
  defaultDisplayName_starts_with_nocase: String
  defaultDisplayName_not_starts_with: String
  defaultDisplayName_not_starts_with_nocase: String
  defaultDisplayName_ends_with: String
  defaultDisplayName_ends_with_nocase: String
  defaultDisplayName_not_ends_with: String
  defaultDisplayName_not_ends_with_nocase: String
  stakedTokens: BigInt
  stakedTokens_not: BigInt
  stakedTokens_gt: BigInt
  stakedTokens_lt: BigInt
  stakedTokens_gte: BigInt
  stakedTokens_lte: BigInt
  stakedTokens_in: [BigInt!]
  stakedTokens_not_in: [BigInt!]
  allocatedTokens: BigInt
  allocatedTokens_not: BigInt
  allocatedTokens_gt: BigInt
  allocatedTokens_lt: BigInt
  allocatedTokens_gte: BigInt
  allocatedTokens_lte: BigInt
  allocatedTokens_in: [BigInt!]
  allocatedTokens_not_in: [BigInt!]
  unstakedTokens: BigInt
  unstakedTokens_not: BigInt
  unstakedTokens_gt: BigInt
  unstakedTokens_lt: BigInt
  unstakedTokens_gte: BigInt
  unstakedTokens_lte: BigInt
  unstakedTokens_in: [BigInt!]
  unstakedTokens_not_in: [BigInt!]
  lockedTokens: BigInt
  lockedTokens_not: BigInt
  lockedTokens_gt: BigInt
  lockedTokens_lt: BigInt
  lockedTokens_gte: BigInt
  lockedTokens_lte: BigInt
  lockedTokens_in: [BigInt!]
  lockedTokens_not_in: [BigInt!]
  tokensLockedUntil: Int
  tokensLockedUntil_not: Int
  tokensLockedUntil_gt: Int
  tokensLockedUntil_lt: Int
  tokensLockedUntil_gte: Int
  tokensLockedUntil_lte: Int
  tokensLockedUntil_in: [Int!]
  tokensLockedUntil_not_in: [Int!]
  allocations_: ANALYTICS__Allocation_filter
  totalAllocations_: ANALYTICS__Allocation_filter
  allocationCount: Int
  allocationCount_not: Int
  allocationCount_gt: Int
  allocationCount_lt: Int
  allocationCount_gte: Int
  allocationCount_lte: Int
  allocationCount_in: [Int!]
  allocationCount_not_in: [Int!]
  totalAllocationCount: BigInt
  totalAllocationCount_not: BigInt
  totalAllocationCount_gt: BigInt
  totalAllocationCount_lt: BigInt
  totalAllocationCount_gte: BigInt
  totalAllocationCount_lte: BigInt
  totalAllocationCount_in: [BigInt!]
  totalAllocationCount_not_in: [BigInt!]
  queryFeesCollected: BigInt
  queryFeesCollected_not: BigInt
  queryFeesCollected_gt: BigInt
  queryFeesCollected_lt: BigInt
  queryFeesCollected_gte: BigInt
  queryFeesCollected_lte: BigInt
  queryFeesCollected_in: [BigInt!]
  queryFeesCollected_not_in: [BigInt!]
  queryFeeRebates: BigInt
  queryFeeRebates_not: BigInt
  queryFeeRebates_gt: BigInt
  queryFeeRebates_lt: BigInt
  queryFeeRebates_gte: BigInt
  queryFeeRebates_lte: BigInt
  queryFeeRebates_in: [BigInt!]
  queryFeeRebates_not_in: [BigInt!]
  rewardsEarned: BigInt
  rewardsEarned_not: BigInt
  rewardsEarned_gt: BigInt
  rewardsEarned_lt: BigInt
  rewardsEarned_gte: BigInt
  rewardsEarned_lte: BigInt
  rewardsEarned_in: [BigInt!]
  rewardsEarned_not_in: [BigInt!]
  indexerIndexingRewards: BigInt
  indexerIndexingRewards_not: BigInt
  indexerIndexingRewards_gt: BigInt
  indexerIndexingRewards_lt: BigInt
  indexerIndexingRewards_gte: BigInt
  indexerIndexingRewards_lte: BigInt
  indexerIndexingRewards_in: [BigInt!]
  indexerIndexingRewards_not_in: [BigInt!]
  delegatorIndexingRewards: BigInt
  delegatorIndexingRewards_not: BigInt
  delegatorIndexingRewards_gt: BigInt
  delegatorIndexingRewards_lt: BigInt
  delegatorIndexingRewards_gte: BigInt
  delegatorIndexingRewards_lte: BigInt
  delegatorIndexingRewards_in: [BigInt!]
  delegatorIndexingRewards_not_in: [BigInt!]
  indexerRewardsOwnGenerationRatio: ANALYTICS__BigDecimal
  indexerRewardsOwnGenerationRatio_not: ANALYTICS__BigDecimal
  indexerRewardsOwnGenerationRatio_gt: ANALYTICS__BigDecimal
  indexerRewardsOwnGenerationRatio_lt: ANALYTICS__BigDecimal
  indexerRewardsOwnGenerationRatio_gte: ANALYTICS__BigDecimal
  indexerRewardsOwnGenerationRatio_lte: ANALYTICS__BigDecimal
  indexerRewardsOwnGenerationRatio_in: [ANALYTICS__BigDecimal!]
  indexerRewardsOwnGenerationRatio_not_in: [ANALYTICS__BigDecimal!]
  delegatedCapacity: BigInt
  delegatedCapacity_not: BigInt
  delegatedCapacity_gt: BigInt
  delegatedCapacity_lt: BigInt
  delegatedCapacity_gte: BigInt
  delegatedCapacity_lte: BigInt
  delegatedCapacity_in: [BigInt!]
  delegatedCapacity_not_in: [BigInt!]
  tokenCapacity: BigInt
  tokenCapacity_not: BigInt
  tokenCapacity_gt: BigInt
  tokenCapacity_lt: BigInt
  tokenCapacity_gte: BigInt
  tokenCapacity_lte: BigInt
  tokenCapacity_in: [BigInt!]
  tokenCapacity_not_in: [BigInt!]
  availableStake: BigInt
  availableStake_not: BigInt
  availableStake_gt: BigInt
  availableStake_lt: BigInt
  availableStake_gte: BigInt
  availableStake_lte: BigInt
  availableStake_in: [BigInt!]
  availableStake_not_in: [BigInt!]
  delegators_: ANALYTICS__DelegatedStake_filter
  delegatedTokens: BigInt
  delegatedTokens_not: BigInt
  delegatedTokens_gt: BigInt
  delegatedTokens_lt: BigInt
  delegatedTokens_gte: BigInt
  delegatedTokens_lte: BigInt
  delegatedTokens_in: [BigInt!]
  delegatedTokens_not_in: [BigInt!]
  ownStakeRatio: ANALYTICS__BigDecimal
  ownStakeRatio_not: ANALYTICS__BigDecimal
  ownStakeRatio_gt: ANALYTICS__BigDecimal
  ownStakeRatio_lt: ANALYTICS__BigDecimal
  ownStakeRatio_gte: ANALYTICS__BigDecimal
  ownStakeRatio_lte: ANALYTICS__BigDecimal
  ownStakeRatio_in: [ANALYTICS__BigDecimal!]
  ownStakeRatio_not_in: [ANALYTICS__BigDecimal!]
  delegatedStakeRatio: ANALYTICS__BigDecimal
  delegatedStakeRatio_not: ANALYTICS__BigDecimal
  delegatedStakeRatio_gt: ANALYTICS__BigDecimal
  delegatedStakeRatio_lt: ANALYTICS__BigDecimal
  delegatedStakeRatio_gte: ANALYTICS__BigDecimal
  delegatedStakeRatio_lte: ANALYTICS__BigDecimal
  delegatedStakeRatio_in: [ANALYTICS__BigDecimal!]
  delegatedStakeRatio_not_in: [ANALYTICS__BigDecimal!]
  delegatorShares: BigInt
  delegatorShares_not: BigInt
  delegatorShares_gt: BigInt
  delegatorShares_lt: BigInt
  delegatorShares_gte: BigInt
  delegatorShares_lte: BigInt
  delegatorShares_in: [BigInt!]
  delegatorShares_not_in: [BigInt!]
  delegationExchangeRate: ANALYTICS__BigDecimal
  delegationExchangeRate_not: ANALYTICS__BigDecimal
  delegationExchangeRate_gt: ANALYTICS__BigDecimal
  delegationExchangeRate_lt: ANALYTICS__BigDecimal
  delegationExchangeRate_gte: ANALYTICS__BigDecimal
  delegationExchangeRate_lte: ANALYTICS__BigDecimal
  delegationExchangeRate_in: [ANALYTICS__BigDecimal!]
  delegationExchangeRate_not_in: [ANALYTICS__BigDecimal!]
  indexingRewardCut: Int
  indexingRewardCut_not: Int
  indexingRewardCut_gt: Int
  indexingRewardCut_lt: Int
  indexingRewardCut_gte: Int
  indexingRewardCut_lte: Int
  indexingRewardCut_in: [Int!]
  indexingRewardCut_not_in: [Int!]
  indexingRewardEffectiveCut: ANALYTICS__BigDecimal
  indexingRewardEffectiveCut_not: ANALYTICS__BigDecimal
  indexingRewardEffectiveCut_gt: ANALYTICS__BigDecimal
  indexingRewardEffectiveCut_lt: ANALYTICS__BigDecimal
  indexingRewardEffectiveCut_gte: ANALYTICS__BigDecimal
  indexingRewardEffectiveCut_lte: ANALYTICS__BigDecimal
  indexingRewardEffectiveCut_in: [ANALYTICS__BigDecimal!]
  indexingRewardEffectiveCut_not_in: [ANALYTICS__BigDecimal!]
  overDelegationDilution: ANALYTICS__BigDecimal
  overDelegationDilution_not: ANALYTICS__BigDecimal
  overDelegationDilution_gt: ANALYTICS__BigDecimal
  overDelegationDilution_lt: ANALYTICS__BigDecimal
  overDelegationDilution_gte: ANALYTICS__BigDecimal
  overDelegationDilution_lte: ANALYTICS__BigDecimal
  overDelegationDilution_in: [ANALYTICS__BigDecimal!]
  overDelegationDilution_not_in: [ANALYTICS__BigDecimal!]
  delegatorQueryFees: BigInt
  delegatorQueryFees_not: BigInt
  delegatorQueryFees_gt: BigInt
  delegatorQueryFees_lt: BigInt
  delegatorQueryFees_gte: BigInt
  delegatorQueryFees_lte: BigInt
  delegatorQueryFees_in: [BigInt!]
  delegatorQueryFees_not_in: [BigInt!]
  queryFeeCut: Int
  queryFeeCut_not: Int
  queryFeeCut_gt: Int
  queryFeeCut_lt: Int
  queryFeeCut_gte: Int
  queryFeeCut_lte: Int
  queryFeeCut_in: [Int!]
  queryFeeCut_not_in: [Int!]
  queryFeeEffectiveCut: ANALYTICS__BigDecimal
  queryFeeEffectiveCut_not: ANALYTICS__BigDecimal
  queryFeeEffectiveCut_gt: ANALYTICS__BigDecimal
  queryFeeEffectiveCut_lt: ANALYTICS__BigDecimal
  queryFeeEffectiveCut_gte: ANALYTICS__BigDecimal
  queryFeeEffectiveCut_lte: ANALYTICS__BigDecimal
  queryFeeEffectiveCut_in: [ANALYTICS__BigDecimal!]
  queryFeeEffectiveCut_not_in: [ANALYTICS__BigDecimal!]
  delegatorParameterCooldown: Int
  delegatorParameterCooldown_not: Int
  delegatorParameterCooldown_gt: Int
  delegatorParameterCooldown_lt: Int
  delegatorParameterCooldown_gte: Int
  delegatorParameterCooldown_lte: Int
  delegatorParameterCooldown_in: [Int!]
  delegatorParameterCooldown_not_in: [Int!]
  lastDelegationParameterUpdate: Int
  lastDelegationParameterUpdate_not: Int
  lastDelegationParameterUpdate_gt: Int
  lastDelegationParameterUpdate_lt: Int
  lastDelegationParameterUpdate_gte: Int
  lastDelegationParameterUpdate_lte: Int
  lastDelegationParameterUpdate_in: [Int!]
  lastDelegationParameterUpdate_not_in: [Int!]
  forcedClosures: Int
  forcedClosures_not: Int
  forcedClosures_gt: Int
  forcedClosures_lt: Int
  forcedClosures_gte: Int
  forcedClosures_lte: Int
  forcedClosures_in: [Int!]
  forcedClosures_not_in: [Int!]
  delegatorsCount: BigInt
  delegatorsCount_not: BigInt
  delegatorsCount_gt: BigInt
  delegatorsCount_lt: BigInt
  delegatorsCount_gte: BigInt
  delegatorsCount_lte: BigInt
  delegatorsCount_in: [BigInt!]
  delegatorsCount_not_in: [BigInt!]
  dailyData_: ANALYTICS__IndexerDailyData_filter
  """Filter for the block changed event."""
  _change_block: ANALYTICS__BlockChangedFilter
}

enum ANALYTICS__Indexer_orderBy {
  id
  createdAt
  url
  geoHash
  account
  defaultDisplayName
  stakedTokens
  allocatedTokens
  unstakedTokens
  lockedTokens
  tokensLockedUntil
  allocations
  totalAllocations
  allocationCount
  totalAllocationCount
  queryFeesCollected
  queryFeeRebates
  rewardsEarned
  indexerIndexingRewards
  delegatorIndexingRewards
  indexerRewardsOwnGenerationRatio
  delegatedCapacity
  tokenCapacity
  availableStake
  delegators
  delegatedTokens
  ownStakeRatio
  delegatedStakeRatio
  delegatorShares
  delegationExchangeRate
  indexingRewardCut
  indexingRewardEffectiveCut
  overDelegationDilution
  delegatorQueryFees
  queryFeeCut
  queryFeeEffectiveCut
  delegatorParameterCooldown
  lastDelegationParameterUpdate
  forcedClosures
  delegatorsCount
  dailyData
}

"""
Curator Name Signal for a single Subgraph

"""
type ANALYTICS__NameSignal {
  """Eth address + subgraph ID"""
  id: ID!
  """Eth address of the curator"""
  curator: ANALYTICS__Curator!
  """Subgraph being signalled"""
  subgraph: ANALYTICS__Subgraph!
  """CUMULATIVE number of tokens the curator has signalled"""
  signalledTokens: BigInt!
  """CUMULATIVE number of tokens the curator has unsignalled"""
  unsignalledTokens: BigInt!
  """Tokens the curator has withdrawn from a deprecated name curve"""
  withdrawnTokens: BigInt!
  """Signal that the curator has from signaling their GRT"""
  nameSignal: BigInt!
  """Block for which the curator last entered or exited the curve"""
  lastNameSignalChange: Int!
  """
  Summation of realized rewards from before the last time the curator entered the curation curve
  """
  realizedRewards: BigInt!
  """Curator average cost basis for this name signal on this subgraph"""
  averageCostBasis: ANALYTICS__BigDecimal!
  """averageCostBasis / nameSignal"""
  averageCostBasisPerSignal: ANALYTICS__BigDecimal!
  entityVersion: Int!
  linkedEntity: ANALYTICS__NameSignal
}

"""
All relevant data for a Name Signal Transaction in The Graph Network

"""
type ANALYTICS__NameSignalTransaction implements ANALYTICS__Transaction {
  id: ID!
  blockNumber: Int!
  timestamp: Int!
  signer: ANALYTICS__GraphAccount!
  type: ANALYTICS__TransactionType!
  """Amount of name signal updated"""
  nameSignal: BigInt!
  """Amount of version signal updated"""
  versionSignal: BigInt!
  """Tokens used"""
  tokens: BigInt!
  """Subgraph where name signal was updated"""
  subgraph: ANALYTICS__Subgraph!
}

input ANALYTICS__NameSignalTransaction_filter {
  id: ID
  id_not: ID
  id_gt: ID
  id_lt: ID
  id_gte: ID
  id_lte: ID
  id_in: [ID!]
  id_not_in: [ID!]
  blockNumber: Int
  blockNumber_not: Int
  blockNumber_gt: Int
  blockNumber_lt: Int
  blockNumber_gte: Int
  blockNumber_lte: Int
  blockNumber_in: [Int!]
  blockNumber_not_in: [Int!]
  timestamp: Int
  timestamp_not: Int
  timestamp_gt: Int
  timestamp_lt: Int
  timestamp_gte: Int
  timestamp_lte: Int
  timestamp_in: [Int!]
  timestamp_not_in: [Int!]
  signer: String
  signer_not: String
  signer_gt: String
  signer_lt: String
  signer_gte: String
  signer_lte: String
  signer_in: [String!]
  signer_not_in: [String!]
  signer_contains: String
  signer_contains_nocase: String
  signer_not_contains: String
  signer_not_contains_nocase: String
  signer_starts_with: String
  signer_starts_with_nocase: String
  signer_not_starts_with: String
  signer_not_starts_with_nocase: String
  signer_ends_with: String
  signer_ends_with_nocase: String
  signer_not_ends_with: String
  signer_not_ends_with_nocase: String
  signer_: ANALYTICS__GraphAccount_filter
  type: ANALYTICS__TransactionType
  type_not: ANALYTICS__TransactionType
  type_in: [ANALYTICS__TransactionType!]
  type_not_in: [ANALYTICS__TransactionType!]
  nameSignal: BigInt
  nameSignal_not: BigInt
  nameSignal_gt: BigInt
  nameSignal_lt: BigInt
  nameSignal_gte: BigInt
  nameSignal_lte: BigInt
  nameSignal_in: [BigInt!]
  nameSignal_not_in: [BigInt!]
  versionSignal: BigInt
  versionSignal_not: BigInt
  versionSignal_gt: BigInt
  versionSignal_lt: BigInt
  versionSignal_gte: BigInt
  versionSignal_lte: BigInt
  versionSignal_in: [BigInt!]
  versionSignal_not_in: [BigInt!]
  tokens: BigInt
  tokens_not: BigInt
  tokens_gt: BigInt
  tokens_lt: BigInt
  tokens_gte: BigInt
  tokens_lte: BigInt
  tokens_in: [BigInt!]
  tokens_not_in: [BigInt!]
  subgraph: String
  subgraph_not: String
  subgraph_gt: String
  subgraph_lt: String
  subgraph_gte: String
  subgraph_lte: String
  subgraph_in: [String!]
  subgraph_not_in: [String!]
  subgraph_contains: String
  subgraph_contains_nocase: String
  subgraph_not_contains: String
  subgraph_not_contains_nocase: String
  subgraph_starts_with: String
  subgraph_starts_with_nocase: String
  subgraph_not_starts_with: String
  subgraph_not_starts_with_nocase: String
  subgraph_ends_with: String
  subgraph_ends_with_nocase: String
  subgraph_not_ends_with: String
  subgraph_not_ends_with_nocase: String
  subgraph_: ANALYTICS__Subgraph_filter
  """Filter for the block changed event."""
  _change_block: ANALYTICS__BlockChangedFilter
}

enum ANALYTICS__NameSignalTransaction_orderBy {
  id
  blockNumber
  timestamp
  signer
  type
  nameSignal
  versionSignal
  tokens
  subgraph
}

input ANALYTICS__NameSignal_filter {
  id: ID
  id_not: ID
  id_gt: ID
  id_lt: ID
  id_gte: ID
  id_lte: ID
  id_in: [ID!]
  id_not_in: [ID!]
  curator: String
  curator_not: String
  curator_gt: String
  curator_lt: String
  curator_gte: String
  curator_lte: String
  curator_in: [String!]
  curator_not_in: [String!]
  curator_contains: String
  curator_contains_nocase: String
  curator_not_contains: String
  curator_not_contains_nocase: String
  curator_starts_with: String
  curator_starts_with_nocase: String
  curator_not_starts_with: String
  curator_not_starts_with_nocase: String
  curator_ends_with: String
  curator_ends_with_nocase: String
  curator_not_ends_with: String
  curator_not_ends_with_nocase: String
  curator_: ANALYTICS__Curator_filter
  subgraph: String
  subgraph_not: String
  subgraph_gt: String
  subgraph_lt: String
  subgraph_gte: String
  subgraph_lte: String
  subgraph_in: [String!]
  subgraph_not_in: [String!]
  subgraph_contains: String
  subgraph_contains_nocase: String
  subgraph_not_contains: String
  subgraph_not_contains_nocase: String
  subgraph_starts_with: String
  subgraph_starts_with_nocase: String
  subgraph_not_starts_with: String
  subgraph_not_starts_with_nocase: String
  subgraph_ends_with: String
  subgraph_ends_with_nocase: String
  subgraph_not_ends_with: String
  subgraph_not_ends_with_nocase: String
  subgraph_: ANALYTICS__Subgraph_filter
  signalledTokens: BigInt
  signalledTokens_not: BigInt
  signalledTokens_gt: BigInt
  signalledTokens_lt: BigInt
  signalledTokens_gte: BigInt
  signalledTokens_lte: BigInt
  signalledTokens_in: [BigInt!]
  signalledTokens_not_in: [BigInt!]
  unsignalledTokens: BigInt
  unsignalledTokens_not: BigInt
  unsignalledTokens_gt: BigInt
  unsignalledTokens_lt: BigInt
  unsignalledTokens_gte: BigInt
  unsignalledTokens_lte: BigInt
  unsignalledTokens_in: [BigInt!]
  unsignalledTokens_not_in: [BigInt!]
  withdrawnTokens: BigInt
  withdrawnTokens_not: BigInt
  withdrawnTokens_gt: BigInt
  withdrawnTokens_lt: BigInt
  withdrawnTokens_gte: BigInt
  withdrawnTokens_lte: BigInt
  withdrawnTokens_in: [BigInt!]
  withdrawnTokens_not_in: [BigInt!]
  nameSignal: BigInt
  nameSignal_not: BigInt
  nameSignal_gt: BigInt
  nameSignal_lt: BigInt
  nameSignal_gte: BigInt
  nameSignal_lte: BigInt
  nameSignal_in: [BigInt!]
  nameSignal_not_in: [BigInt!]
  lastNameSignalChange: Int
  lastNameSignalChange_not: Int
  lastNameSignalChange_gt: Int
  lastNameSignalChange_lt: Int
  lastNameSignalChange_gte: Int
  lastNameSignalChange_lte: Int
  lastNameSignalChange_in: [Int!]
  lastNameSignalChange_not_in: [Int!]
  realizedRewards: BigInt
  realizedRewards_not: BigInt
  realizedRewards_gt: BigInt
  realizedRewards_lt: BigInt
  realizedRewards_gte: BigInt
  realizedRewards_lte: BigInt
  realizedRewards_in: [BigInt!]
  realizedRewards_not_in: [BigInt!]
  averageCostBasis: ANALYTICS__BigDecimal
  averageCostBasis_not: ANALYTICS__BigDecimal
  averageCostBasis_gt: ANALYTICS__BigDecimal
  averageCostBasis_lt: ANALYTICS__BigDecimal
  averageCostBasis_gte: ANALYTICS__BigDecimal
  averageCostBasis_lte: ANALYTICS__BigDecimal
  averageCostBasis_in: [ANALYTICS__BigDecimal!]
  averageCostBasis_not_in: [ANALYTICS__BigDecimal!]
  averageCostBasisPerSignal: ANALYTICS__BigDecimal
  averageCostBasisPerSignal_not: ANALYTICS__BigDecimal
  averageCostBasisPerSignal_gt: ANALYTICS__BigDecimal
  averageCostBasisPerSignal_lt: ANALYTICS__BigDecimal
  averageCostBasisPerSignal_gte: ANALYTICS__BigDecimal
  averageCostBasisPerSignal_lte: ANALYTICS__BigDecimal
  averageCostBasisPerSignal_in: [ANALYTICS__BigDecimal!]
  averageCostBasisPerSignal_not_in: [ANALYTICS__BigDecimal!]
  entityVersion: Int
  entityVersion_not: Int
  entityVersion_gt: Int
  entityVersion_lt: Int
  entityVersion_gte: Int
  entityVersion_lte: Int
  entityVersion_in: [Int!]
  entityVersion_not_in: [Int!]
  linkedEntity: String
  linkedEntity_not: String
  linkedEntity_gt: String
  linkedEntity_lt: String
  linkedEntity_gte: String
  linkedEntity_lte: String
  linkedEntity_in: [String!]
  linkedEntity_not_in: [String!]
  linkedEntity_contains: String
  linkedEntity_contains_nocase: String
  linkedEntity_not_contains: String
  linkedEntity_not_contains_nocase: String
  linkedEntity_starts_with: String
  linkedEntity_starts_with_nocase: String
  linkedEntity_not_starts_with: String
  linkedEntity_not_starts_with_nocase: String
  linkedEntity_ends_with: String
  linkedEntity_ends_with_nocase: String
  linkedEntity_not_ends_with: String
  linkedEntity_not_ends_with_nocase: String
  linkedEntity_: ANALYTICS__NameSignal_filter
  """Filter for the block changed event."""
  _change_block: ANALYTICS__BlockChangedFilter
}

enum ANALYTICS__NameSignal_orderBy {
  id
  curator
  subgraph
  signalledTokens
  unsignalledTokens
  withdrawnTokens
  nameSignal
  lastNameSignalChange
  realizedRewards
  averageCostBasis
  averageCostBasisPerSignal
  entityVersion
  linkedEntity
}

enum ANALYTICS__NameSystem {
  ENS
}

"""Defines the order direction, either ascending or descending"""
enum ANALYTICS__OrderDirection {
  asc
  desc
}

"""
Global pool of query fees for closed state channels. Each Epoch has a single pool,
hence why they share the same IDs.

"""
type ANALYTICS__Pool {
  """Epoch number of the pool"""
  id: ID!
  """
  Total effective allocation tokens from all allocations closed in this epoch
  """
  allocation: BigInt!
  """Total query fees collected in this epoch"""
  totalQueryFees: BigInt!
  """
  Total query fees claimed in this epoch. Can be smaller than totalFees because of cobbs douglas function 
  """
  claimedFees: BigInt!
  """
  Total rewards from query fees deposited to all curator bonding curves during the epoch
  """
  curatorRewards: BigInt!
  """Allocations that were closed during this epoch"""
  closedAllocations(skip: Int = 0, first: Int = 100, orderBy: ANALYTICS__Allocation_orderBy, orderDirection: ANALYTICS__OrderDirection, where: ANALYTICS__Allocation_filter): [ANALYTICS__Allocation!]!
}

input ANALYTICS__Pool_filter {
  id: ID
  id_not: ID
  id_gt: ID
  id_lt: ID
  id_gte: ID
  id_lte: ID
  id_in: [ID!]
  id_not_in: [ID!]
  allocation: BigInt
  allocation_not: BigInt
  allocation_gt: BigInt
  allocation_lt: BigInt
  allocation_gte: BigInt
  allocation_lte: BigInt
  allocation_in: [BigInt!]
  allocation_not_in: [BigInt!]
  totalQueryFees: BigInt
  totalQueryFees_not: BigInt
  totalQueryFees_gt: BigInt
  totalQueryFees_lt: BigInt
  totalQueryFees_gte: BigInt
  totalQueryFees_lte: BigInt
  totalQueryFees_in: [BigInt!]
  totalQueryFees_not_in: [BigInt!]
  claimedFees: BigInt
  claimedFees_not: BigInt
  claimedFees_gt: BigInt
  claimedFees_lt: BigInt
  claimedFees_gte: BigInt
  claimedFees_lte: BigInt
  claimedFees_in: [BigInt!]
  claimedFees_not_in: [BigInt!]
  curatorRewards: BigInt
  curatorRewards_not: BigInt
  curatorRewards_gt: BigInt
  curatorRewards_lt: BigInt
  curatorRewards_gte: BigInt
  curatorRewards_lte: BigInt
  curatorRewards_in: [BigInt!]
  curatorRewards_not_in: [BigInt!]
  closedAllocations_: ANALYTICS__Allocation_filter
  """Filter for the block changed event."""
  _change_block: ANALYTICS__BlockChangedFilter
}

enum ANALYTICS__Pool_orderBy {
  id
  allocation
  totalQueryFees
  claimedFees
  curatorRewards
  closedAllocations
}

type Query {
  ANALYTICS__graphNetwork(
    id: ID!
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ANALYTICS__Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ANALYTICS___SubgraphErrorPolicy_! = deny
  ): ANALYTICS__GraphNetwork
  ANALYTICS__graphNetworks(
    skip: Int = 0
    first: Int = 100
    orderBy: ANALYTICS__GraphNetwork_orderBy
    orderDirection: ANALYTICS__OrderDirection
    where: ANALYTICS__GraphNetwork_filter
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ANALYTICS__Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ANALYTICS___SubgraphErrorPolicy_! = deny
  ): [ANALYTICS__GraphNetwork!]!
  ANALYTICS__graphAccount(
    id: ID!
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ANALYTICS__Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ANALYTICS___SubgraphErrorPolicy_! = deny
  ): ANALYTICS__GraphAccount
  ANALYTICS__graphAccounts(
    skip: Int = 0
    first: Int = 100
    orderBy: ANALYTICS__GraphAccount_orderBy
    orderDirection: ANALYTICS__OrderDirection
    where: ANALYTICS__GraphAccount_filter
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ANALYTICS__Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ANALYTICS___SubgraphErrorPolicy_! = deny
  ): [ANALYTICS__GraphAccount!]!
  ANALYTICS__graphAccountName(
    id: ID!
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ANALYTICS__Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ANALYTICS___SubgraphErrorPolicy_! = deny
  ): ANALYTICS__GraphAccountName
  ANALYTICS__graphAccountNames(
    skip: Int = 0
    first: Int = 100
    orderBy: ANALYTICS__GraphAccountName_orderBy
    orderDirection: ANALYTICS__OrderDirection
    where: ANALYTICS__GraphAccountName_filter
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ANALYTICS__Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ANALYTICS___SubgraphErrorPolicy_! = deny
  ): [ANALYTICS__GraphAccountName!]!
  ANALYTICS__subgraph(
    id: ID!
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ANALYTICS__Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ANALYTICS___SubgraphErrorPolicy_! = deny
  ): ANALYTICS__Subgraph
  ANALYTICS__subgraphs(
    skip: Int = 0
    first: Int = 100
    orderBy: ANALYTICS__Subgraph_orderBy
    orderDirection: ANALYTICS__OrderDirection
    where: ANALYTICS__Subgraph_filter
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ANALYTICS__Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ANALYTICS___SubgraphErrorPolicy_! = deny
  ): [ANALYTICS__Subgraph!]!
  ANALYTICS__subgraphVersion(
    id: ID!
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ANALYTICS__Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ANALYTICS___SubgraphErrorPolicy_! = deny
  ): ANALYTICS__SubgraphVersion
  ANALYTICS__subgraphVersions(
    skip: Int = 0
    first: Int = 100
    orderBy: ANALYTICS__SubgraphVersion_orderBy
    orderDirection: ANALYTICS__OrderDirection
    where: ANALYTICS__SubgraphVersion_filter
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ANALYTICS__Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ANALYTICS___SubgraphErrorPolicy_! = deny
  ): [ANALYTICS__SubgraphVersion!]!
  ANALYTICS__subgraphDeployment(
    id: ID!
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ANALYTICS__Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ANALYTICS___SubgraphErrorPolicy_! = deny
  ): ANALYTICS__SubgraphDeployment
  ANALYTICS__subgraphDeployments(
    skip: Int = 0
    first: Int = 100
    orderBy: ANALYTICS__SubgraphDeployment_orderBy
    orderDirection: ANALYTICS__OrderDirection
    where: ANALYTICS__SubgraphDeployment_filter
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ANALYTICS__Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ANALYTICS___SubgraphErrorPolicy_! = deny
  ): [ANALYTICS__SubgraphDeployment!]!
  ANALYTICS__indexer(
    id: ID!
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ANALYTICS__Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ANALYTICS___SubgraphErrorPolicy_! = deny
  ): ANALYTICS__Indexer
  ANALYTICS__indexers(
    skip: Int = 0
    first: Int = 100
    orderBy: ANALYTICS__Indexer_orderBy
    orderDirection: ANALYTICS__OrderDirection
    where: ANALYTICS__Indexer_filter
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ANALYTICS__Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ANALYTICS___SubgraphErrorPolicy_! = deny
  ): [ANALYTICS__Indexer!]!
  ANALYTICS__allocation(
    id: ID!
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ANALYTICS__Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ANALYTICS___SubgraphErrorPolicy_! = deny
  ): ANALYTICS__Allocation
  ANALYTICS__allocations(
    skip: Int = 0
    first: Int = 100
    orderBy: ANALYTICS__Allocation_orderBy
    orderDirection: ANALYTICS__OrderDirection
    where: ANALYTICS__Allocation_filter
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ANALYTICS__Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ANALYTICS___SubgraphErrorPolicy_! = deny
  ): [ANALYTICS__Allocation!]!
  ANALYTICS__pool(
    id: ID!
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ANALYTICS__Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ANALYTICS___SubgraphErrorPolicy_! = deny
  ): ANALYTICS__Pool
  ANALYTICS__pools(
    skip: Int = 0
    first: Int = 100
    orderBy: ANALYTICS__Pool_orderBy
    orderDirection: ANALYTICS__OrderDirection
    where: ANALYTICS__Pool_filter
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ANALYTICS__Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ANALYTICS___SubgraphErrorPolicy_! = deny
  ): [ANALYTICS__Pool!]!
  ANALYTICS__delegator(
    id: ID!
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ANALYTICS__Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ANALYTICS___SubgraphErrorPolicy_! = deny
  ): ANALYTICS__Delegator
  ANALYTICS__delegators(
    skip: Int = 0
    first: Int = 100
    orderBy: ANALYTICS__Delegator_orderBy
    orderDirection: ANALYTICS__OrderDirection
    where: ANALYTICS__Delegator_filter
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ANALYTICS__Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ANALYTICS___SubgraphErrorPolicy_! = deny
  ): [ANALYTICS__Delegator!]!
  ANALYTICS__delegatedStake(
    id: ID!
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ANALYTICS__Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ANALYTICS___SubgraphErrorPolicy_! = deny
  ): ANALYTICS__DelegatedStake
  ANALYTICS__delegatedStakes(
    skip: Int = 0
    first: Int = 100
    orderBy: ANALYTICS__DelegatedStake_orderBy
    orderDirection: ANALYTICS__OrderDirection
    where: ANALYTICS__DelegatedStake_filter
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ANALYTICS__Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ANALYTICS___SubgraphErrorPolicy_! = deny
  ): [ANALYTICS__DelegatedStake!]!
  ANALYTICS__curator(
    id: ID!
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ANALYTICS__Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ANALYTICS___SubgraphErrorPolicy_! = deny
  ): ANALYTICS__Curator
  ANALYTICS__curators(
    skip: Int = 0
    first: Int = 100
    orderBy: ANALYTICS__Curator_orderBy
    orderDirection: ANALYTICS__OrderDirection
    where: ANALYTICS__Curator_filter
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ANALYTICS__Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ANALYTICS___SubgraphErrorPolicy_! = deny
  ): [ANALYTICS__Curator!]!
  ANALYTICS__signal(
    id: ID!
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ANALYTICS__Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ANALYTICS___SubgraphErrorPolicy_! = deny
  ): ANALYTICS__Signal
  ANALYTICS__signals(
    skip: Int = 0
    first: Int = 100
    orderBy: ANALYTICS__Signal_orderBy
    orderDirection: ANALYTICS__OrderDirection
    where: ANALYTICS__Signal_filter
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ANALYTICS__Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ANALYTICS___SubgraphErrorPolicy_! = deny
  ): [ANALYTICS__Signal!]!
  ANALYTICS__nameSignal(
    id: ID!
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ANALYTICS__Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ANALYTICS___SubgraphErrorPolicy_! = deny
  ): ANALYTICS__NameSignal
  ANALYTICS__nameSignals(
    skip: Int = 0
    first: Int = 100
    orderBy: ANALYTICS__NameSignal_orderBy
    orderDirection: ANALYTICS__OrderDirection
    where: ANALYTICS__NameSignal_filter
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ANALYTICS__Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ANALYTICS___SubgraphErrorPolicy_! = deny
  ): [ANALYTICS__NameSignal!]!
  ANALYTICS__nameSignalTransaction(
    id: ID!
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ANALYTICS__Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ANALYTICS___SubgraphErrorPolicy_! = deny
  ): ANALYTICS__NameSignalTransaction
  ANALYTICS__nameSignalTransactions(
    skip: Int = 0
    first: Int = 100
    orderBy: ANALYTICS__NameSignalTransaction_orderBy
    orderDirection: ANALYTICS__OrderDirection
    where: ANALYTICS__NameSignalTransaction_filter
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ANALYTICS__Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ANALYTICS___SubgraphErrorPolicy_! = deny
  ): [ANALYTICS__NameSignalTransaction!]!
  ANALYTICS__signalTransaction(
    id: ID!
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ANALYTICS__Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ANALYTICS___SubgraphErrorPolicy_! = deny
  ): ANALYTICS__SignalTransaction
  ANALYTICS__signalTransactions(
    skip: Int = 0
    first: Int = 100
    orderBy: ANALYTICS__SignalTransaction_orderBy
    orderDirection: ANALYTICS__OrderDirection
    where: ANALYTICS__SignalTransaction_filter
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ANALYTICS__Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ANALYTICS___SubgraphErrorPolicy_! = deny
  ): [ANALYTICS__SignalTransaction!]!
  ANALYTICS__indexerDelegatedStakeRelation(
    id: ID!
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ANALYTICS__Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ANALYTICS___SubgraphErrorPolicy_! = deny
  ): ANALYTICS__IndexerDelegatedStakeRelation
  ANALYTICS__indexerDelegatedStakeRelations(
    skip: Int = 0
    first: Int = 100
    orderBy: ANALYTICS__IndexerDelegatedStakeRelation_orderBy
    orderDirection: ANALYTICS__OrderDirection
    where: ANALYTICS__IndexerDelegatedStakeRelation_filter
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ANALYTICS__Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ANALYTICS___SubgraphErrorPolicy_! = deny
  ): [ANALYTICS__IndexerDelegatedStakeRelation!]!
  ANALYTICS__indexerDailyData(
    id: ID!
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ANALYTICS__Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ANALYTICS___SubgraphErrorPolicy_! = deny
  ): ANALYTICS__IndexerDailyData
  ANALYTICS__indexerDailyDatas(
    skip: Int = 0
    first: Int = 100
    orderBy: ANALYTICS__IndexerDailyData_orderBy
    orderDirection: ANALYTICS__OrderDirection
    where: ANALYTICS__IndexerDailyData_filter
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ANALYTICS__Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ANALYTICS___SubgraphErrorPolicy_! = deny
  ): [ANALYTICS__IndexerDailyData!]!
  ANALYTICS__delegatorDailyData(
    id: ID!
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ANALYTICS__Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ANALYTICS___SubgraphErrorPolicy_! = deny
  ): ANALYTICS__DelegatorDailyData
  ANALYTICS__delegatorDailyDatas(
    skip: Int = 0
    first: Int = 100
    orderBy: ANALYTICS__DelegatorDailyData_orderBy
    orderDirection: ANALYTICS__OrderDirection
    where: ANALYTICS__DelegatorDailyData_filter
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ANALYTICS__Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ANALYTICS___SubgraphErrorPolicy_! = deny
  ): [ANALYTICS__DelegatorDailyData!]!
  ANALYTICS__delegatedStakeDailyData(
    id: ID!
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ANALYTICS__Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ANALYTICS___SubgraphErrorPolicy_! = deny
  ): ANALYTICS__DelegatedStakeDailyData
  ANALYTICS__delegatedStakeDailyDatas(
    skip: Int = 0
    first: Int = 100
    orderBy: ANALYTICS__DelegatedStakeDailyData_orderBy
    orderDirection: ANALYTICS__OrderDirection
    where: ANALYTICS__DelegatedStakeDailyData_filter
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ANALYTICS__Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ANALYTICS___SubgraphErrorPolicy_! = deny
  ): [ANALYTICS__DelegatedStakeDailyData!]!
  ANALYTICS__delegatorDelegatedStakeDailyRelation(
    id: ID!
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ANALYTICS__Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ANALYTICS___SubgraphErrorPolicy_! = deny
  ): ANALYTICS__DelegatorDelegatedStakeDailyRelation
  ANALYTICS__delegatorDelegatedStakeDailyRelations(
    skip: Int = 0
    first: Int = 100
    orderBy: ANALYTICS__DelegatorDelegatedStakeDailyRelation_orderBy
    orderDirection: ANALYTICS__OrderDirection
    where: ANALYTICS__DelegatorDelegatedStakeDailyRelation_filter
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ANALYTICS__Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ANALYTICS___SubgraphErrorPolicy_! = deny
  ): [ANALYTICS__DelegatorDelegatedStakeDailyRelation!]!
  ANALYTICS__subgraphDeploymentDailyData(
    id: ID!
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ANALYTICS__Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ANALYTICS___SubgraphErrorPolicy_! = deny
  ): ANALYTICS__SubgraphDeploymentDailyData
  ANALYTICS__subgraphDeploymentDailyDatas(
    skip: Int = 0
    first: Int = 100
    orderBy: ANALYTICS__SubgraphDeploymentDailyData_orderBy
    orderDirection: ANALYTICS__OrderDirection
    where: ANALYTICS__SubgraphDeploymentDailyData_filter
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ANALYTICS__Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ANALYTICS___SubgraphErrorPolicy_! = deny
  ): [ANALYTICS__SubgraphDeploymentDailyData!]!
  ANALYTICS__graphNetworkDailyData(
    id: ID!
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ANALYTICS__Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ANALYTICS___SubgraphErrorPolicy_! = deny
  ): ANALYTICS__GraphNetworkDailyData
  ANALYTICS__graphNetworkDailyDatas(
    skip: Int = 0
    first: Int = 100
    orderBy: ANALYTICS__GraphNetworkDailyData_orderBy
    orderDirection: ANALYTICS__OrderDirection
    where: ANALYTICS__GraphNetworkDailyData_filter
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ANALYTICS__Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ANALYTICS___SubgraphErrorPolicy_! = deny
  ): [ANALYTICS__GraphNetworkDailyData!]!
  ANALYTICS__transaction(
    id: ID!
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ANALYTICS__Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ANALYTICS___SubgraphErrorPolicy_! = deny
  ): ANALYTICS__Transaction
  ANALYTICS__transactions(
    skip: Int = 0
    first: Int = 100
    orderBy: ANALYTICS__Transaction_orderBy
    orderDirection: ANALYTICS__OrderDirection
    where: ANALYTICS__Transaction_filter
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ANALYTICS__Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ANALYTICS___SubgraphErrorPolicy_! = deny
  ): [ANALYTICS__Transaction!]!
  ANALYTICS__delegatorSearch(
    text: String!
    first: Int = 100
    skip: Int = 0
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ANALYTICS__Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ANALYTICS___SubgraphErrorPolicy_! = deny
  ): [ANALYTICS__Delegator!]!
  """Access to subgraph metadata"""
  ANALYTICS___meta(block: ANALYTICS__Block_height): ANALYTICS___Meta_
}

"""
Curator Signal for a single SubgraphDeployment

"""
type ANALYTICS__Signal {
  """Eth address + subgraph deployment ID"""
  id: ID!
  """Eth address of the curator"""
  curator: ANALYTICS__Curator!
  """Subgraph being signalled"""
  subgraphDeployment: ANALYTICS__SubgraphDeployment!
  """CUMULATIVE number of tokens the curator has signalled"""
  signalledTokens: BigInt!
  """CUMULATIVE number of tokens the curator has unsignalled"""
  unsignalledTokens: BigInt!
  """Signal that the curator has from signaling their GRT"""
  signal: BigInt!
  """Block for which the curator last entered or exited the curve"""
  lastSignalChange: Int!
  """
  Summation of realized rewards from before the last time the curator entered the curation curve
  """
  realizedRewards: BigInt!
}

"""
All relevant data for a Signal Transaction in The Graph Network

"""
type ANALYTICS__SignalTransaction implements ANALYTICS__Transaction {
  id: ID!
  blockNumber: Int!
  timestamp: Int!
  signer: ANALYTICS__GraphAccount!
  type: ANALYTICS__TransactionType!
  """Amount of signal updated"""
  signal: BigInt!
  """Tokens used"""
  tokens: BigInt!
  """Subgraph where signal was updated"""
  subgraphDeployment: ANALYTICS__SubgraphDeployment!
  """Withdrawal fees. On minting only"""
  withdrawalFees: BigInt!
}

input ANALYTICS__SignalTransaction_filter {
  id: ID
  id_not: ID
  id_gt: ID
  id_lt: ID
  id_gte: ID
  id_lte: ID
  id_in: [ID!]
  id_not_in: [ID!]
  blockNumber: Int
  blockNumber_not: Int
  blockNumber_gt: Int
  blockNumber_lt: Int
  blockNumber_gte: Int
  blockNumber_lte: Int
  blockNumber_in: [Int!]
  blockNumber_not_in: [Int!]
  timestamp: Int
  timestamp_not: Int
  timestamp_gt: Int
  timestamp_lt: Int
  timestamp_gte: Int
  timestamp_lte: Int
  timestamp_in: [Int!]
  timestamp_not_in: [Int!]
  signer: String
  signer_not: String
  signer_gt: String
  signer_lt: String
  signer_gte: String
  signer_lte: String
  signer_in: [String!]
  signer_not_in: [String!]
  signer_contains: String
  signer_contains_nocase: String
  signer_not_contains: String
  signer_not_contains_nocase: String
  signer_starts_with: String
  signer_starts_with_nocase: String
  signer_not_starts_with: String
  signer_not_starts_with_nocase: String
  signer_ends_with: String
  signer_ends_with_nocase: String
  signer_not_ends_with: String
  signer_not_ends_with_nocase: String
  signer_: ANALYTICS__GraphAccount_filter
  type: ANALYTICS__TransactionType
  type_not: ANALYTICS__TransactionType
  type_in: [ANALYTICS__TransactionType!]
  type_not_in: [ANALYTICS__TransactionType!]
  signal: BigInt
  signal_not: BigInt
  signal_gt: BigInt
  signal_lt: BigInt
  signal_gte: BigInt
  signal_lte: BigInt
  signal_in: [BigInt!]
  signal_not_in: [BigInt!]
  tokens: BigInt
  tokens_not: BigInt
  tokens_gt: BigInt
  tokens_lt: BigInt
  tokens_gte: BigInt
  tokens_lte: BigInt
  tokens_in: [BigInt!]
  tokens_not_in: [BigInt!]
  subgraphDeployment: String
  subgraphDeployment_not: String
  subgraphDeployment_gt: String
  subgraphDeployment_lt: String
  subgraphDeployment_gte: String
  subgraphDeployment_lte: String
  subgraphDeployment_in: [String!]
  subgraphDeployment_not_in: [String!]
  subgraphDeployment_contains: String
  subgraphDeployment_contains_nocase: String
  subgraphDeployment_not_contains: String
  subgraphDeployment_not_contains_nocase: String
  subgraphDeployment_starts_with: String
  subgraphDeployment_starts_with_nocase: String
  subgraphDeployment_not_starts_with: String
  subgraphDeployment_not_starts_with_nocase: String
  subgraphDeployment_ends_with: String
  subgraphDeployment_ends_with_nocase: String
  subgraphDeployment_not_ends_with: String
  subgraphDeployment_not_ends_with_nocase: String
  subgraphDeployment_: ANALYTICS__SubgraphDeployment_filter
  withdrawalFees: BigInt
  withdrawalFees_not: BigInt
  withdrawalFees_gt: BigInt
  withdrawalFees_lt: BigInt
  withdrawalFees_gte: BigInt
  withdrawalFees_lte: BigInt
  withdrawalFees_in: [BigInt!]
  withdrawalFees_not_in: [BigInt!]
  """Filter for the block changed event."""
  _change_block: ANALYTICS__BlockChangedFilter
}

enum ANALYTICS__SignalTransaction_orderBy {
  id
  blockNumber
  timestamp
  signer
  type
  signal
  tokens
  subgraphDeployment
  withdrawalFees
}

input ANALYTICS__Signal_filter {
  id: ID
  id_not: ID
  id_gt: ID
  id_lt: ID
  id_gte: ID
  id_lte: ID
  id_in: [ID!]
  id_not_in: [ID!]
  curator: String
  curator_not: String
  curator_gt: String
  curator_lt: String
  curator_gte: String
  curator_lte: String
  curator_in: [String!]
  curator_not_in: [String!]
  curator_contains: String
  curator_contains_nocase: String
  curator_not_contains: String
  curator_not_contains_nocase: String
  curator_starts_with: String
  curator_starts_with_nocase: String
  curator_not_starts_with: String
  curator_not_starts_with_nocase: String
  curator_ends_with: String
  curator_ends_with_nocase: String
  curator_not_ends_with: String
  curator_not_ends_with_nocase: String
  curator_: ANALYTICS__Curator_filter
  subgraphDeployment: String
  subgraphDeployment_not: String
  subgraphDeployment_gt: String
  subgraphDeployment_lt: String
  subgraphDeployment_gte: String
  subgraphDeployment_lte: String
  subgraphDeployment_in: [String!]
  subgraphDeployment_not_in: [String!]
  subgraphDeployment_contains: String
  subgraphDeployment_contains_nocase: String
  subgraphDeployment_not_contains: String
  subgraphDeployment_not_contains_nocase: String
  subgraphDeployment_starts_with: String
  subgraphDeployment_starts_with_nocase: String
  subgraphDeployment_not_starts_with: String
  subgraphDeployment_not_starts_with_nocase: String
  subgraphDeployment_ends_with: String
  subgraphDeployment_ends_with_nocase: String
  subgraphDeployment_not_ends_with: String
  subgraphDeployment_not_ends_with_nocase: String
  subgraphDeployment_: ANALYTICS__SubgraphDeployment_filter
  signalledTokens: BigInt
  signalledTokens_not: BigInt
  signalledTokens_gt: BigInt
  signalledTokens_lt: BigInt
  signalledTokens_gte: BigInt
  signalledTokens_lte: BigInt
  signalledTokens_in: [BigInt!]
  signalledTokens_not_in: [BigInt!]
  unsignalledTokens: BigInt
  unsignalledTokens_not: BigInt
  unsignalledTokens_gt: BigInt
  unsignalledTokens_lt: BigInt
  unsignalledTokens_gte: BigInt
  unsignalledTokens_lte: BigInt
  unsignalledTokens_in: [BigInt!]
  unsignalledTokens_not_in: [BigInt!]
  signal: BigInt
  signal_not: BigInt
  signal_gt: BigInt
  signal_lt: BigInt
  signal_gte: BigInt
  signal_lte: BigInt
  signal_in: [BigInt!]
  signal_not_in: [BigInt!]
  lastSignalChange: Int
  lastSignalChange_not: Int
  lastSignalChange_gt: Int
  lastSignalChange_lt: Int
  lastSignalChange_gte: Int
  lastSignalChange_lte: Int
  lastSignalChange_in: [Int!]
  lastSignalChange_not_in: [Int!]
  realizedRewards: BigInt
  realizedRewards_not: BigInt
  realizedRewards_gt: BigInt
  realizedRewards_lt: BigInt
  realizedRewards_gte: BigInt
  realizedRewards_lte: BigInt
  realizedRewards_in: [BigInt!]
  realizedRewards_not_in: [BigInt!]
  """Filter for the block changed event."""
  _change_block: ANALYTICS__BlockChangedFilter
}

enum ANALYTICS__Signal_orderBy {
  id
  curator
  subgraphDeployment
  signalledTokens
  unsignalledTokens
  signal
  lastSignalChange
  realizedRewards
}

"""
The Subgraph entity represents a permanent, unique endpoint. This unique endpoint can resolve to
many different SubgraphVersions over it's lifetime. The Subgraph can also have a name attributed
to it. The owner of the Subgraph can only use a name once, thus making the owner account and the
name chosen a unique combination. When a Curator singals on a Subgraph, they receive "Name Signal".
"Name Signal" resolves into the underlying "Signal" of the SubgraphDeployment. The metadata of the
subgraph is stored on IPFS.

"""
type ANALYTICS__Subgraph {
  """
  Subgraph ID - which is derived from the Organization/Individual graph accountID
  """
  id: ID!
  """Graph account that owns this subgraph"""
  owner: ANALYTICS__GraphAccount!
  """Current version"""
  currentVersion: ANALYTICS__SubgraphVersion
  """
  [DEPRECATED] Past versions. Has the same data as 'versions' but keeps the old naming for backwards compatibility
  """
  pastVersions(skip: Int = 0, first: Int = 100, orderBy: ANALYTICS__SubgraphVersion_orderBy, orderDirection: ANALYTICS__OrderDirection, where: ANALYTICS__SubgraphVersion_filter): [ANALYTICS__SubgraphVersion!]!
  """List of all the subgraph versions included the current one"""
  versions(skip: Int = 0, first: Int = 100, orderBy: ANALYTICS__SubgraphVersion_orderBy, orderDirection: ANALYTICS__OrderDirection, where: ANALYTICS__SubgraphVersion_filter): [ANALYTICS__SubgraphVersion!]!
  """Version counter"""
  versionCount: BigInt!
  """Creation timestamp"""
  createdAt: Int!
  """Updated timestamp"""
  updatedAt: Int!
  """Whether the subgraph is active or deprecated"""
  active: Boolean!
  """Whether the subgraph has been migrated to the NFT implementation"""
  migrated: Boolean!
  """
  Auxiliary field to denote whether the subgraph is handling the initialization order on V2 events. Doesn't matter for V1 events.
  """
  initializing: Boolean!
  """
  The actual ID of the subgraph on the contracts subgraph NFT implementation. BigInt represented as a String. It's only actually valid once the subgraph is migrated (migrated == true)
  """
  nftID: String!
  """
  ID of the subgraph that was used on the old version of this The Graph Network Subgraph. Null for Subgraphs created with the new GNS implementation
  """
  oldID: String
  """
  Address used to create the ID. Only available for Subgraphs created pre-migration
  """
  creatorAddress: ANALYTICS__Bytes
  """
  Subgraph number used to create the ID. Only available for Subgraphs created pre-migration
  """
  subgraphNumber: BigInt
  """
  Version of the entity. Subgraph entities are changing the way their ID is generated when the new GNS v2 rolls out so we need to differnetiate them
  """
  entityVersion: Int!
  """
  Subgraph entities might have 'duplicate' entities so that old IDs can be persisted and still queried properly. If that happens we have to link both duplicate entities to be able to update them properly.
  """
  linkedEntity: ANALYTICS__Subgraph
  """CUMULATIVE signaled tokens on this subgraph all time"""
  signalledTokens: BigInt!
  """CUMULATIVE unsignalled tokens on this subgraph all time"""
  unsignalledTokens: BigInt!
  """The CURRENT name signal amount for this subgraph"""
  nameSignalAmount: BigInt!
  """Reserve ratio of the name curation curve. In parts per million"""
  reserveRatio: Int!
  """Tokens that can be withdrawn once the Subgraph is deprecated"""
  withdrawableTokens: BigInt!
  """Tokens the curators have withdrawn from the deprecated Subgraph"""
  withdrawnTokens: BigInt!
  """Curators of this subgraph deployment"""
  nameSignals(skip: Int = 0, first: Int = 100, orderBy: ANALYTICS__NameSignal_orderBy, orderDirection: ANALYTICS__OrderDirection, where: ANALYTICS__NameSignal_filter): [ANALYTICS__NameSignal!]!
  """Subgraph metadata"""
  metadataHash: ANALYTICS__Bytes
}

"""
The SubgraphDeployment is represented by the immutable subgraph code that is uploaded, and posted
to IPFS. A SubgraphDeployment has a manifest which gives the instructions to the Graph Network on
what to index. The entity stores relevant data for the SubgraphDeployment on how much it is being
staked on and signaled on in the contracts, as well as how it is performing in query fees. It is
related to a SubgraphVersion.

"""
type ANALYTICS__SubgraphDeployment {
  """
  Subgraph Deployment ID. The IPFS hash with Qm removed to fit into 32 bytes
  """
  id: ID!
  """The versions this subgraph deployment relates to"""
  versions(skip: Int = 0, first: Int = 100, orderBy: ANALYTICS__SubgraphVersion_orderBy, orderDirection: ANALYTICS__OrderDirection, where: ANALYTICS__SubgraphVersion_filter): [ANALYTICS__SubgraphVersion!]!
  """Creation timestamp"""
  createdAt: Int!
  """
  The block at which this deployment was denied for rewards. Null if not denied
  """
  deniedAt: Int!
  """CURRENT total stake of all indexers on this Subgraph Deployment"""
  stakedTokens: BigInt!
  """Allocations created by indexers for this Subgraph"""
  indexerAllocations(skip: Int = 0, first: Int = 100, orderBy: ANALYTICS__Allocation_orderBy, orderDirection: ANALYTICS__OrderDirection, where: ANALYTICS__Allocation_filter): [ANALYTICS__Allocation!]!
  """
  Total rewards accrued all time by this Subgraph Deployment. Includes delegator and indexer rewards
  """
  indexingRewardAmount: BigInt!
  """Total rewards accrued all time by indexers"""
  indexingIndexerRewardAmount: BigInt!
  """Total rewards accrued all time by delegators"""
  indexingDelegatorRewardAmount: BigInt!
  """
  Total query fees earned by this Subgraph Deployment, without curator query fees
  """
  queryFeesAmount: BigInt!
  """
  Total query fee rebates for indexers earned from the protocol, through the cobbs douglas formula.
  """
  queryFeeRebates: BigInt!
  """
  Total query fee rebates for delegators earned from the protocol, through the cobbs douglas formula.
  """
  delegatorQueryFees: BigInt!
  """Total curator rewards from fees"""
  curatorFeeRewards: BigInt!
  """CURRENT signalled tokens in the bonding curve"""
  signalledTokens: BigInt!
  """NOT IMPLEMENTED - CURRENT signalled tokens in the bonding curve"""
  unsignalledTokens: BigInt!
  """CURRENT curation signal for this subgraph deployment"""
  signalAmount: BigInt!
  """signalledTokens / signalAmount"""
  pricePerShare: ANALYTICS__BigDecimal!
  """Curators of this subgraph deployment"""
  curatorSignals(skip: Int = 0, first: Int = 100, orderBy: ANALYTICS__Signal_orderBy, orderDirection: ANALYTICS__OrderDirection, where: ANALYTICS__Signal_filter): [ANALYTICS__Signal!]!
  """Bonding curve reserve ratio. In parts per million"""
  reserveRatio: Int!
  dailyData(skip: Int = 0, first: Int = 100, orderBy: ANALYTICS__SubgraphDeploymentDailyData_orderBy, orderDirection: ANALYTICS__OrderDirection, where: ANALYTICS__SubgraphDeploymentDailyData_filter): [ANALYTICS__SubgraphDeploymentDailyData!]!
}

type ANALYTICS__SubgraphDeploymentDailyData {
  """<SUBGRAPH ID>-<DAY NUMBER>"""
  id: ID!
  """Timestamp for the start of the day that this entity represents. UTC+0"""
  dayStart: BigInt!
  """Timestamp for the end of the day that this entity represents. UTC+0"""
  dayEnd: BigInt!
  """
  Number of the day this entity represents. Day 0 is the network launch day.
  """
  dayNumber: Int!
  """Original entity that the daily data entity tracks"""
  subgraphDeployment: ANALYTICS__SubgraphDeployment!
  """
  [CURRENT] Amount of allocated/staked tokens on this deployment at this specific day
  """
  stakedTokens: BigInt!
  """
  [CURRENT] Amount of signalled tokens on this deployment at this specific day
  """
  signalledTokens: BigInt!
  """[CURRENT] Amount of signal on this deployment at this specific day"""
  signalAmount: BigInt!
  """
  [CURRENT] Value of pricePerShare for the original entity at this specific day
  """
  pricePerShare: ANALYTICS__BigDecimal!
  """
  [CUMULATIVE] Total rewards accrued all time by this Subgraph Deployment. Includes delegator and indexer rewards
  """
  indexingRewardAmount: BigInt!
  """[CUMULATIVE] Total rewards accrued all time by indexers"""
  indexingIndexerRewardAmount: BigInt!
  """[CUMULATIVE] Total rewards accrued all time by delegators"""
  indexingDelegatorRewardAmount: BigInt!
  """
  [CUMULATIVE] Total query fees earned by this Subgraph Deployment, without curator query fees
  """
  queryFeesAmount: BigInt!
  """
  [CUMULATIVE] Total query fee rebates for indexers earned from the protocol, through the cobbs douglas formula.
  """
  queryFeeRebates: BigInt!
  """
  [CUMULATIVE] Total query fee rebates for delegators earned from the protocol, through the cobbs douglas formula.
  """
  delegatorQueryFees: BigInt!
  """[CUMULATIVE] Total curator rewards from fees"""
  curatorFeeRewards: BigInt!
}

input ANALYTICS__SubgraphDeploymentDailyData_filter {
  id: ID
  id_not: ID
  id_gt: ID
  id_lt: ID
  id_gte: ID
  id_lte: ID
  id_in: [ID!]
  id_not_in: [ID!]
  dayStart: BigInt
  dayStart_not: BigInt
  dayStart_gt: BigInt
  dayStart_lt: BigInt
  dayStart_gte: BigInt
  dayStart_lte: BigInt
  dayStart_in: [BigInt!]
  dayStart_not_in: [BigInt!]
  dayEnd: BigInt
  dayEnd_not: BigInt
  dayEnd_gt: BigInt
  dayEnd_lt: BigInt
  dayEnd_gte: BigInt
  dayEnd_lte: BigInt
  dayEnd_in: [BigInt!]
  dayEnd_not_in: [BigInt!]
  dayNumber: Int
  dayNumber_not: Int
  dayNumber_gt: Int
  dayNumber_lt: Int
  dayNumber_gte: Int
  dayNumber_lte: Int
  dayNumber_in: [Int!]
  dayNumber_not_in: [Int!]
  subgraphDeployment: String
  subgraphDeployment_not: String
  subgraphDeployment_gt: String
  subgraphDeployment_lt: String
  subgraphDeployment_gte: String
  subgraphDeployment_lte: String
  subgraphDeployment_in: [String!]
  subgraphDeployment_not_in: [String!]
  subgraphDeployment_contains: String
  subgraphDeployment_contains_nocase: String
  subgraphDeployment_not_contains: String
  subgraphDeployment_not_contains_nocase: String
  subgraphDeployment_starts_with: String
  subgraphDeployment_starts_with_nocase: String
  subgraphDeployment_not_starts_with: String
  subgraphDeployment_not_starts_with_nocase: String
  subgraphDeployment_ends_with: String
  subgraphDeployment_ends_with_nocase: String
  subgraphDeployment_not_ends_with: String
  subgraphDeployment_not_ends_with_nocase: String
  subgraphDeployment_: ANALYTICS__SubgraphDeployment_filter
  stakedTokens: BigInt
  stakedTokens_not: BigInt
  stakedTokens_gt: BigInt
  stakedTokens_lt: BigInt
  stakedTokens_gte: BigInt
  stakedTokens_lte: BigInt
  stakedTokens_in: [BigInt!]
  stakedTokens_not_in: [BigInt!]
  signalledTokens: BigInt
  signalledTokens_not: BigInt
  signalledTokens_gt: BigInt
  signalledTokens_lt: BigInt
  signalledTokens_gte: BigInt
  signalledTokens_lte: BigInt
  signalledTokens_in: [BigInt!]
  signalledTokens_not_in: [BigInt!]
  signalAmount: BigInt
  signalAmount_not: BigInt
  signalAmount_gt: BigInt
  signalAmount_lt: BigInt
  signalAmount_gte: BigInt
  signalAmount_lte: BigInt
  signalAmount_in: [BigInt!]
  signalAmount_not_in: [BigInt!]
  pricePerShare: ANALYTICS__BigDecimal
  pricePerShare_not: ANALYTICS__BigDecimal
  pricePerShare_gt: ANALYTICS__BigDecimal
  pricePerShare_lt: ANALYTICS__BigDecimal
  pricePerShare_gte: ANALYTICS__BigDecimal
  pricePerShare_lte: ANALYTICS__BigDecimal
  pricePerShare_in: [ANALYTICS__BigDecimal!]
  pricePerShare_not_in: [ANALYTICS__BigDecimal!]
  indexingRewardAmount: BigInt
  indexingRewardAmount_not: BigInt
  indexingRewardAmount_gt: BigInt
  indexingRewardAmount_lt: BigInt
  indexingRewardAmount_gte: BigInt
  indexingRewardAmount_lte: BigInt
  indexingRewardAmount_in: [BigInt!]
  indexingRewardAmount_not_in: [BigInt!]
  indexingIndexerRewardAmount: BigInt
  indexingIndexerRewardAmount_not: BigInt
  indexingIndexerRewardAmount_gt: BigInt
  indexingIndexerRewardAmount_lt: BigInt
  indexingIndexerRewardAmount_gte: BigInt
  indexingIndexerRewardAmount_lte: BigInt
  indexingIndexerRewardAmount_in: [BigInt!]
  indexingIndexerRewardAmount_not_in: [BigInt!]
  indexingDelegatorRewardAmount: BigInt
  indexingDelegatorRewardAmount_not: BigInt
  indexingDelegatorRewardAmount_gt: BigInt
  indexingDelegatorRewardAmount_lt: BigInt
  indexingDelegatorRewardAmount_gte: BigInt
  indexingDelegatorRewardAmount_lte: BigInt
  indexingDelegatorRewardAmount_in: [BigInt!]
  indexingDelegatorRewardAmount_not_in: [BigInt!]
  queryFeesAmount: BigInt
  queryFeesAmount_not: BigInt
  queryFeesAmount_gt: BigInt
  queryFeesAmount_lt: BigInt
  queryFeesAmount_gte: BigInt
  queryFeesAmount_lte: BigInt
  queryFeesAmount_in: [BigInt!]
  queryFeesAmount_not_in: [BigInt!]
  queryFeeRebates: BigInt
  queryFeeRebates_not: BigInt
  queryFeeRebates_gt: BigInt
  queryFeeRebates_lt: BigInt
  queryFeeRebates_gte: BigInt
  queryFeeRebates_lte: BigInt
  queryFeeRebates_in: [BigInt!]
  queryFeeRebates_not_in: [BigInt!]
  delegatorQueryFees: BigInt
  delegatorQueryFees_not: BigInt
  delegatorQueryFees_gt: BigInt
  delegatorQueryFees_lt: BigInt
  delegatorQueryFees_gte: BigInt
  delegatorQueryFees_lte: BigInt
  delegatorQueryFees_in: [BigInt!]
  delegatorQueryFees_not_in: [BigInt!]
  curatorFeeRewards: BigInt
  curatorFeeRewards_not: BigInt
  curatorFeeRewards_gt: BigInt
  curatorFeeRewards_lt: BigInt
  curatorFeeRewards_gte: BigInt
  curatorFeeRewards_lte: BigInt
  curatorFeeRewards_in: [BigInt!]
  curatorFeeRewards_not_in: [BigInt!]
  """Filter for the block changed event."""
  _change_block: ANALYTICS__BlockChangedFilter
}

enum ANALYTICS__SubgraphDeploymentDailyData_orderBy {
  id
  dayStart
  dayEnd
  dayNumber
  subgraphDeployment
  stakedTokens
  signalledTokens
  signalAmount
  pricePerShare
  indexingRewardAmount
  indexingIndexerRewardAmount
  indexingDelegatorRewardAmount
  queryFeesAmount
  queryFeeRebates
  delegatorQueryFees
  curatorFeeRewards
}

input ANALYTICS__SubgraphDeployment_filter {
  id: ID
  id_not: ID
  id_gt: ID
  id_lt: ID
  id_gte: ID
  id_lte: ID
  id_in: [ID!]
  id_not_in: [ID!]
  versions_: ANALYTICS__SubgraphVersion_filter
  createdAt: Int
  createdAt_not: Int
  createdAt_gt: Int
  createdAt_lt: Int
  createdAt_gte: Int
  createdAt_lte: Int
  createdAt_in: [Int!]
  createdAt_not_in: [Int!]
  deniedAt: Int
  deniedAt_not: Int
  deniedAt_gt: Int
  deniedAt_lt: Int
  deniedAt_gte: Int
  deniedAt_lte: Int
  deniedAt_in: [Int!]
  deniedAt_not_in: [Int!]
  stakedTokens: BigInt
  stakedTokens_not: BigInt
  stakedTokens_gt: BigInt
  stakedTokens_lt: BigInt
  stakedTokens_gte: BigInt
  stakedTokens_lte: BigInt
  stakedTokens_in: [BigInt!]
  stakedTokens_not_in: [BigInt!]
  indexerAllocations_: ANALYTICS__Allocation_filter
  indexingRewardAmount: BigInt
  indexingRewardAmount_not: BigInt
  indexingRewardAmount_gt: BigInt
  indexingRewardAmount_lt: BigInt
  indexingRewardAmount_gte: BigInt
  indexingRewardAmount_lte: BigInt
  indexingRewardAmount_in: [BigInt!]
  indexingRewardAmount_not_in: [BigInt!]
  indexingIndexerRewardAmount: BigInt
  indexingIndexerRewardAmount_not: BigInt
  indexingIndexerRewardAmount_gt: BigInt
  indexingIndexerRewardAmount_lt: BigInt
  indexingIndexerRewardAmount_gte: BigInt
  indexingIndexerRewardAmount_lte: BigInt
  indexingIndexerRewardAmount_in: [BigInt!]
  indexingIndexerRewardAmount_not_in: [BigInt!]
  indexingDelegatorRewardAmount: BigInt
  indexingDelegatorRewardAmount_not: BigInt
  indexingDelegatorRewardAmount_gt: BigInt
  indexingDelegatorRewardAmount_lt: BigInt
  indexingDelegatorRewardAmount_gte: BigInt
  indexingDelegatorRewardAmount_lte: BigInt
  indexingDelegatorRewardAmount_in: [BigInt!]
  indexingDelegatorRewardAmount_not_in: [BigInt!]
  queryFeesAmount: BigInt
  queryFeesAmount_not: BigInt
  queryFeesAmount_gt: BigInt
  queryFeesAmount_lt: BigInt
  queryFeesAmount_gte: BigInt
  queryFeesAmount_lte: BigInt
  queryFeesAmount_in: [BigInt!]
  queryFeesAmount_not_in: [BigInt!]
  queryFeeRebates: BigInt
  queryFeeRebates_not: BigInt
  queryFeeRebates_gt: BigInt
  queryFeeRebates_lt: BigInt
  queryFeeRebates_gte: BigInt
  queryFeeRebates_lte: BigInt
  queryFeeRebates_in: [BigInt!]
  queryFeeRebates_not_in: [BigInt!]
  delegatorQueryFees: BigInt
  delegatorQueryFees_not: BigInt
  delegatorQueryFees_gt: BigInt
  delegatorQueryFees_lt: BigInt
  delegatorQueryFees_gte: BigInt
  delegatorQueryFees_lte: BigInt
  delegatorQueryFees_in: [BigInt!]
  delegatorQueryFees_not_in: [BigInt!]
  curatorFeeRewards: BigInt
  curatorFeeRewards_not: BigInt
  curatorFeeRewards_gt: BigInt
  curatorFeeRewards_lt: BigInt
  curatorFeeRewards_gte: BigInt
  curatorFeeRewards_lte: BigInt
  curatorFeeRewards_in: [BigInt!]
  curatorFeeRewards_not_in: [BigInt!]
  signalledTokens: BigInt
  signalledTokens_not: BigInt
  signalledTokens_gt: BigInt
  signalledTokens_lt: BigInt
  signalledTokens_gte: BigInt
  signalledTokens_lte: BigInt
  signalledTokens_in: [BigInt!]
  signalledTokens_not_in: [BigInt!]
  unsignalledTokens: BigInt
  unsignalledTokens_not: BigInt
  unsignalledTokens_gt: BigInt
  unsignalledTokens_lt: BigInt
  unsignalledTokens_gte: BigInt
  unsignalledTokens_lte: BigInt
  unsignalledTokens_in: [BigInt!]
  unsignalledTokens_not_in: [BigInt!]
  signalAmount: BigInt
  signalAmount_not: BigInt
  signalAmount_gt: BigInt
  signalAmount_lt: BigInt
  signalAmount_gte: BigInt
  signalAmount_lte: BigInt
  signalAmount_in: [BigInt!]
  signalAmount_not_in: [BigInt!]
  pricePerShare: ANALYTICS__BigDecimal
  pricePerShare_not: ANALYTICS__BigDecimal
  pricePerShare_gt: ANALYTICS__BigDecimal
  pricePerShare_lt: ANALYTICS__BigDecimal
  pricePerShare_gte: ANALYTICS__BigDecimal
  pricePerShare_lte: ANALYTICS__BigDecimal
  pricePerShare_in: [ANALYTICS__BigDecimal!]
  pricePerShare_not_in: [ANALYTICS__BigDecimal!]
  curatorSignals_: ANALYTICS__Signal_filter
  reserveRatio: Int
  reserveRatio_not: Int
  reserveRatio_gt: Int
  reserveRatio_lt: Int
  reserveRatio_gte: Int
  reserveRatio_lte: Int
  reserveRatio_in: [Int!]
  reserveRatio_not_in: [Int!]
  dailyData_: ANALYTICS__SubgraphDeploymentDailyData_filter
  """Filter for the block changed event."""
  _change_block: ANALYTICS__BlockChangedFilter
}

enum ANALYTICS__SubgraphDeployment_orderBy {
  id
  versions
  createdAt
  deniedAt
  stakedTokens
  indexerAllocations
  indexingRewardAmount
  indexingIndexerRewardAmount
  indexingDelegatorRewardAmount
  queryFeesAmount
  queryFeeRebates
  delegatorQueryFees
  curatorFeeRewards
  signalledTokens
  unsignalledTokens
  signalAmount
  pricePerShare
  curatorSignals
  reserveRatio
  dailyData
}

"""
The SubgraphVersion entity represents a version of the Subgraph. A new SubgraphVersion is created
whenever there is an update to the Subgraph triggered by the owner. The new SubgraphVersion can
then point to a new SubgraphDeployment, thus allowing the Subgraph to resolve to a different
deployment, while keeping the same endpoint. The metadata and label are stored on IPFS. The label
is for the developer to provide a semantic version. This is different from the version, which is
just a counter than increases each time a new SubgraphVersion is created for a Subgraph.

"""
type ANALYTICS__SubgraphVersion {
  """Concatenation of subgraph, subgraph deployment, and version ID"""
  id: ID!
  """Subgraph of this version"""
  subgraph: ANALYTICS__Subgraph!
  """Subgraph deployment of this version"""
  subgraphDeployment: ANALYTICS__SubgraphDeployment!
  """Version number"""
  version: Int!
  """Creation timestamp"""
  createdAt: Int!
  """Subgraph version metadata content address"""
  metadataHash: ANALYTICS__Bytes
  entityVersion: Int!
  linkedEntity: ANALYTICS__SubgraphVersion
}

input ANALYTICS__SubgraphVersion_filter {
  id: ID
  id_not: ID
  id_gt: ID
  id_lt: ID
  id_gte: ID
  id_lte: ID
  id_in: [ID!]
  id_not_in: [ID!]
  subgraph: String
  subgraph_not: String
  subgraph_gt: String
  subgraph_lt: String
  subgraph_gte: String
  subgraph_lte: String
  subgraph_in: [String!]
  subgraph_not_in: [String!]
  subgraph_contains: String
  subgraph_contains_nocase: String
  subgraph_not_contains: String
  subgraph_not_contains_nocase: String
  subgraph_starts_with: String
  subgraph_starts_with_nocase: String
  subgraph_not_starts_with: String
  subgraph_not_starts_with_nocase: String
  subgraph_ends_with: String
  subgraph_ends_with_nocase: String
  subgraph_not_ends_with: String
  subgraph_not_ends_with_nocase: String
  subgraph_: ANALYTICS__Subgraph_filter
  subgraphDeployment: String
  subgraphDeployment_not: String
  subgraphDeployment_gt: String
  subgraphDeployment_lt: String
  subgraphDeployment_gte: String
  subgraphDeployment_lte: String
  subgraphDeployment_in: [String!]
  subgraphDeployment_not_in: [String!]
  subgraphDeployment_contains: String
  subgraphDeployment_contains_nocase: String
  subgraphDeployment_not_contains: String
  subgraphDeployment_not_contains_nocase: String
  subgraphDeployment_starts_with: String
  subgraphDeployment_starts_with_nocase: String
  subgraphDeployment_not_starts_with: String
  subgraphDeployment_not_starts_with_nocase: String
  subgraphDeployment_ends_with: String
  subgraphDeployment_ends_with_nocase: String
  subgraphDeployment_not_ends_with: String
  subgraphDeployment_not_ends_with_nocase: String
  subgraphDeployment_: ANALYTICS__SubgraphDeployment_filter
  version: Int
  version_not: Int
  version_gt: Int
  version_lt: Int
  version_gte: Int
  version_lte: Int
  version_in: [Int!]
  version_not_in: [Int!]
  createdAt: Int
  createdAt_not: Int
  createdAt_gt: Int
  createdAt_lt: Int
  createdAt_gte: Int
  createdAt_lte: Int
  createdAt_in: [Int!]
  createdAt_not_in: [Int!]
  metadataHash: ANALYTICS__Bytes
  metadataHash_not: ANALYTICS__Bytes
  metadataHash_gt: ANALYTICS__Bytes
  metadataHash_lt: ANALYTICS__Bytes
  metadataHash_gte: ANALYTICS__Bytes
  metadataHash_lte: ANALYTICS__Bytes
  metadataHash_in: [ANALYTICS__Bytes!]
  metadataHash_not_in: [ANALYTICS__Bytes!]
  metadataHash_contains: ANALYTICS__Bytes
  metadataHash_not_contains: ANALYTICS__Bytes
  entityVersion: Int
  entityVersion_not: Int
  entityVersion_gt: Int
  entityVersion_lt: Int
  entityVersion_gte: Int
  entityVersion_lte: Int
  entityVersion_in: [Int!]
  entityVersion_not_in: [Int!]
  linkedEntity: String
  linkedEntity_not: String
  linkedEntity_gt: String
  linkedEntity_lt: String
  linkedEntity_gte: String
  linkedEntity_lte: String
  linkedEntity_in: [String!]
  linkedEntity_not_in: [String!]
  linkedEntity_contains: String
  linkedEntity_contains_nocase: String
  linkedEntity_not_contains: String
  linkedEntity_not_contains_nocase: String
  linkedEntity_starts_with: String
  linkedEntity_starts_with_nocase: String
  linkedEntity_not_starts_with: String
  linkedEntity_not_starts_with_nocase: String
  linkedEntity_ends_with: String
  linkedEntity_ends_with_nocase: String
  linkedEntity_not_ends_with: String
  linkedEntity_not_ends_with_nocase: String
  linkedEntity_: ANALYTICS__SubgraphVersion_filter
  """Filter for the block changed event."""
  _change_block: ANALYTICS__BlockChangedFilter
}

enum ANALYTICS__SubgraphVersion_orderBy {
  id
  subgraph
  subgraphDeployment
  version
  createdAt
  metadataHash
  entityVersion
  linkedEntity
}

input ANALYTICS__Subgraph_filter {
  id: ID
  id_not: ID
  id_gt: ID
  id_lt: ID
  id_gte: ID
  id_lte: ID
  id_in: [ID!]
  id_not_in: [ID!]
  owner: String
  owner_not: String
  owner_gt: String
  owner_lt: String
  owner_gte: String
  owner_lte: String
  owner_in: [String!]
  owner_not_in: [String!]
  owner_contains: String
  owner_contains_nocase: String
  owner_not_contains: String
  owner_not_contains_nocase: String
  owner_starts_with: String
  owner_starts_with_nocase: String
  owner_not_starts_with: String
  owner_not_starts_with_nocase: String
  owner_ends_with: String
  owner_ends_with_nocase: String
  owner_not_ends_with: String
  owner_not_ends_with_nocase: String
  owner_: ANALYTICS__GraphAccount_filter
  currentVersion: String
  currentVersion_not: String
  currentVersion_gt: String
  currentVersion_lt: String
  currentVersion_gte: String
  currentVersion_lte: String
  currentVersion_in: [String!]
  currentVersion_not_in: [String!]
  currentVersion_contains: String
  currentVersion_contains_nocase: String
  currentVersion_not_contains: String
  currentVersion_not_contains_nocase: String
  currentVersion_starts_with: String
  currentVersion_starts_with_nocase: String
  currentVersion_not_starts_with: String
  currentVersion_not_starts_with_nocase: String
  currentVersion_ends_with: String
  currentVersion_ends_with_nocase: String
  currentVersion_not_ends_with: String
  currentVersion_not_ends_with_nocase: String
  currentVersion_: ANALYTICS__SubgraphVersion_filter
  pastVersions_: ANALYTICS__SubgraphVersion_filter
  versions_: ANALYTICS__SubgraphVersion_filter
  versionCount: BigInt
  versionCount_not: BigInt
  versionCount_gt: BigInt
  versionCount_lt: BigInt
  versionCount_gte: BigInt
  versionCount_lte: BigInt
  versionCount_in: [BigInt!]
  versionCount_not_in: [BigInt!]
  createdAt: Int
  createdAt_not: Int
  createdAt_gt: Int
  createdAt_lt: Int
  createdAt_gte: Int
  createdAt_lte: Int
  createdAt_in: [Int!]
  createdAt_not_in: [Int!]
  updatedAt: Int
  updatedAt_not: Int
  updatedAt_gt: Int
  updatedAt_lt: Int
  updatedAt_gte: Int
  updatedAt_lte: Int
  updatedAt_in: [Int!]
  updatedAt_not_in: [Int!]
  active: Boolean
  active_not: Boolean
  active_in: [Boolean!]
  active_not_in: [Boolean!]
  migrated: Boolean
  migrated_not: Boolean
  migrated_in: [Boolean!]
  migrated_not_in: [Boolean!]
  initializing: Boolean
  initializing_not: Boolean
  initializing_in: [Boolean!]
  initializing_not_in: [Boolean!]
  nftID: String
  nftID_not: String
  nftID_gt: String
  nftID_lt: String
  nftID_gte: String
  nftID_lte: String
  nftID_in: [String!]
  nftID_not_in: [String!]
  nftID_contains: String
  nftID_contains_nocase: String
  nftID_not_contains: String
  nftID_not_contains_nocase: String
  nftID_starts_with: String
  nftID_starts_with_nocase: String
  nftID_not_starts_with: String
  nftID_not_starts_with_nocase: String
  nftID_ends_with: String
  nftID_ends_with_nocase: String
  nftID_not_ends_with: String
  nftID_not_ends_with_nocase: String
  oldID: String
  oldID_not: String
  oldID_gt: String
  oldID_lt: String
  oldID_gte: String
  oldID_lte: String
  oldID_in: [String!]
  oldID_not_in: [String!]
  oldID_contains: String
  oldID_contains_nocase: String
  oldID_not_contains: String
  oldID_not_contains_nocase: String
  oldID_starts_with: String
  oldID_starts_with_nocase: String
  oldID_not_starts_with: String
  oldID_not_starts_with_nocase: String
  oldID_ends_with: String
  oldID_ends_with_nocase: String
  oldID_not_ends_with: String
  oldID_not_ends_with_nocase: String
  creatorAddress: ANALYTICS__Bytes
  creatorAddress_not: ANALYTICS__Bytes
  creatorAddress_gt: ANALYTICS__Bytes
  creatorAddress_lt: ANALYTICS__Bytes
  creatorAddress_gte: ANALYTICS__Bytes
  creatorAddress_lte: ANALYTICS__Bytes
  creatorAddress_in: [ANALYTICS__Bytes!]
  creatorAddress_not_in: [ANALYTICS__Bytes!]
  creatorAddress_contains: ANALYTICS__Bytes
  creatorAddress_not_contains: ANALYTICS__Bytes
  subgraphNumber: BigInt
  subgraphNumber_not: BigInt
  subgraphNumber_gt: BigInt
  subgraphNumber_lt: BigInt
  subgraphNumber_gte: BigInt
  subgraphNumber_lte: BigInt
  subgraphNumber_in: [BigInt!]
  subgraphNumber_not_in: [BigInt!]
  entityVersion: Int
  entityVersion_not: Int
  entityVersion_gt: Int
  entityVersion_lt: Int
  entityVersion_gte: Int
  entityVersion_lte: Int
  entityVersion_in: [Int!]
  entityVersion_not_in: [Int!]
  linkedEntity: String
  linkedEntity_not: String
  linkedEntity_gt: String
  linkedEntity_lt: String
  linkedEntity_gte: String
  linkedEntity_lte: String
  linkedEntity_in: [String!]
  linkedEntity_not_in: [String!]
  linkedEntity_contains: String
  linkedEntity_contains_nocase: String
  linkedEntity_not_contains: String
  linkedEntity_not_contains_nocase: String
  linkedEntity_starts_with: String
  linkedEntity_starts_with_nocase: String
  linkedEntity_not_starts_with: String
  linkedEntity_not_starts_with_nocase: String
  linkedEntity_ends_with: String
  linkedEntity_ends_with_nocase: String
  linkedEntity_not_ends_with: String
  linkedEntity_not_ends_with_nocase: String
  linkedEntity_: ANALYTICS__Subgraph_filter
  signalledTokens: BigInt
  signalledTokens_not: BigInt
  signalledTokens_gt: BigInt
  signalledTokens_lt: BigInt
  signalledTokens_gte: BigInt
  signalledTokens_lte: BigInt
  signalledTokens_in: [BigInt!]
  signalledTokens_not_in: [BigInt!]
  unsignalledTokens: BigInt
  unsignalledTokens_not: BigInt
  unsignalledTokens_gt: BigInt
  unsignalledTokens_lt: BigInt
  unsignalledTokens_gte: BigInt
  unsignalledTokens_lte: BigInt
  unsignalledTokens_in: [BigInt!]
  unsignalledTokens_not_in: [BigInt!]
  nameSignalAmount: BigInt
  nameSignalAmount_not: BigInt
  nameSignalAmount_gt: BigInt
  nameSignalAmount_lt: BigInt
  nameSignalAmount_gte: BigInt
  nameSignalAmount_lte: BigInt
  nameSignalAmount_in: [BigInt!]
  nameSignalAmount_not_in: [BigInt!]
  reserveRatio: Int
  reserveRatio_not: Int
  reserveRatio_gt: Int
  reserveRatio_lt: Int
  reserveRatio_gte: Int
  reserveRatio_lte: Int
  reserveRatio_in: [Int!]
  reserveRatio_not_in: [Int!]
  withdrawableTokens: BigInt
  withdrawableTokens_not: BigInt
  withdrawableTokens_gt: BigInt
  withdrawableTokens_lt: BigInt
  withdrawableTokens_gte: BigInt
  withdrawableTokens_lte: BigInt
  withdrawableTokens_in: [BigInt!]
  withdrawableTokens_not_in: [BigInt!]
  withdrawnTokens: BigInt
  withdrawnTokens_not: BigInt
  withdrawnTokens_gt: BigInt
  withdrawnTokens_lt: BigInt
  withdrawnTokens_gte: BigInt
  withdrawnTokens_lte: BigInt
  withdrawnTokens_in: [BigInt!]
  withdrawnTokens_not_in: [BigInt!]
  nameSignals_: ANALYTICS__NameSignal_filter
  metadataHash: ANALYTICS__Bytes
  metadataHash_not: ANALYTICS__Bytes
  metadataHash_gt: ANALYTICS__Bytes
  metadataHash_lt: ANALYTICS__Bytes
  metadataHash_gte: ANALYTICS__Bytes
  metadataHash_lte: ANALYTICS__Bytes
  metadataHash_in: [ANALYTICS__Bytes!]
  metadataHash_not_in: [ANALYTICS__Bytes!]
  metadataHash_contains: ANALYTICS__Bytes
  metadataHash_not_contains: ANALYTICS__Bytes
  """Filter for the block changed event."""
  _change_block: ANALYTICS__BlockChangedFilter
}

enum ANALYTICS__Subgraph_orderBy {
  id
  owner
  currentVersion
  pastVersions
  versions
  versionCount
  createdAt
  updatedAt
  active
  migrated
  initializing
  nftID
  oldID
  creatorAddress
  subgraphNumber
  entityVersion
  linkedEntity
  signalledTokens
  unsignalledTokens
  nameSignalAmount
  reserveRatio
  withdrawableTokens
  withdrawnTokens
  nameSignals
  metadataHash
}

type Subscription {
  ANALYTICS__graphNetwork(
    id: ID!
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ANALYTICS__Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ANALYTICS___SubgraphErrorPolicy_! = deny
  ): ANALYTICS__GraphNetwork
  ANALYTICS__graphNetworks(
    skip: Int = 0
    first: Int = 100
    orderBy: ANALYTICS__GraphNetwork_orderBy
    orderDirection: ANALYTICS__OrderDirection
    where: ANALYTICS__GraphNetwork_filter
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ANALYTICS__Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ANALYTICS___SubgraphErrorPolicy_! = deny
  ): [ANALYTICS__GraphNetwork!]!
  ANALYTICS__graphAccount(
    id: ID!
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ANALYTICS__Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ANALYTICS___SubgraphErrorPolicy_! = deny
  ): ANALYTICS__GraphAccount
  ANALYTICS__graphAccounts(
    skip: Int = 0
    first: Int = 100
    orderBy: ANALYTICS__GraphAccount_orderBy
    orderDirection: ANALYTICS__OrderDirection
    where: ANALYTICS__GraphAccount_filter
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ANALYTICS__Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ANALYTICS___SubgraphErrorPolicy_! = deny
  ): [ANALYTICS__GraphAccount!]!
  ANALYTICS__graphAccountName(
    id: ID!
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ANALYTICS__Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ANALYTICS___SubgraphErrorPolicy_! = deny
  ): ANALYTICS__GraphAccountName
  ANALYTICS__graphAccountNames(
    skip: Int = 0
    first: Int = 100
    orderBy: ANALYTICS__GraphAccountName_orderBy
    orderDirection: ANALYTICS__OrderDirection
    where: ANALYTICS__GraphAccountName_filter
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ANALYTICS__Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ANALYTICS___SubgraphErrorPolicy_! = deny
  ): [ANALYTICS__GraphAccountName!]!
  ANALYTICS__subgraph(
    id: ID!
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ANALYTICS__Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ANALYTICS___SubgraphErrorPolicy_! = deny
  ): ANALYTICS__Subgraph
  ANALYTICS__subgraphs(
    skip: Int = 0
    first: Int = 100
    orderBy: ANALYTICS__Subgraph_orderBy
    orderDirection: ANALYTICS__OrderDirection
    where: ANALYTICS__Subgraph_filter
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ANALYTICS__Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ANALYTICS___SubgraphErrorPolicy_! = deny
  ): [ANALYTICS__Subgraph!]!
  ANALYTICS__subgraphVersion(
    id: ID!
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ANALYTICS__Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ANALYTICS___SubgraphErrorPolicy_! = deny
  ): ANALYTICS__SubgraphVersion
  ANALYTICS__subgraphVersions(
    skip: Int = 0
    first: Int = 100
    orderBy: ANALYTICS__SubgraphVersion_orderBy
    orderDirection: ANALYTICS__OrderDirection
    where: ANALYTICS__SubgraphVersion_filter
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ANALYTICS__Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ANALYTICS___SubgraphErrorPolicy_! = deny
  ): [ANALYTICS__SubgraphVersion!]!
  ANALYTICS__subgraphDeployment(
    id: ID!
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ANALYTICS__Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ANALYTICS___SubgraphErrorPolicy_! = deny
  ): ANALYTICS__SubgraphDeployment
  ANALYTICS__subgraphDeployments(
    skip: Int = 0
    first: Int = 100
    orderBy: ANALYTICS__SubgraphDeployment_orderBy
    orderDirection: ANALYTICS__OrderDirection
    where: ANALYTICS__SubgraphDeployment_filter
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ANALYTICS__Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ANALYTICS___SubgraphErrorPolicy_! = deny
  ): [ANALYTICS__SubgraphDeployment!]!
  ANALYTICS__indexer(
    id: ID!
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ANALYTICS__Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ANALYTICS___SubgraphErrorPolicy_! = deny
  ): ANALYTICS__Indexer
  ANALYTICS__indexers(
    skip: Int = 0
    first: Int = 100
    orderBy: ANALYTICS__Indexer_orderBy
    orderDirection: ANALYTICS__OrderDirection
    where: ANALYTICS__Indexer_filter
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ANALYTICS__Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ANALYTICS___SubgraphErrorPolicy_! = deny
  ): [ANALYTICS__Indexer!]!
  ANALYTICS__allocation(
    id: ID!
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ANALYTICS__Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ANALYTICS___SubgraphErrorPolicy_! = deny
  ): ANALYTICS__Allocation
  ANALYTICS__allocations(
    skip: Int = 0
    first: Int = 100
    orderBy: ANALYTICS__Allocation_orderBy
    orderDirection: ANALYTICS__OrderDirection
    where: ANALYTICS__Allocation_filter
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ANALYTICS__Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ANALYTICS___SubgraphErrorPolicy_! = deny
  ): [ANALYTICS__Allocation!]!
  ANALYTICS__pool(
    id: ID!
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ANALYTICS__Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ANALYTICS___SubgraphErrorPolicy_! = deny
  ): ANALYTICS__Pool
  ANALYTICS__pools(
    skip: Int = 0
    first: Int = 100
    orderBy: ANALYTICS__Pool_orderBy
    orderDirection: ANALYTICS__OrderDirection
    where: ANALYTICS__Pool_filter
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ANALYTICS__Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ANALYTICS___SubgraphErrorPolicy_! = deny
  ): [ANALYTICS__Pool!]!
  ANALYTICS__delegator(
    id: ID!
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ANALYTICS__Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ANALYTICS___SubgraphErrorPolicy_! = deny
  ): ANALYTICS__Delegator
  ANALYTICS__delegators(
    skip: Int = 0
    first: Int = 100
    orderBy: ANALYTICS__Delegator_orderBy
    orderDirection: ANALYTICS__OrderDirection
    where: ANALYTICS__Delegator_filter
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ANALYTICS__Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ANALYTICS___SubgraphErrorPolicy_! = deny
  ): [ANALYTICS__Delegator!]!
  ANALYTICS__delegatedStake(
    id: ID!
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ANALYTICS__Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ANALYTICS___SubgraphErrorPolicy_! = deny
  ): ANALYTICS__DelegatedStake
  ANALYTICS__delegatedStakes(
    skip: Int = 0
    first: Int = 100
    orderBy: ANALYTICS__DelegatedStake_orderBy
    orderDirection: ANALYTICS__OrderDirection
    where: ANALYTICS__DelegatedStake_filter
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ANALYTICS__Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ANALYTICS___SubgraphErrorPolicy_! = deny
  ): [ANALYTICS__DelegatedStake!]!
  ANALYTICS__curator(
    id: ID!
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ANALYTICS__Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ANALYTICS___SubgraphErrorPolicy_! = deny
  ): ANALYTICS__Curator
  ANALYTICS__curators(
    skip: Int = 0
    first: Int = 100
    orderBy: ANALYTICS__Curator_orderBy
    orderDirection: ANALYTICS__OrderDirection
    where: ANALYTICS__Curator_filter
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ANALYTICS__Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ANALYTICS___SubgraphErrorPolicy_! = deny
  ): [ANALYTICS__Curator!]!
  ANALYTICS__signal(
    id: ID!
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ANALYTICS__Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ANALYTICS___SubgraphErrorPolicy_! = deny
  ): ANALYTICS__Signal
  ANALYTICS__signals(
    skip: Int = 0
    first: Int = 100
    orderBy: ANALYTICS__Signal_orderBy
    orderDirection: ANALYTICS__OrderDirection
    where: ANALYTICS__Signal_filter
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ANALYTICS__Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ANALYTICS___SubgraphErrorPolicy_! = deny
  ): [ANALYTICS__Signal!]!
  ANALYTICS__nameSignal(
    id: ID!
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ANALYTICS__Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ANALYTICS___SubgraphErrorPolicy_! = deny
  ): ANALYTICS__NameSignal
  ANALYTICS__nameSignals(
    skip: Int = 0
    first: Int = 100
    orderBy: ANALYTICS__NameSignal_orderBy
    orderDirection: ANALYTICS__OrderDirection
    where: ANALYTICS__NameSignal_filter
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ANALYTICS__Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ANALYTICS___SubgraphErrorPolicy_! = deny
  ): [ANALYTICS__NameSignal!]!
  ANALYTICS__nameSignalTransaction(
    id: ID!
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ANALYTICS__Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ANALYTICS___SubgraphErrorPolicy_! = deny
  ): ANALYTICS__NameSignalTransaction
  ANALYTICS__nameSignalTransactions(
    skip: Int = 0
    first: Int = 100
    orderBy: ANALYTICS__NameSignalTransaction_orderBy
    orderDirection: ANALYTICS__OrderDirection
    where: ANALYTICS__NameSignalTransaction_filter
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ANALYTICS__Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ANALYTICS___SubgraphErrorPolicy_! = deny
  ): [ANALYTICS__NameSignalTransaction!]!
  ANALYTICS__signalTransaction(
    id: ID!
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ANALYTICS__Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ANALYTICS___SubgraphErrorPolicy_! = deny
  ): ANALYTICS__SignalTransaction
  ANALYTICS__signalTransactions(
    skip: Int = 0
    first: Int = 100
    orderBy: ANALYTICS__SignalTransaction_orderBy
    orderDirection: ANALYTICS__OrderDirection
    where: ANALYTICS__SignalTransaction_filter
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ANALYTICS__Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ANALYTICS___SubgraphErrorPolicy_! = deny
  ): [ANALYTICS__SignalTransaction!]!
  ANALYTICS__indexerDelegatedStakeRelation(
    id: ID!
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ANALYTICS__Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ANALYTICS___SubgraphErrorPolicy_! = deny
  ): ANALYTICS__IndexerDelegatedStakeRelation
  ANALYTICS__indexerDelegatedStakeRelations(
    skip: Int = 0
    first: Int = 100
    orderBy: ANALYTICS__IndexerDelegatedStakeRelation_orderBy
    orderDirection: ANALYTICS__OrderDirection
    where: ANALYTICS__IndexerDelegatedStakeRelation_filter
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ANALYTICS__Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ANALYTICS___SubgraphErrorPolicy_! = deny
  ): [ANALYTICS__IndexerDelegatedStakeRelation!]!
  ANALYTICS__indexerDailyData(
    id: ID!
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ANALYTICS__Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ANALYTICS___SubgraphErrorPolicy_! = deny
  ): ANALYTICS__IndexerDailyData
  ANALYTICS__indexerDailyDatas(
    skip: Int = 0
    first: Int = 100
    orderBy: ANALYTICS__IndexerDailyData_orderBy
    orderDirection: ANALYTICS__OrderDirection
    where: ANALYTICS__IndexerDailyData_filter
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ANALYTICS__Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ANALYTICS___SubgraphErrorPolicy_! = deny
  ): [ANALYTICS__IndexerDailyData!]!
  ANALYTICS__delegatorDailyData(
    id: ID!
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ANALYTICS__Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ANALYTICS___SubgraphErrorPolicy_! = deny
  ): ANALYTICS__DelegatorDailyData
  ANALYTICS__delegatorDailyDatas(
    skip: Int = 0
    first: Int = 100
    orderBy: ANALYTICS__DelegatorDailyData_orderBy
    orderDirection: ANALYTICS__OrderDirection
    where: ANALYTICS__DelegatorDailyData_filter
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ANALYTICS__Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ANALYTICS___SubgraphErrorPolicy_! = deny
  ): [ANALYTICS__DelegatorDailyData!]!
  ANALYTICS__delegatedStakeDailyData(
    id: ID!
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ANALYTICS__Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ANALYTICS___SubgraphErrorPolicy_! = deny
  ): ANALYTICS__DelegatedStakeDailyData
  ANALYTICS__delegatedStakeDailyDatas(
    skip: Int = 0
    first: Int = 100
    orderBy: ANALYTICS__DelegatedStakeDailyData_orderBy
    orderDirection: ANALYTICS__OrderDirection
    where: ANALYTICS__DelegatedStakeDailyData_filter
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ANALYTICS__Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ANALYTICS___SubgraphErrorPolicy_! = deny
  ): [ANALYTICS__DelegatedStakeDailyData!]!
  ANALYTICS__delegatorDelegatedStakeDailyRelation(
    id: ID!
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ANALYTICS__Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ANALYTICS___SubgraphErrorPolicy_! = deny
  ): ANALYTICS__DelegatorDelegatedStakeDailyRelation
  ANALYTICS__delegatorDelegatedStakeDailyRelations(
    skip: Int = 0
    first: Int = 100
    orderBy: ANALYTICS__DelegatorDelegatedStakeDailyRelation_orderBy
    orderDirection: ANALYTICS__OrderDirection
    where: ANALYTICS__DelegatorDelegatedStakeDailyRelation_filter
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ANALYTICS__Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ANALYTICS___SubgraphErrorPolicy_! = deny
  ): [ANALYTICS__DelegatorDelegatedStakeDailyRelation!]!
  ANALYTICS__subgraphDeploymentDailyData(
    id: ID!
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ANALYTICS__Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ANALYTICS___SubgraphErrorPolicy_! = deny
  ): ANALYTICS__SubgraphDeploymentDailyData
  ANALYTICS__subgraphDeploymentDailyDatas(
    skip: Int = 0
    first: Int = 100
    orderBy: ANALYTICS__SubgraphDeploymentDailyData_orderBy
    orderDirection: ANALYTICS__OrderDirection
    where: ANALYTICS__SubgraphDeploymentDailyData_filter
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ANALYTICS__Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ANALYTICS___SubgraphErrorPolicy_! = deny
  ): [ANALYTICS__SubgraphDeploymentDailyData!]!
  ANALYTICS__graphNetworkDailyData(
    id: ID!
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ANALYTICS__Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ANALYTICS___SubgraphErrorPolicy_! = deny
  ): ANALYTICS__GraphNetworkDailyData
  ANALYTICS__graphNetworkDailyDatas(
    skip: Int = 0
    first: Int = 100
    orderBy: ANALYTICS__GraphNetworkDailyData_orderBy
    orderDirection: ANALYTICS__OrderDirection
    where: ANALYTICS__GraphNetworkDailyData_filter
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ANALYTICS__Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ANALYTICS___SubgraphErrorPolicy_! = deny
  ): [ANALYTICS__GraphNetworkDailyData!]!
  ANALYTICS__transaction(
    id: ID!
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ANALYTICS__Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ANALYTICS___SubgraphErrorPolicy_! = deny
  ): ANALYTICS__Transaction
  ANALYTICS__transactions(
    skip: Int = 0
    first: Int = 100
    orderBy: ANALYTICS__Transaction_orderBy
    orderDirection: ANALYTICS__OrderDirection
    where: ANALYTICS__Transaction_filter
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ANALYTICS__Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ANALYTICS___SubgraphErrorPolicy_! = deny
  ): [ANALYTICS__Transaction!]!
  """Access to subgraph metadata"""
  ANALYTICS___meta(block: ANALYTICS__Block_height): ANALYTICS___Meta_
}

"""
A generic transaction in The Graph Network

"""
interface ANALYTICS__Transaction {
  """Transaction hash concatenated with event log index"""
  id: ID!
  """Block number for the transaction"""
  blockNumber: Int!
  """Timestamp for the transaction"""
  timestamp: Int!
  """Signer of the transaction"""
  signer: ANALYTICS__GraphAccount!
  """Type of Graph Network transaction"""
  type: ANALYTICS__TransactionType!
}

enum ANALYTICS__TransactionType {
  Stake
  Unstake
  MintSignal
  BurnSignal
  MintNSignal
  BurnNSignal
}

input ANALYTICS__Transaction_filter {
  id: ID
  id_not: ID
  id_gt: ID
  id_lt: ID
  id_gte: ID
  id_lte: ID
  id_in: [ID!]
  id_not_in: [ID!]
  blockNumber: Int
  blockNumber_not: Int
  blockNumber_gt: Int
  blockNumber_lt: Int
  blockNumber_gte: Int
  blockNumber_lte: Int
  blockNumber_in: [Int!]
  blockNumber_not_in: [Int!]
  timestamp: Int
  timestamp_not: Int
  timestamp_gt: Int
  timestamp_lt: Int
  timestamp_gte: Int
  timestamp_lte: Int
  timestamp_in: [Int!]
  timestamp_not_in: [Int!]
  signer: String
  signer_not: String
  signer_gt: String
  signer_lt: String
  signer_gte: String
  signer_lte: String
  signer_in: [String!]
  signer_not_in: [String!]
  signer_contains: String
  signer_contains_nocase: String
  signer_not_contains: String
  signer_not_contains_nocase: String
  signer_starts_with: String
  signer_starts_with_nocase: String
  signer_not_starts_with: String
  signer_not_starts_with_nocase: String
  signer_ends_with: String
  signer_ends_with_nocase: String
  signer_not_ends_with: String
  signer_not_ends_with_nocase: String
  signer_: ANALYTICS__GraphAccount_filter
  type: ANALYTICS__TransactionType
  type_not: ANALYTICS__TransactionType
  type_in: [ANALYTICS__TransactionType!]
  type_not_in: [ANALYTICS__TransactionType!]
  """Filter for the block changed event."""
  _change_block: ANALYTICS__BlockChangedFilter
}

enum ANALYTICS__Transaction_orderBy {
  id
  blockNumber
  timestamp
  signer
  type
}

type ANALYTICS___Block_ {
  """The hash of the block"""
  hash: ANALYTICS__Bytes
  """The block number"""
  number: Int!
  """Integer representation of the timestamp stored in blocks for the chain"""
  timestamp: Int
}

"""The type for the top-level _meta field"""
type ANALYTICS___Meta_ {
  """
  Information about a specific subgraph block. The hash of the block
  will be null if the _meta field has a block constraint that asks for
  a block number. It will be filled if the _meta field has no block constraint
  and therefore asks for the latest  block
  
  """
  block: ANALYTICS___Block_!
  """The deployment ID"""
  deployment: String!
  """If `true`, the subgraph encountered indexing errors at some past block"""
  hasIndexingErrors: Boolean!
}

enum ANALYTICS___SubgraphErrorPolicy_ {
  """Data will be returned even if the subgraph has indexing errors"""
  allow
  """
  If the subgraph has indexing errors, data will be omitted. The default.
  """
  deny
}